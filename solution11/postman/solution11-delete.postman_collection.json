{
	"info": {
		"_postman_id": "d29265da-e4ec-4654-af6b-522faa54cba9",
		"name": "solution11-delete",
		"description": "Based on Template 1.7",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Set Collection Parameters",
			"item": [
				{
					"name": "set parameters",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da7de5f8-1348-4013-b596-29bb6f95f8ee",
								"exec": [
									"pm.test(\"Setting Parameters\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5d367922-1a05-4637-adbf-23d3a6402824",
								"exec": [
									"//Define the number of virtual servers in this solution\r",
									"pm.collectionVariables.set(\"VIPS\", \"1\");\r",
									"\r",
									"//THis below varaibles are using for defining the tenant ID in AS3.  This should be the solution number. Example: solution1 or solution2.\r",
									"pm.collectionVariables.set(\"PATH_NAME\", \"solution11\");\r",
									"pm.collectionVariables.set(\"PARTITION_NAME\", \"solution11\");\r",
									"\r",
									"//This is the primary section defining the settings for the application the solutions is going to deploy\r",
									"pm.collectionVariables.set(\"DNS1_NAME\", \"solution11.acme.com\");\r",
									"pm.collectionVariables.set(\"VS1_NAME\", \"solution11\");\r",
									"\r",
									"\r",
									"//This section is used when building two virtrual servers as part of a solutions or when a reference is needed to another solutions.  For example, if your solutions involved Federation you will need to define both the FQDNs for the both the SP and IDP.  \r",
									"pm.collectionVariables.set(\"DNS2_NAME\", \"as.acme.com\");\r",
									"pm.collectionVariables.set(\"VS2_NAME\", \"as\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://10.1.1.4/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"10",
								"1",
								"1",
								"4"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Start-Loop Datacenters",
			"item": [
				{
					"name": "start",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "603a3a12-b255-4c71-85ab-239d7eff124c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6265d801-af31-4fcd-b415-551443a5fb67",
								"exec": [
									"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
									"var DC2_APM = pm.environment.get(\"DC2_APM\");\r",
									"\r",
									"\r",
									"if (DC2_APM === 'true' && DC_COUNTER === '2') {\r",
									"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.5\");\r",
									"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP2_SCOPE\"));\r",
									"\r",
									"} else {\r",
									"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.4\");\r",
									"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP1_SCOPE\"));\r",
									"pm.collectionVariables.set('DC_COUNTER', '1' );\r",
									"\r",
									"\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "93d16725-e31e-410c-8074-19ef65ed29c2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2e323dd4-d4ec-4417-8439-39223ea9eeef",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "External DNS",
			"item": [
				{
					"name": "Start DNS",
					"item": [
						{
							"name": "start-dns",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3e64d7a-f970-4ee3-92fa-46a16ad23c99",
										"exec": [
											"var DC2_APM = pm.environment.get(\"DC2_APM\");",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
											"",
											"if (DC2_APM === 'true' && DC_COUNTER === '2') {",
											"    postman.setNextRequest(\"bigip5-retrieve-addres-server-vs1\");",
											"    pm.test(\"Beginning DC2 Server deletion\", function () {",
											"                pm.response.to.have.status(200);",
											"            });",
											"} ",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "eb649e30-511c-42bc-8cdd-db4f9ae2f5a9",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete WideIP",
					"item": [
						{
							"name": "bigip5-delete-wideip",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "15c8fa1b-cdc9-49b9-8696-32cf940940be",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "23653dea-682d-4679-b267-7addf2b46d9b",
										"exec": [
											"var DNS_NAME = pm.collectionVariables.get(\"DNS1_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"Wide IP \"+DNS_NAME+\" deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else if (responseCode.code === 422) {",
											"    pm.test(\"WideIP \"+DNS_NAME+\" does not exist\", function () {",
											"        pm.expect(pm.response.text()).to.include(\"path does not exist\");",
											"    });",
											"}",
											"",
											"setTimeout(function(){}, 1000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://10.1.1.11/mgmt/shared/appsvcs/declare/{{PARTITION_NAME}}-gslb",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"declare",
										"{{PARTITION_NAME}}-gslb"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete Virtuals Server Address 1 from BIG-IP Server",
					"item": [
						{
							"name": "bigip5-retrieve-addres-server-vs1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c731a84f-8b62-47fe-9398-93757628680b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bd1f900e-5672-4dc7-9a58-7778a47bf751",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"if (responseCode.code === 200) {",
											"  ",
											"    pm.collectionVariables.set(\"DNS_DEST\", jsonData.destination);",
											"    address = (pm.collectionVariables.get(\"DNS_DEST\")).split(\":\");",
											"    pm.collectionVariables.set('BIGIP_ADDRESS1', address[0]);",
											"    ",
											"    pm.test(\"VS \"+VS_NAME+ \" Address \"+address[0]+ \" found\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"} else",
											"    pm.test(\"VS \"+VS_NAME+\" does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip{{DC_COUNTER}}.f5lab.local/virtual-servers/~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"tm",
										"gtm",
										"server",
										"~Common~bigip{{DC_COUNTER}}.f5lab.local",
										"virtual-servers",
										"~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-checkin-address",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "068f503c-4f19-4a42-8f9e-c675216065fd",
										"exec": [
											"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS1\");",
											"",
											"var jsonData = pm.response.json();",
											"",
											"if(jsonData.status === \"Success\") {",
											"    pm.test(\"Address \"+ADDR+\" returned to Scope\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else {",
											"    pm.test(\"Address \"+ADDR+\" not assigned in Scope\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"}",
											"",
											"setTimeout(function(){}, 1000);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://10.1.20.6:81/addr/checkin?address={{BIGIP_ADDRESS1}}",
									"protocol": "http",
									"host": [
										"10",
										"1",
										"20",
										"6"
									],
									"port": "81",
									"path": [
										"addr",
										"checkin"
									],
									"query": [
										{
											"key": "address",
											"value": "{{BIGIP_ADDRESS1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip5-delete-server-vs",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5f52402d-b8fb-4b64-9622-a66ce99e897a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c9762af4-e9c3-4f75-b919-b7aa784d5f24",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"pm.test(\"Virtual Server \"+VS_NAME+\" deleted from server\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"} else ",
											"pm.test(\"Virtual Server \"+VS_NAME+\" does not exist\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip{{DC_COUNTER}}.f5lab.local/virtual-servers/~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"tm",
										"gtm",
										"server",
										"~Common~bigip{{DC_COUNTER}}.f5lab.local",
										"virtual-servers",
										"~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Applications",
			"item": [
				{
					"name": "AS3-Single Tentant",
					"item": [
						{
							"name": "bigip-delete-application",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4583e574-f10e-4504-a89d-58e3ae6b6506",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "be8db5fd-29a3-4121-aaf6-1a0fb57fc5c5",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
											"",
											"pm.test(\"Application \"+VS_NAME+\" deleted\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"setTimeout(function(){}, 2000);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/declare/{{PARTITION_NAME}}",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"declare",
										"{{PARTITION_NAME}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Start Loop - Imperative Calls",
			"item": [
				{
					"name": "start-objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3085c5ce-ebf8-4f1c-801b-483e4c58cb29",
								"exec": [
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
									"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
									"\r",
									"if (!VS_COUNTER) {\r",
									"pm.collectionVariables.set(\"VS_COUNTER\", 1);\r",
									"pm.collectionVariables.set(\"DNS_COUNTER\", 1);\r",
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
									"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
									"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
									"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
									" } else { \r",
									"\r",
									"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
									"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "65015a19-894f-4e78-b9ec-0a792d8c70eb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "53054a89-8488-4542-b8c6-9a932492e703",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "cbf56c6d-ad7c-4d76-87b5-eef9e5ba2a5d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PSP",
			"item": [
				{
					"name": "start PSP",
					"item": [
						{
							"name": "start-psp-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "887b91c3-9b87-4fde-83f4-ed74bc6bfab0",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Deleting APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Proceeding to deletion of APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-psp-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-psp-\"+VS);\r",
											"}\r",
											"\r",
											"setTimeout(function(){}, 2000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e2b9df12-7417-4d06-8138-4fbfbbf38a69",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "69ac0021-2109-4d8c-a5b5-f48314d5ef6d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6071d821-4e62-46de-a477-bfe222d71337",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Profile/Policy",
					"item": [
						{
							"name": "bigip-delete-profile-psp",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33154624-7eb3-4085-9faa-3981a112fec6",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Profile \"+VS_NAME+\"-psp Deleted\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"Profile \"+VS_NAME+\"-psp Does Not Exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"\r",
											"setTimeout(function(){}, 2000);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "da840068-8460-4a1b-bd1a-17b39d67c840",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/~Common~{{VS_NAME}}-psp",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"profile",
										"access",
										"~Common~{{VS_NAME}}-psp"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-policy-psp",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3c5d413-6388-47f7-a432-f1cccf3d5b6f",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Policy \"+VS_NAME+\"-psp deleted\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"Policy \"+VS_NAME+\"-psp does not exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "53974b47-254c-49ab-abb3-8aa1d42c7525",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/access-policy/~Common~{{VS_NAME}}-psp",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"access-policy",
										"~Common~{{VS_NAME}}-psp"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End PSP",
					"item": [
						{
							"name": "end-psp-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9f92211e-0be6-42fc-a9fa-e992259088bf",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "43a9bc7b-26f1-45bd-9886-b3fddbac7a23",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0f440eeb-1e2e-4829-829c-2888b6109db0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "df84d216-4477-4a2b-b785-957596d69142",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "APM Objects",
			"item": [
				{
					"name": "start APM objects",
					"item": [
						{
							"name": "start-apm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fe28610d-b8cc-4125-b91a-d5bf532a518d",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Deleting APM objects for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Proceedibg to Deletion of  Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-apm-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-apm-\"+VS);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "84b6f275-99c9-4cfc-b0d8-bd620dc59256",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "OAuth Client",
					"item": [
						{
							"name": "bigip1-modify-OAuth Clients list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03b355db-ce9d-4ba3-938d-04141ebbb414",
										"exec": [
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Client Removed from Auth Server\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"Client not Attached\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/oauth/~Common~{{VS2_NAME}}-oauth/client-apps/~Common~{{VS_NAME}}",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"profile",
										"oauth",
										"~Common~{{VS2_NAME}}-oauth",
										"client-apps",
										"~Common~{{VS_NAME}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-Apply Policy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ebc4e059-9a02-425b-aa4e-3e39eb647693",
										"exec": [
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Apply Policy Action Successful\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"Policy Does Not Exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"generationAction\": \"increment\"   \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/~Common~{{VS2_NAME}}-psp",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"profile",
										"access",
										"~Common~{{VS2_NAME}}-psp"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip1-delete-OAuth Client",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f7cadbe-1241-4519-927f-ab1085c757ea",
										"exec": [
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Client Deleted\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"Client Does Not exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/oauth/oauth-client-app/~Common~{{VS_NAME}}",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"oauth",
										"oauth-client-app",
										"~Common~{{VS_NAME}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "OAuth Server",
					"item": [
						{
							"name": "bigip-delete-OAuth Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6489abac-1dc2-4444-910b-1699e3fbe814",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"OAuth Server \"+VS_NAME+\" deleted\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else  { \r",
											"    pm.test(\"OAuth Sever \"+VS_NAME+\" does not exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/oauth-server/~Common~{{VS_NAME}}",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"aaa",
										"oauth-server",
										"~Common~{{VS_NAME}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "OAuth Provider",
					"item": [
						{
							"name": "bigip-delete-provider",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8ba955b0-44f6-474a-9db3-1bb83cc3f1f0",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6b8bd893-cb4b-4cc7-a725-28f67363f2ea",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"JWT Provider \"+VS_NAME+\"-provider deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else  { ",
											"    pm.test(\"JWT Provider \"+VS_NAME+\"-provider does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"} ",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/oauth-provider/~Common~{{VS_NAME}}-provider",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"aaa",
										"oauth-provider",
										"~Common~{{VS_NAME}}-provider"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-cert-ca.acme.com",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "600ddf04-e5c7-4b4c-a377-62aeede76f61",
										"exec": [
											"if (responseCode.code === 400) {\r",
											"    pm.test(\"Unable to certificate ca.acme.com. Still in use\", function () {\r",
											"        pm.expect(pm.response.text()).to.include(\"because it is in use\");\r",
											"    });\r",
											"} else if (responseCode.code === 404) { \r",
											"    pm.test(\"Certificate ca.acme.com does not exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} else  {\r",
											"    pm.test(\"Certificate ca.acme.com deleted\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/sys/crypto/cert/~Common~ca.acme.com",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"sys",
										"crypto",
										"cert",
										"~Common~ca.acme.com"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End APM Objects",
					"item": [
						{
							"name": "end-apm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81b5dfc7-cef1-412f-b8a3-9581001a2cb0",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e187a0d1-255c-4de8-bd58-42701f1ec533",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ae5a4d00-b746-47d6-add8-5565c800a374",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4867511e-9b2d-4374-8bee-ff52a2840970",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "LTM Objects",
			"item": [
				{
					"name": "start LTM Objects",
					"item": [
						{
							"name": "start-ltm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6dbf6eb6-8fcf-45d2-8c5c-21988e2ae4cc",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Deleting LTM Objects for \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Proceeding to deletion of LTM Objects  for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-ltm-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-ltm-\"+VS);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "367c58c6-7664-45c7-8e6e-4e15cb4bc44a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "DNS Resolver",
					"item": [
						{
							"name": "bigip-delete-DNS Resolver",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "be79f427-06fb-4e66-bacb-dd4b816c77a9",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "862997fa-0aa2-4ac8-a755-13334e82cfda",
										"exec": [
											" var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"DNS Resolver \"+VS_NAME+\"-dns deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else if (responseCode.code === 404) { ",
											"    pm.test(\"DNS Resolver \"+VS_NAME+\"-dns does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"} ",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/net/dns-resolver/~Common~{{VS_NAME}}-dns",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"net",
										"dns-resolver",
										"~Common~{{VS_NAME}}-dns"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End LTM Objects",
					"item": [
						{
							"name": "end-ltm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "358ae19d-05af-4cb0-9896-8c0dd280a25e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4705a90b-4d6e-4d6f-bdc3-608792b513ee",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e2770c50-1ba2-47d5-9f1d-63adb2315059",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9e42f781-40e6-4411-b44d-d53a8f1d4f87",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Websites",
			"item": [
				{
					"name": "start website",
					"item": [
						{
							"name": "start-website-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "26ea97ad-4ef7-49bc-9736-f2d399f3d1a7",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var DNS_NAME = pm.collectionVariables.get(\"DNS_NAME\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Deleting website \"+DNS_NAME, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Continuing deletion of Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-website-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ DNS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-website-\"+VS);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5018d71a-0083-4f3f-8957-7b58ef9e7712",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Website",
					"item": [
						{
							"name": "iis-delete-website",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff501456-1b72-4b2e-a086-b604dcb80a8e",
										"exec": [
											"var DNS_NAME = pm.collectionVariables.get(\"DNS_NAME\");",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Website \"+DNS_NAME+\" deleted\", function () {",
											"",
											"    pm.expect(jsonData.status).to.eql(\"Success\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"site_name\":\"{{DNS_NAME}}\" \n}"
								},
								"url": {
									"raw": "http://10.1.20.6:81/website",
									"protocol": "http",
									"host": [
										"10",
										"1",
										"20",
										"6"
									],
									"port": "81",
									"path": [
										"website"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-node",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "121af21e-1110-4baf-b113-11cf6c800cb0",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "76d00693-9f02-448e-8593-d9ba28438b7d",
										"exec": [
											"",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"Node 10.1.20.6deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else if (responseCode.code === 404) { ",
											"    pm.test(\"Node 10.1.20.6 does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"} else if (responseCode.code === 400) {",
											"    pm.test(\"Unable to delete node 10.1.20.6. Still in use\", function () {",
											"        pm.expect(pm.response.text()).to.include(\"member of pool\");",
											"    });",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/node/10.1.20.6",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"node",
										"10.1.20.6"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End website",
					"item": [
						{
							"name": "end-website-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a1139498-8b11-4cc2-b891-11227dadc7b8",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9f2c5115-b359-4dce-a8f1-3ed73527aec7",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c628e217-dc4a-44af-88e9-f956eb02080a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e51bd67a-7a85-412f-80e7-039768e8a8c0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "End Loop - Imperative Calls",
			"item": [
				{
					"name": "loop-objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "161f43c4-829a-440f-a90b-1955bc4e7733",
								"exec": [
									"var VIPS = pm.collectionVariables.get(\"VIPS\");",
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\")",
									"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
									"",
									"if (VS_COUNTER < VIPS ) {",
									"    pm.test(\"Objects for Virutal Server \"+VS_NAME+\" deleted.  Creating loop for next virtual server \" , function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    VS_COUNTER++",
									"pm.collectionVariables.set(\"VS_COUNTER\", VS_COUNTER)",
									"postman.setNextRequest(\"start-objects\");",
									"",
									"",
									"} else {",
									"    pm.test(\"Objects for Virtual Server \"+VS_NAME+\" deleted.  All objects deleted\" , function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"  pm.collectionVariables.set(\"VS_COUNTER\", 1)",
									"}",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1fa23f84-31fb-40b4-aaef-118abfa93df6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "55e7772f-ce6e-4143-8601-c819cd4a6c8b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e4e8948a-63c3-47aa-b978-ca03bc754249",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "End Loop Datacenters",
			"item": [
				{
					"name": "loop",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "268bb0d4-47c1-4631-a650-09619470b148",
								"exec": [
									"var DC2_APM = pm.environment.get(\"DC2_APM\");",
									"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
									"",
									"if (DC2_APM === 'true' && DC_COUNTER === '1') {",
									"postman.setNextRequest(\"start\");",
									"pm.collectionVariables.set('DC_COUNTER', '2' );",
									"",
									"pm.test(\"Application deleted in DC1. Beginning DC2 Deletion\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"} else if (DC2_APM === 'false' && DC_COUNTER === '1') {",
									"pm.test(\"Application deleted in DC1 \", function () {",
									"    pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"false\");",
									"});",
									"",
									"} else {",
									"pm.test(\"Application deleted in DC2 \", function () {",
									"    pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"true\");",
									"});",
									"pm.collectionVariables.set('DC_COUNTER', '1' );",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4ab7d26e-a2fa-41ae-aafd-1b155fac9383",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6b279320-a564-4b3c-8762-e4f1b07e0772",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "93924bc5-b3f8-467f-8b48-461bcd454bdf",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}