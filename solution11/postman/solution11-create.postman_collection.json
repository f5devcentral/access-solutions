{
	"info": {
		"_postman_id": "058512d6-ed94-40c6-9e98-9e99d0045c14",
		"name": "solution11-create",
		"description": "Based on Template 1.7",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Set Collection Parameters",
			"item": [
				{
					"name": "set parameters",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "941e9fae-b884-47b0-baaf-872f95e67018",
								"exec": [
									"pm.test(\"Setting Parameters\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5bc6e952-2c27-4c0a-b164-b7227c66c2c3",
								"exec": [
									"//Define the number of virtual servers in this solution\r",
									"pm.collectionVariables.set(\"VIPS\", \"1\");\r",
									"\r",
									"//THis below varaibles are using for defining the tenant ID in AS3.  This should be the solution number. Example: solution1 or solution2.\r",
									"pm.collectionVariables.set(\"PATH_NAME\", \"solution11\");\r",
									"pm.collectionVariables.set(\"PARTITION_NAME\", \"solution11\");\r",
									"\r",
									"//This is the primary section defining the settings for the application the solutions is going to deploy\r",
									"pm.collectionVariables.set(\"DNS1_NAME\", \"solution11.acme.com\");\r",
									"pm.collectionVariables.set(\"VS1_NAME\", \"solution11\");\r",
									"\r",
									"\r",
									"//This section is used when building two virtrual servers as part of a solutions or when a reference is needed to another solutions.  For example, if your solutions involved Federation you will need to define both the FQDNs for the both the SP and IDP.  \r",
									"pm.collectionVariables.set(\"DNS2_NAME\", \"as.acme.com\");\r",
									"pm.collectionVariables.set(\"VS2_NAME\", \"as\");\r",
									"\r",
									"\r",
									"//This variable is used for switching between standard and modern for logon pages, webtops, and other objects that support those changes.\r",
									"pm.collectionVariables.set(\"CUSTOM_TYPE\", \"modern\");\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://10.1.1.4/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"10",
								"1",
								"1",
								"4"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Start-loop-Datacenters",
			"item": [
				{
					"name": "start",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cd70a9a-06c1-40e1-9c23-2b28492f07c1",
								"exec": [
									"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
									"\r",
									"\r",
									"pm.test(\"Starting configuratioon of Data Center \"+DC_COUNTER, function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8b380f38-49cf-40e6-97cf-d1f32776f77e",
								"exec": [
									"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
									"var DC2_APM = pm.environment.get(\"DC2_APM\");\r",
									"\r",
									"\r",
									"if (DC2_APM === 'true' && DC_COUNTER === '2') {\r",
									"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.5\");\r",
									"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP2_SCOPE\"));\r",
									"\r",
									"} else {\r",
									"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.4\");\r",
									"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP1_SCOPE\"));\r",
									"pm.collectionVariables.set('DC_COUNTER', '1' );\r",
									"\r",
									"\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "948ff15b-93ae-4303-8c6e-c8626893d950",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c0cc3df0-c109-4454-a2d8-02ac025d1d8e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Start Loop - Imperative Calls",
			"item": [
				{
					"name": "start-objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a52d6243-6367-44db-9f72-64788be7899b",
								"exec": [
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
									"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
									"\r",
									"if (!VS_COUNTER) {\r",
									"pm.collectionVariables.set(\"VS_COUNTER\", 1);\r",
									"pm.collectionVariables.set(\"DNS_COUNTER\", 1);\r",
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
									"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
									"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
									"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
									" } else { \r",
									"\r",
									"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
									"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
									"}\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5188c3d3-35dc-4704-b880-f88610ef8daa",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9308a979-7dda-4d62-b642-712b72b63c38",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3c1e3745-7533-4ad4-b551-663a452ef889",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Websites",
			"item": [
				{
					"name": "start Website",
					"item": [
						{
							"name": "start-website-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e617953b-b686-468e-83e1-71ad79e49d15",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var DNS_NAME = pm.collectionVariables.get(\"DNS_NAME\");\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Creating website \"+DNS_NAME, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Continuing creation of Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-website-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-website-\"+VS);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b4152fe7-2a90-4a0a-ba7a-0faca8b47be0",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "133e6b91-3adf-4699-b33e-23b1a736ed82",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ca78165b-c389-46bf-a230-07f8027eb46e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Create Website address 10.1.20.6",
					"item": [
						{
							"name": "bigip-create-node-iis",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0b976968-3266-42da-bb2a-3704808d1af6",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc91f727-9d13-486f-aed4-deadd53ec2eb",
										"exec": [
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
											"var DC2_APM = pm.environment.get(\"DC2_APM\");",
											"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");",
											"pm.collectionVariables.set(\"IIS_ADDRESS\"+DNS_COUNTER, \"10.1.20.6\")",
											"pm.collectionVariables.set(\"IIS_ADDRESS\", pm.collectionVariables.get(\"IIS_ADDRESS\"+DNS_COUNTER))",
											"",
											"if (DC2_APM === 'true' && DC_COUNTER === '2') {",
											"    if (responseCode.code === 200) {",
											"        pm.test(\"Node 10.1.20.6 Created\", function () {",
											"            pm.response.to.have.status(200);",
											"        });      ",
											"    } else  {",
											"        pm.test(\"Node 10.1.20.6 Exists\", function () {",
											"            pm.response.to.have.status(409);",
											"        });  ",
											"    }",
											"        postman.setNextRequest(\"end-website\");",
											"} else {",
											"    if (responseCode.code === 200) {",
											"        pm.test(\"Node 10.1.20.6 Created\", function () {",
											"            pm.response.to.have.status(200);",
											"        });",
											"    } else  {",
											"        pm.test(\"Node 10.1.20.6 Exists\", function () {",
											"            pm.response.to.have.status(409);",
											"        });",
											"    }",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"10.1.20.6\",\r\n\"address\": \"10.1.20.6\"\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/node",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"node"
									]
								}
							},
							"response": []
						},
						{
							"name": "iis-create-website",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca7d93e1-8811-4de9-a266-d3930e14d351",
										"exec": [
											"var DNS_NAME = pm.collectionVariables.get(\"DNS_NAME\");",
											"var jsonData = pm.response.json();",
											"",
											"for (var i = 0; i < jsonData.length; i++) {",
											"",
											"\t\tif (jsonData[i].status === \"Success\") {",
											"\t\t\t",
											"                pm.test(\"Website \"+DNS_NAME+\" created\", function () {",
											"                    pm.expect(jsonData[i].status).to.eql(\"Success\");",
											"                });",
											"\t\t\t",
											"\t\t}",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"site_name\":\"{{DNS_NAME}}\",\n\t\"http_port\":\"80\",\n\t\"https_port\":\"443\",\n\t\"computer_ip\":\"10.1.20.6\",\n\t\"template_number\": \"2\",\n\t\"authentication\": \"none\",\n\t\"customization\": {\n\t\t\"background\": \"green\"\n\n\t}\n}"
								},
								"url": {
									"raw": "http://10.1.20.6:81/website",
									"protocol": "http",
									"host": [
										"10",
										"1",
										"20",
										"6"
									],
									"port": "81",
									"path": [
										"website"
									]
								}
							},
							"response": []
						},
						{
							"name": "end-website",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "508d130f-3262-4247-9d6b-233bc8860063",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "67c664f2-1138-4eb1-8cd1-c29887fdea18",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1767c239-e7e9-49e1-87ca-4300982db99e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "20a50fd7-e22c-4997-84a1-48c9f0bfadd9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End Website",
					"item": [
						{
							"name": "end-website-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3ef8ce6a-b2ad-4ac7-92a6-18d6413a594b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "327691ff-2da5-4f71-9716-493789abd24a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8302f0aa-2f2b-42ec-8196-3322cf244a2c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "34062199-b035-4d88-964f-0daad4900381",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "LTM Objects",
			"item": [
				{
					"name": "start LTM objects",
					"item": [
						{
							"name": "start-ltm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e116859a-9b61-4c96-b7ba-b1841791838c",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"pm.test(\"Creating LTM objects for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    \r",
											"} else {\r",
											"    postman.setNextRequest(\"end-ltm-1\");\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8c04159d-9045-422d-9b08-b1af16ca5389",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b27adab5-2114-4bb6-a68f-0c2b95db1ca4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7a1482a3-ff3d-4b8c-b231-906b4f79b20e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "DNS Resolver",
					"item": [
						{
							"name": "bigip-create-DNS resolver",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f123bc28-f579-4257-a0d7-85666872ffd6",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a3c6edc9-0182-47c8-8102-3a202eb087a7",
										"exec": [
											"if (responseCode.code === 200) {",
											"pm.test(\"DNS Resolver Created\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"} else ",
											"pm.test(\"DNS Resolver Exists\", function () {",
											"    pm.response.to.have.status(409);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\":\"{{VS_NAME}}-dns\", \r\n \"forwardZones\": [\r\n                {\r\n                    \"name\": \".\",\r\n                    \"nameservers\": [\r\n                        {\r\n                            \"name\": \"10.1.20.7:53\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/net/dns-resolver",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"net",
										"dns-resolver"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c267c1fb-02e1-4d68-96a0-2f419e4c6c8d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "488d3a86-feab-4509-bfaf-c175bc05277c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End LTM Objects",
					"item": [
						{
							"name": "end-ltm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "da78cdc3-fad9-46d2-8b5b-b3222dcfa401",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cc69b70b-87d5-4b3b-ae57-2409f28e3edd",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e51622bf-aedf-40a5-8ada-0558ec178e48",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f5cff804-17ad-491a-9e02-dc911cd23d82",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "APM Objects",
			"item": [
				{
					"name": "start APM objects",
					"item": [
						{
							"name": "start-apm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3bd7e2a9-0912-4b95-b682-e7448fa8ed30",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Creating APM objects for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Proceeding to creation of  Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-apm-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-apm-\"+VS);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "086e99b3-b1d6-493f-b3f8-2a73a0f7ca7f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "AAA OAuth Provider",
					"item": [
						{
							"name": "bigip-import ca.acme.com cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "833be3ba-e4c9-4f76-aa3c-bc68e36d3f41",
										"exec": [
											"pm.test(\"ca.f5lab.local.crt installed\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bb66b1fe-121c-4e99-b055-22828669fa69",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/octet-stream"
									},
									{
										"key": "Content-Range",
										"value": "0-1263/1264",
										"type": "text"
									},
									{
										"key": "Content-Length",
										"value": "1264",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "-----BEGIN CERTIFICATE-----\r\nMIIDazCCAlOgAwIBAgIQJ4DA+pop3K9HGUl4CIxjbjANBgkqhkiG9w0BAQsFADBI\r\nMRUwEwYKCZImiZPyLGQBGRYFbG9jYWwxFTATBgoJkiaJk/IsZAEZFgVmNWxhYjEY\r\nMBYGA1UEAxMPZGMxLmY1bGFiLmxvY2FsMB4XDTE5MTEyMDIyMDc0NVoXDTI5MTEy\r\nMDIyMTc0NVowSDEVMBMGCgmSJomT8ixkARkWBWxvY2FsMRUwEwYKCZImiZPyLGQB\r\nGRYFZjVsYWIxGDAWBgNVBAMTD2RjMS5mNWxhYi5sb2NhbDCCASIwDQYJKoZIhvcN\r\nAQEBBQADggEPADCCAQoCggEBANOejxrkrJD12YIeEkZNjRZ9/OZwFeX+QhVi1uHL\r\niILP+4+3ZiZ/dhVGQLncDfHlJm5hSXpzMMDK+LxmjnWfBcx8xurgDyL6E80ZTnIP\r\nBbVJ6Au2IWFXM62NK/qsE+5IF0ptAYzDiWjj75njoVQygMNkdWEPxu1N+Ar7WAR4\r\n5xghN2wE7d57iCZ53RmrIeGT6equiihns5nUssoOFh/ny9oR6+yudINlozllHhMB\r\nGRDCEeGC/0mY/LF50hP6vwEbl1ub0J1SlqlvTn3rrX7dumvtjSKxfQipwbCpG8Qz\r\nGi7ZsSe78Xg7VIGtDVk0Vh4+PbHVJ6GB8pUmFpQ4vVa6sY0CAwEAAaNRME8wCwYD\r\nVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFNhpUMHsIixtS9g6\r\ny/FyNrayg9V6MBAGCSsGAQQBgjcVAQQDAgEAMA0GCSqGSIb3DQEBCwUAA4IBAQCr\r\nEjJWFyZR3VFoIvZxUztGiWSjELJGD0vH42hONh6GrzxHadhZcQFmQsi4SmS9TUhP\r\nqyj+mUzreWziMcogqTYisSmF6h/cyAujdnLPbR//spGSOvLlV+43P57FmpQ+c+bB\r\nV8CJq3e0uvxt2h/9v5Du20fE/Zb6iPESMSjzhEoCPosozELpEqwKTzwGLsyqgLSN\r\nWW/+Ov+DGr+cE8pHsXZy8yhkbDY5wrbHMCyrRuXFXwYLpoMcUKMOWUCq+K3TSQ2A\r\nmGUtzY3KMfC7YCJj+mrCniWmvncryUpkY3hPplglevWAFQx4hslOU618gt4IpBXy\r\nLlIC0DqyAVMHJqF7WozV\r\n-----END CERTIFICATE-----\r\n"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/file-transfer/uploads/ca.acme.com.crt",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"file-transfer",
										"uploads",
										"ca.acme.com.crt"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-install ca.acme.com cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "886874a8-1deb-4feb-92ee-53dca22d4bd3",
										"exec": [
											"pm.test(\"ca.f5lab.local.crt imported\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"command\":\"install\",\n\t\"name\":\"ca.acme.com\",\n\t\"from-local-file\":\"/var/config/rest/downloads/ca.acme.com.crt\"\n\t\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/sys/crypto/cert",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"sys",
										"crypto",
										"cert"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create-client provider",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f4b89fa4-8bd3-4f6b-b6c1-f9b60fd8cd84",
										"exec": [
											"if (responseCode.code === 200) {",
											"",
											"    pm.test(\"Client Provider Created\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else ",
											"    pm.test(\"Client Provider Exists\", function () {",
											"        pm.response.to.have.status(409);",
											"    });",
											"",
											"setTimeout(function(){}, 3000);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d0499ae7-5102-45d5-b17e-d9c4c5b4f679",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n    \"name\": \"{{VS_NAME}}-provider\",\r\n    \"partition\": \"Common\",\r\n    \"allowSelfSignedJwkCert\": \"yes\",\r\n    \"discoveryInterval\": 60,\r\n    \"ignoreExpiredCert\": \"false\",\r\n    \"introspect\": \"supported\",\r\n    \"maxJsonNestingLayers\": 8,\r\n    \"maxResponseSize\": 131072,\r\n    \"openidCfgUri\": \"https://{{DNS2_NAME}}/f5-oauth2/v1/.well-known/openid-configuration\",\r\n    \"saveJsonPayload\": \"disabled\",\r\n    \"trustedCaBundle\": \"/Common/ca.acme.com\",\r\n    \"type\": \"f5\",\r\n    \"useAutoJwtConfig\": \"true\"\r\n\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/oauth-provider",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"aaa",
										"oauth-provider"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-retrieve-discovery task id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9573711e-a0ba-420f-bbcc-7b3697979580",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"var jsonData = JSON.parse(responseBody);",
											"var exist = 0",
											"",
											"",
											"for (var i = 0; i < jsonData.items.length; i++) {",
											"",
											"if ( jsonData.items[i].providerName  === \"/Common/\"+VS_NAME+\"-provider\" ) {",
											"    pm.collectionVariables.set(\"DISCOVER_ID\",jsonData.items[i].id);",
											"    pm.test(\"Discovery Task ID Found\", function () {",
											"    pm.response.to.have.status(200);",
											"    });",
											"    exist = 1",
											"} ",
											"} ",
											"",
											"if (exist === 0) {",
											"    postman.setNextRequest(\"bigip-discover-provider\");",
											"    pm.test(\"Discovery Task does not exist\", function () {",
											"    pm.response.to.have.status(200);",
											"    });",
											"}",
											"",
											"setTimeout(function(){}, 3000);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "46c5711a-93f9-4aa7-8a14-afb6db60842c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n    \"providerName\": \"{{VS_NAME}}-provider\"\r\n    \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/access/oidc/discover",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"access",
										"oidc",
										"discover"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-cancel-provider discover task",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81e1f30e-addd-459c-a5e3-880abc8bafd0",
										"exec": [
											"if (responseCode.code === 200) {",
											"    pm.test(\"Discovery Task Stopped\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} ",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "56cf9236-6556-41b1-bbbc-b55abd0acd36",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n    \"status\":CANCEL_REQUESTED\"\r\n    \r\n}\r\n\r\n"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/access/oidc/discover/{{DISCOVER_ID}}",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"access",
										"oidc",
										"discover",
										"{{DISCOVER_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-provider discover task",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a9d3b56-cb27-444c-9643-28fa9b12cf81",
										"exec": [
											"if (responseCode.code === 200) {",
											"    pm.test(\"Discovery Task Deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "faa70c4b-7cc7-4c90-bc4c-30b7ef1a1cde",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/access/oidc/discover/{{DISCOVER_ID}}",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"access",
										"oidc",
										"discover",
										"{{DISCOVER_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-discover-provider",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0d087eb-0bce-4d4d-832e-89b5aa277819",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.collectionVariables.set(\"DISCOVER_ID\",jsonData.id);",
											"",
											"if (responseCode.code === 202) { ",
											"    pm.test(\"Discovery Task Created\", function () {",
											"        pm.response.to.have.status(202);",
											"    });",
											"} else if (responseCode.code === 400) {",
											"    pm.test(\"Task exists\", function () {",
											"        pm.expect(pm.response.text()).to.include(\"Duplicate item. Key already exists\");",
											"    });",
											"}",
											"",
											"",
											"setTimeout(function(){}, 3000);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d9daff58-566f-4c23-8ad8-55460d22a086",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n    \"providerName\": \"{{VS_NAME}}-provider\"\r\n    \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/access/oidc/discover",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"access",
										"oidc",
										"discover"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-retrieve-provider endpoints",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "342abeef-3f02-45da-a53d-230585f913c2",
										"exec": [
											"",
											"if (responseCode.code === 200) {",
											"    var jsonData = JSON.parse(responseBody);",
											"    str = \"f5-oauth.local\";",
											"    if (jsonData.authenticationUri.includes(str)) {",
											"        pm.test(\"Unable to retrive Endpoints.  Ensure integrated Authorization Server solution is deployed prior to deploying this solution \", function () {",
											"            pm.response.to.have.status(400);",
											"        });",
											"        postman.setNextRequest(\"null\");",
											"  }",
											" ",
											"} else {",
											"",
											"    pm.test(\"Endpoints Retrieved\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    pm.collectionVariables.set(\"AUTH_URI\",jsonData.authenticationUri);",
											"    pm.collectionVariables.set(\"TOKEN_URI\",jsonData.tokenUri);",
											"    ",
											"} ",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7a385900-e314-449b-a16d-ad256156a75a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/oauth-provider/~Common~{{VS_NAME}}-provider",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"aaa",
										"oauth-provider",
										"~Common~{{VS_NAME}}-provider"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "OAuth Client",
					"item": [
						{
							"name": "bigip-create-customization group-OAuth Client",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b8a32d92-12fa-4677-974c-ce54e14afa5a",
										"exec": [
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Customization Group Created\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"Customization Group Exists\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}_oauth_authz_client_app_customization\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/standard\",\r\n    \"type\": \"oauth-authz-client-app\"\r\n    \r\n    \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"customization-group",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create-OAuth Client",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "76f5970e-691f-42a8-9fdf-92a824a3da34",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(\"CLIENT_ID\",jsonData.clientId);\r",
											"pm.collectionVariables.set(\"CLIENT_SECRET\",jsonData.clientSecret);\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"OAuth Client Created\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (responseCode.code === 409) {\r",
											"    pm.test(\"OAuth Client Exists\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });\r",
											"    postman.setNextRequest(\"bigip-retreive-OAuth Client\");\r",
											"} else\r",
											"    pm.test(\"OAuth Client not found\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n         \r\n            \"name\": \"{{VS_NAME}}\",\r\n            \"partition\": \"Common\",\r\n            \"accessTokenLifetime\": 5,\r\n            \"appName\": \"{{VS_NAME}}\",\r\n            \"authCodeLifetime\": 5,\r\n            \"authType\": \"secret\",\r\n            \"customizationGroup\": \"/Common/{{VS_NAME}}_oauth_authz_client_app_customization\",\r\n            \"generateJwtRefreshToken\": \"true\",\r\n            \"generateRefreshToken\": \"true\",\r\n            \"grantCode\": \"enabled\",\r\n            \"grantPassword\": \"disabled\",\r\n            \"grantToken\": \"disabled\",\r\n            \"idTokenLifetime\": 5,\r\n            \"jwtAccessTokenLifetime\": 5,\r\n            \"jwtRefreshTokenLifetime\": 60,\r\n            \"openidConnect\": \"enabled\",\r\n            \"redirectUris\": [\r\n                \"https://{{DNS_NAME}}/oauth/client/redirect\"\r\n            ],\r\n            \"refreshTokenLifetime\": 480,\r\n            \"refreshTokenUsageLimit\": 64,\r\n            \"reuseAccessToken\": \"false\",\r\n            \"reuseRefreshToken\": \"false\",\r\n            \"useProfileTokenMgmtSettings\": \"true\"\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/oauth/oauth-client-app",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"oauth",
										"oauth-client-app"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-retreive-OAuth Client",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "45ef9b86-a7aa-4014-972a-0bc363a9ae6a",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"for (var i = 0; i < jsonData.items.length; i++) {\r",
											"\r",
											"\tif (jsonData.items[i].name === VS_NAME) {\r",
											"               pm.collectionVariables.set(\"CLIENT_ID\",jsonData.items[i].clientId);\r",
											"               pm.collectionVariables.set(\"CLIENT_SECRET\",jsonData.items[i].clientSecret);\r",
											"\r",
											"              pm.test(\"Existing client information retrieved\", function () {\r",
											"              pm.response.to.have.status(200);\r",
											"            });\r",
											"            \r",
											"\t}\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/oauth/oauth-client-app",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"oauth",
										"oauth-client-app"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-modify-OAuth Clients list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "98670b91-5da2-4954-b935-3381f772b00f",
										"exec": [
											" if (responseCode.code === 409)\r",
											"    pm.test(\"OAuth Client Exists on Auth Server\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });\r",
											"else  if (responseCode.code === 200) {\r",
											"    pm.test(\"OAuth Client added to Auth Server\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else {\r",
											"      pm.test(\"OAuth Client unable to be added to Authorization Server.   Ensure you deploy Integrated Authorization Server solution first and then redploy this solution.  Stopping automation\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"null\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"name\": \"{{VS_NAME}}\",\r\n   \"partition\": \"solution10\"\r\n  \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/oauth/~Common~{{VS2_NAME}}-oauth/client-apps",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"profile",
										"oauth",
										"~Common~{{VS2_NAME}}-oauth",
										"client-apps"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-Apply Policy on AS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1e228d89-c07a-4c5a-8928-f6f877d043d8",
										"exec": [
											"\r",
											"pm.test(\"Apply Policy Successful\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"generationAction\": \"increment\"   \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/~Common~{{VS2_NAME}}-psp",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"profile",
										"access",
										"~Common~{{VS2_NAME}}-psp"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "OAuth Server",
					"item": [
						{
							"name": "bigip-create-OAuth Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1f7a91f-fd97-4f2c-8285-ad0b07c6f8e1",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"pm.test(\"OAuth Server \"+VS_NAME+\" created\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"} else \r",
											"pm.test(\"OAuth Server \"+VS_NAME+\" exists\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "        {\r\n\r\n            \"name\": \"{{VS_NAME}}\",\r\n            \"partition\": \"Common\",          \r\n            \"clientId\": \"{{CLIENT_ID}}\",\r\n            \"clientSecret\": \"{{CLIENT_SECRET}}\",\r\n            \"clientServersslProfileName\": \"/Common/serverssl\",\r\n            \"dnsResolverName\": \"/Common/{{VS_NAME}}-dns\",      \r\n            \"mode\": \"client\",\r\n            \"providerName\": \"/Common/{{VS_NAME}}-provider\", \r\n            \"tokenValidationInterval\": 60\r\n        }"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/oauth-server",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"aaa",
										"oauth-server"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End APM Objects",
					"item": [
						{
							"name": "end-apm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "717540c6-c30b-4cc5-ab5d-1e29c9c91f01",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f2d401a2-c93c-4486-9845-1105b12eb395",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a00a5d87-9b06-48a7-97da-d0e8f126bdb1",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6ad7d629-ea08-4d78-ace3-57501adcd9f9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PSP",
			"item": [
				{
					"name": "start PSP",
					"item": [
						{
							"name": "start-psp-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e080e3f5-e76f-48ab-b8c3-9db764085b18",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Creating APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Proceeding to creation of APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-psp-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-psp-\"+VS);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14ff4ce6-29d0-4f1e-abb0-31e8ab45543e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b8e2aa3a-4583-4cca-81b8-19126d33acd4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "eb5bd9e5-8c3e-4599-9a12-07779a9e5a3f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Baseline Policy",
					"item": [
						{
							"name": "Create Transaction",
							"item": [
								{
									"name": "bigip-create transaction",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b359f4b9-e760-49c0-a925-144f3d93b879",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"pm.collectionVariables.set(\"TRANSID\", jsonData.transId);",
													"",
													"",
													"pm.test(\"Transaction Created\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "529afda1-eb92-404d-a06e-21dbd8998e05",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/transaction",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"transaction"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Baseline Customization Groups",
							"item": [
								{
									"name": "bigip-create-customization group-logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "87e28022-8954-44df-93c6-93f19d36f07b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{VS_NAME}}-psp_logout\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n    \"type\": \"logout\"\r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"customization-group"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-create-customization group-eps",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d2fb9413-c134-4fb6-96a0-d82e7ffed99b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_eps\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n    \"type\": \"eps\"\r\n    \r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"customization-group"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-create-customization group-error map",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5b4cdbca-1329-4f70-8257-6b81e6d7e45a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_errormap\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n    \"type\": \"errormap\"\r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"customization-group"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-create-customization group-framework",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "52ac663f-1b35-4596-a8f0-f29dcf617595",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \r\n     \"name\": \"{{VS_NAME}}-psp_framework_installation\",\r\n\t \"partition\": \"Common\",\r\n     \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n     \"type\": \"framework-installation\"\r\n    \r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"customization-group"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-create-customization group-general ui",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e8a10d41-df02-444a-a95d-fc19a7ef50b8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_general_ui\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n    \"type\": \"general-ui\"\r\n    \r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"customization-group"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Deny Ending",
							"item": [
								{
									"name": "bigip-create-customization group-end deny",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "91ebfbc2-8fe7-4588-9d1c-add46884b40d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_end_deny_ag\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n    \"type\": \"logout\"\r\n    \r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"customization-group"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-create-agent-deny ending",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aebd9784-e8ec-4146-a922-022ccd839322",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"name\": \"{{VS_NAME}}-psp_end_deny_ag\",\n\"partition\": \"Common\",\n\"customizationGroup\": \"/Common/{{VS_NAME}}-psp_end_deny_ag\"\n\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/agent/ending-deny/",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"agent",
												"ending-deny",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-create-policy item-Deny ending",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f387983e-34fc-4e02-8913-68a76489a0bf",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"value": "{{TRANSID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_end_deny\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"Deny\",\r\n    \"color\": 2,\r\n    \"itemType\": \"ending\",\r\n    \"agents\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_end_deny_ag\",\r\n\t\t\t\"partition\": \"Common\",\r\n            \"type\": \"ending-deny\"\r\n\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"policy-item",
												""
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Allow Ending",
							"item": [
								{
									"name": "bigip-create-agent-allow ending",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3942285c-4ef7-4bc4-b15a-6ab524fd4459",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"value": "{{TRANSID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"name\": \"{{VS_NAME}}-psp_end_allow_ag\",\n\"partition\": \"Common\"\n\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/agent/ending-allow/",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"agent",
												"ending-allow",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-create-policy item-allow ending",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "108bb2fa-709d-4a5b-9d9d-055dc81f3369",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"value": "{{TRANSID}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_end_allow\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"Allow\",\r\n    \"color\": 1,\r\n    \"itemType\": \"ending\",\r\n    \"agents\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_end_allow_ag\",\r\n\t\t\t\"partition\": \"Common\",\r\n            \"type\": \"ending-allow\"\r\n\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"policy-item",
												""
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Policy-Item OAuth Client",
							"item": [
								{
									"name": "bigip-create-agent-OAuth client",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c32f68b-7a28-48a3-97b2-80eedc3068fa",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \n    \"name\": \"{{VS_NAME}}-psp_act_oauth_client_ag\",\n    \"partition\": \"Common\",\n    \"authRedirectRequest\": \"/Common/F5AuthRedirectRequestJWT\",\n    \"grantType\": \"authorization-code\",\n    \"openidConnect\": \"enabled\",\n    \"openidFlowType\": \"code\",\n    \"openidHybridResponseType\": \"code-idtoken\",\n    \"openidUserinfoRequest\": \"/Common/F5UserinfoRequest\",\n    \"redirectionUri\": \"https://%{session.server.network.name}/oauth/client/redirect\",\n    \"server\": \"/Common/{{VS_NAME}}\",\n    \"tokenRefreshRequest\": \"/Common/F5TokenRefreshRequest\",\n    \"tokenRequest\": \"/Common/F5TokenJWTRequestByAuthzCode\",\n    \"tokenValidationMode\": \"external\",\n    \"type\": \"client\"\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/agent/aaa-oauth/",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"agent",
												"aaa-oauth",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-create-policy item-Oauth client",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "43b2891a-7210-40bc-943d-92c60853d297",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \r\n    \"name\": \"{{VS_NAME}}-psp_act_oauth_client\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"OAuth Client\",\r\n    \"color\": 1,\r\n    \"itemType\": \"action\",\r\n    \"loop\": \"false\",\r\n    \"agents\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_act_oauth_client_ag\",\r\n            \"partition\": \"Common\",\r\n            \"type\": \"aaa-oauth\"\r\n            \r\n        }\r\n    ],\r\n    \"rules\": [\r\n        {\r\n            \"caption\": \"Successful\",\r\n            \"expression\": \"expr {[mcget {session.oauth.client.last.authresult}] == 1}\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-psp_end_allow\"\r\n            \r\n        },\r\n        {\r\n            \"caption\": \"fallback\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-psp_end_deny\"\r\n            \r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"policy-item",
												""
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Start Item",
							"item": [
								{
									"name": "bigip-create-policy item-start",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ea76286-885f-4841-90a9-1209b1afb6f7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_ent\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"Start\",\r\n    \"color\": 1,\r\n    \"itemType\": \"entry\",\r\n    \"loop\": \"false\",\r\n    \"rules\": [\r\n        {\r\n            \"caption\": \"fallback\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-psp_act_oauth_client\"\r\n\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"policy-item",
												""
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Create Policy",
							"item": [
								{
									"name": "bigip-create-policy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9f6e7c3e-c8b9-4759-acac-9709050595c6",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp\",\r\n    \"partition\": \"Common\",\r\n    \"defaultEnding\": \"{{VS_NAME}}-psp_end_deny\",\r\n        \"maxMacroLoopCount\": 1,\r\n    \"oneshotMacro\": \"false\",\r\n    \"startItem\": \"{{VS_NAME}}-psp_ent\",\r\n    \"type\": \"access-policy\",\r\n    \"items\": [\r\n         {\r\n            \"name\": \"{{VS_NAME}}-psp_act_oauth_client\",\r\n            \"partition\": \"Common\"\r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_end_allow\",\r\n            \"partition\": \"Common\"\r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_end_deny\",\r\n            \"partition\": \"Common\"\r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_ent\",\r\n            \"partition\": \"Common\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/access-policy/",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"access-policy",
												""
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Create Profile",
							"item": [
								{
									"name": "profile-no sso",
									"item": [
										{
											"name": "bigip-create-profile",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "24855f14-97f8-45a7-9ed2-38b8189c257d",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp\",\r\n    \"partition\": \"Common\",\r\n    \"acceptLanguages\": [\r\n        \"en\"\r\n    ],\r\n    \"accessPolicy\": \"/Common/{{VS_NAME}}-psp\",\r\n      \"customizationGroup\": \"/Common/{{VS_NAME}}-psp_logout\",\r\n    \"epsGroup\": \"/Common/{{VS_NAME}}-psp_eps\",\r\n    \"errormapGroup\": \"/Common/{{VS_NAME}}-psp_errormap\",\r\n    \"frameworkInstallationGroup\": \"/Common/{{VS_NAME}}-psp_framework_installation\",\r\n    \"generalUiGroup\": \"/Common/{{VS_NAME}}-psp_general_ui\",\r\n    \"accessPolicyTimeout\": 300,\r\n    \"defaultLanguage\": \"en\",\r\n     \"httponlyCookie\": \"false\",\r\n    \"inactivityTimeout\": 900,\r\n    \"logoutUriTimeout\": 5,\r\n    \"maxConcurrentSessions\": 0,\r\n    \"maxConcurrentUsers\": 0,\r\n    \"maxFailureDelay\": 5,\r\n    \"maxInProgressSessions\": 128,\r\n    \"maxSessionTimeout\": 604800,\r\n    \"minFailureDelay\": 2,\r\n    \"modifiedSinceLastPolicySync\": \"false\",\r\n    \"persistentCookie\": \"false\",\r\n    \"restrictToSingleClientIp\": \"false\",\r\n    \"scope\": \"profile\",\r\n    \"secureCookie\": \"true\",\r\n    \"type\": \"all\",\r\n    \"useHttp_503OnError\": \"false\",\r\n    \"userIdentityMethod\": \"http\",\r\n    \"logSettings\": [\r\n        \"/Common/default-log-setting\"\r\n    ]\r\n\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"profile",
														"access",
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Commit Transaction",
							"item": [
								{
									"name": "bigip-commit-transaction",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "08a83e79-8aef-40a1-a7cf-8d3ec3c1f256",
												"exec": [
													"\r",
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"\r",
													"    pm.test(VS_NAME+\"-psp created\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else \r",
													"    pm.test(VS_NAME+\"-psp exists\", function () {\r",
													"        pm.response.to.have.status(409);\r",
													"    });\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"state\":\"VALIDATING\"\t\n\t\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/transaction/{{TRANSID}}/",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"transaction",
												"{{TRANSID}}",
												""
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Apply Policy",
							"item": [
								{
									"name": "bigip-apply policy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fa80686b-cc09-4e6b-952d-b10501582f98",
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"\r",
													"pm.test(\"Apply Policy Successful for \" +VS_NAME+\"-psp\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"generationAction\": \"increment\"   \r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/~Common~{{VS_NAME}}-psp",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"profile",
												"access",
												"~Common~{{VS_NAME}}-psp"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End PSP",
					"item": [
						{
							"name": "end-psp-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17acfcfa-a3fb-40a0-9574-474203675c2b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "74e7c188-ec9a-4c9e-9f60-cbae0a578134",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "330befbf-953a-4e28-ad3b-7ddfc29ee851",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0ee22536-a91b-4d43-8213-225974df4199",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Virtual Server Address Assignment",
			"item": [
				{
					"name": "bigip-Check Scope for existing assignment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ac4e123-1a0a-4634-9dc7-24cdbcde561e",
								"exec": [
									"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
									"var jsonData = pm.response.json();\r",
									"var EXIST = 0\r",
									"\r",
									"\r",
									"\r",
									"if(!jsonData.length) {\r",
									"    if ( jsonData.Description  === VS_NAME ) {\r",
									"        pm.collectionVariables.set(\"BIGIP_ADDRESS\"+VS_COUNTER, jsonData.IPAddress.IPAddressToString );\r",
									"        pm.collectionVariables.set(\"BIGIP_ADDRESS\", pm.collectionVariables.get(\"BIGIP_ADDRESS\"+VS_COUNTER));\r",
									"        var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS\"+VS_COUNTER);\r",
									"        postman.setNextRequest(\"end-address\");\r",
									"        var EXIST = 1;\r",
									"        if (responseCode.code === 200) {\r",
									"            pm.test(\"Existing Address \"+ADDR+\" assigned to \"+VS_NAME, function () {\r",
									"                pm.response.to.have.status(200);\r",
									"            });\r",
									"        }\r",
									"    }\r",
									"} else {\r",
									"\r",
									"  for (var i = 0; i < jsonData.length; i++) {\r",
									"\r",
									"        if ( jsonData[i].Description  === VS_NAME ) {   \r",
									"            pm.collectionVariables.set(\"BIGIP_ADDRESS\"+VS_COUNTER, jsonData[i].IPAddress.IPAddressToString );\r",
									"            pm.collectionVariables.set(\"BIGIP_ADDRESS\", pm.collectionVariables.get(\"BIGIP_ADDRESS\"+VS_COUNTER));\r",
									"            var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS\"+VS_COUNTER);\r",
									"            postman.setNextRequest(\"end-address\");\r",
									"            var EXIST =1;\r",
									"\r",
									"            if (responseCode.code === 200) {\r",
									"                pm.test(\"Existing Address \"+ADDR+\" assigned to \"+VS_NAME, function () {\r",
									"                    pm.response.to.have.status(200);\r",
									"                });\r",
									"            }\r",
									"        } \r",
									"    }\r",
									"} \r",
									"\r",
									"if (EXIST === 0) {\r",
									"    if (responseCode.code === 200) {\r",
									"        pm.test(\"No Address assigned to \"+VS_NAME , function () {\r",
									"            pm.response.to.have.status(200);\r",
									"        }); \r",
									"    }\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://10.1.20.6:81/addr/scope-status?scope={{BIGIP_SCOPE}}",
							"protocol": "http",
							"host": [
								"10",
								"1",
								"20",
								"6"
							],
							"port": "81",
							"path": [
								"addr",
								"scope-status"
							],
							"query": [
								{
									"key": "scope",
									"value": "{{BIGIP_SCOPE}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "bigip-Check for next available address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4846c9ba-00da-4300-9c0f-0b55ac7bdc94",
								"exec": [
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"BIGIP_ADDRESS\"+VS_COUNTER,jsonData.address);\r",
									"pm.collectionVariables.set(\"BIGIP_ADDRESS\", pm.collectionVariables.get(\"BIGIP_ADDRESS\"+VS_COUNTER));\r",
									"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS\"+VS_COUNTER)\r",
									"\r",
									"pm.test(\"Next availble address is \"+ADDR, function () {\r",
									"    pm.expect(jsonData.address).not.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://10.1.20.6:81/addr/available?scope={{BIGIP_SCOPE}}",
							"protocol": "http",
							"host": [
								"10",
								"1",
								"20",
								"6"
							],
							"port": "81",
							"path": [
								"addr",
								"available"
							],
							"query": [
								{
									"key": "scope",
									"value": "{{BIGIP_SCOPE}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "bigip-Check bigip for existing address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c8827b3-06b8-4988-9c55-73c27de7caa9",
								"exec": [
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
									"var jsonData = pm.response.json();\r",
									"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS\"+VS_COUNTER)\r",
									"var exist = 0\r",
									"\r",
									"\r",
									" if (responseCode.code === 200) {\r",
									"  if(!jsonData.length) {\r",
									"       for (var i = 0; i < jsonData.items.length; i++) {\r",
									"            if ( jsonData.items[i].destination.includes(ADDR)) {  \r",
									"               var VS_NAME = jsonData.items[i].name \r",
									"                    \r",
									"                    pm.test(ADDR+\" in use by Virtual server \"+VS_NAME, function () {\r",
									"                        pm.response.to.have.status(200);\r",
									"                    });\r",
									"\r",
									"                    pm.collectionVariables.set(\"EXISTING_VS\", VS_NAME); \r",
									"\r",
									"                    var exist = 1    \r",
									"            }\r",
									"        }\r",
									" }\r",
									"  if (exist === 0) {\r",
									"     pm.test(\"Address \"+ADDR+\" not configured on BIG-IP\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"    postman.setNextRequest(\"bigip-checkout-address\");\r",
									"  }\r",
									" \r",
									" }\r",
									" \r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/virtual/",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"tm",
								"ltm",
								"virtual",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "bigip-checkout-address-exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "24c6f129-2adb-4cdf-b3e6-dd31e36684ef",
								"exec": [
									"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS\");",
									"var VS_NAME = pm.collectionVariables.get(\"EXISTING_VS\");",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Address \"+ADDR+\" checked out for \"+VS_NAME+\". Looking for next available Address\", function () {",
									"    pm.expect(jsonData.status).not.eql(\"Fail\");",
									"});",
									"postman.setNextRequest(\"bigip-Check Scope for existing assignment\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"scope\":\"{{BIGIP_SCOPE}}\",\n\"address\":\"{{BIGIP_ADDRESS}}\",\n\"name\":\"{{EXISTING_VS}}\"\n}"
						},
						"url": {
							"raw": "http://10.1.20.6:81/addr/checkout",
							"protocol": "http",
							"host": [
								"10",
								"1",
								"20",
								"6"
							],
							"port": "81",
							"path": [
								"addr",
								"checkout"
							]
						}
					},
					"response": []
				},
				{
					"name": "bigip-checkout-address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9bd4603c-55ed-4ff0-878d-d8d50e809d3e",
								"exec": [
									"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS\");",
									"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Address \"+ADDR+\" checked out for \"+VS_NAME, function () {",
									"    pm.expect(jsonData.status).not.eql(\"Fail\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"scope\":\"{{BIGIP_SCOPE}}\",\n\"address\":\"{{BIGIP_ADDRESS}}\",\n\"name\":\"{{VS_NAME}}\"\n}"
						},
						"url": {
							"raw": "http://10.1.20.6:81/addr/checkout",
							"protocol": "http",
							"host": [
								"10",
								"1",
								"20",
								"6"
							],
							"port": "81",
							"path": [
								"addr",
								"checkout"
							]
						}
					},
					"response": []
				},
				{
					"name": "end-address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38b82548-7c41-47ca-8959-a9c93e149574",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ca680bf4-8090-4807-a6a0-5698a960ff92",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ab757cb5-20bf-49f7-a5e8-11e91bf4905c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "25f943ad-8b37-4b3d-8b44-f32b2b4cb3a9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "End Loop - Imperative Calls",
			"item": [
				{
					"name": "loop-objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7599e7d2-36e8-4097-bb5b-5787205681e0",
								"exec": [
									"var VIPS = pm.collectionVariables.get(\"VIPS\");",
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\")",
									"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\")",
									"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
									"",
									"if (VS_COUNTER < VIPS ) {",
									"    pm.test(\"Objects for Virutal Server \"+VS_NAME+\" completed.  Creating loop for next virtual server \" , function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    VS_COUNTER++",
									"    DNS_COUNTER++",
									"",
									"pm.collectionVariables.set(\"VS_COUNTER\", VS_COUNTER)",
									"pm.collectionVariables.set(\"DNS_COUNTER\", DNS_COUNTER)",
									"",
									"postman.setNextRequest(\"start-objects\");",
									"",
									"",
									"} else {",
									"    pm.test(\"Objects for Virtual Server \"+VS_NAME+\" Ccmpleted.  All objects created\" , function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"  pm.collectionVariables.set(\"VS_COUNTER\", 1)",
									"   pm.collectionVariables.set(\"DNS_COUNTER\", 1)",
									"}",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "21492c80-e9d5-483e-bbbc-b8fb156030a8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9487c703-ee23-4481-895e-0d4fbabe2ae6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a5525805-a4b1-4f1b-9630-6cea030936cd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Applications",
			"item": [
				{
					"name": "SIngle Tenant-1 VIP-no ServerSSL-Attach PSP",
					"item": [
						{
							"name": "bigip-create-application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9023bfc7-2b3a-4294-b9e3-00276f2fb6a8",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"",
											"pm.test(\"Application \"+VS_NAME+\" created\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8168afa8-8c82-4fb8-8c98-a3d3e0a820fb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"class\": \"ADC\",\r\n    \"action\": \"deploy\",\r\n    \"persist\": true,\r\n    \"declaration\": {\r\n       \"class\": \"ADC\",\r\n       \"schemaVersion\": \"3.14.0\",\r\n       \"id\": \"APM\",\r\n       \"{{PARTITION_NAME}}\": {\r\n          \"class\": \"Tenant\",\r\n          \"{{VS1_NAME}}\": {\r\n             \"class\": \"Application\",\r\n             \"template\": \"generic\",\r\n             \"{{VS1_NAME}}\": {\r\n                \"class\": \"Service_HTTPS\",\r\n                \"virtualAddresses\": [\r\n                 \"{{BIGIP_ADDRESS1}}\"\r\n                ],\r\n                \"virtualPort\": 443,\r\n                \"serverTLS\": \"{{VS1_NAME}}-clientssl\",\r\n                \"pool\": \"iis-pool\",\r\n        \t\t\"snat\": \"auto\",\r\n        \t\t\"profileAccess\": {\r\n        \t\t\t\"bigip\": \"/Common/{{VS1_NAME}}-psp\"\r\n        \t\t   }\r\n                },\r\n                \"{{VS1_NAME}}-clientssl\": {\r\n                    \"class\": \"TLS_Server\",\r\n                    \"certificates\": [\r\n                        {\r\n                        \"certificate\": \"tlsserver_local_cert\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"tlsserver_local_cert\": {\r\n                    \"class\": \"Certificate\",\r\n                    \"certificate\": {\"bigip\":\"/Common/acme.com-wildcard\"},\r\n                    \"privateKey\": {\"bigip\":\"/Common/acme.com-wildcard\"}\r\n                },\r\n                \"iis-pool\": {\r\n                    \"class\": \"Pool\",  \r\n                        \"members\": [\r\n                            {\r\n                            \"serverAddresses\": [\r\n                            \"{{IIS_ADDRESS1}}\"\r\n                            ],\r\n                            \"servicePort\": 80\r\n                            }\r\n                        ],\r\n                    \"monitors\": [\r\n                        \"tcp\"\r\n                    ]\r\n                }\r\n\r\n            }\r\n       }\r\n    }\r\n\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/declare",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"declare"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6f9e3dbf-eca2-4836-8b68-23ff404c5d92",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "672e2f3e-8caf-4b4d-87fc-2663d05dfe2f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "External DNS",
			"item": [
				{
					"name": "Single Application",
					"item": [
						{
							"name": "Create DC1 External DNS Configuration for SIngle App",
							"item": [
								{
									"name": "bigip5-Test AS3 is running",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "896a2db0-60bd-468c-8f86-bbd8d0352c26",
												"exec": [
													"var DC2_APM = pm.environment.get(\"DC2_APM\");",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
													"",
													"if (DC2_APM === 'true' && DC_COUNTER === '2') {",
													"    postman.setNextRequest(\"end-dns-dc1\");",
													"    pm.test(\"Proceeding to DC2 DNS Configuration\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"} else {",
													"",
													"  ",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "537816be-506a-4320-9a55-331f7c047801",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create-DC1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "84d32162-fc9c-44dc-be8c-b8c9016ae211",
												"exec": [
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"DC1 Created\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"DC1 Exists\", function () {",
													"    pm.response.to.have.status(409);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "81fa8546-6112-4fe3-a2b2-42d5d757164d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"name\":\"DC1\"\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/datacenter",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"datacenter"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create-bigip1 server",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a8d4a46-a9ac-4538-b354-db46e2118985",
												"exec": [
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"bigip1 server Created\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"bigip1 server Exists\", function () {",
													"    pm.response.to.have.status(409);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "7d8cc68b-0987-42cd-8824-e1b52356b356",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n            \"name\": \"bigip1.f5lab.local\",\r\n            \"datacenter\": \"/Common/DC1\",\r\n            \"enabled\": true,\r\n            \"exposeRouteDomains\": \"no\",\r\n            \"iqAllowPath\": \"yes\",\r\n            \"iqAllowServiceCheck\": \"yes\",\r\n            \"iqAllowSnmp\": \"yes\",\r\n            \"limitCpuUsage\": 0,\r\n            \"limitCpuUsageStatus\": \"disabled\",\r\n            \"limitMaxBps\": 0,\r\n            \"limitMaxBpsStatus\": \"disabled\",\r\n            \"limitMaxConnections\": 0,\r\n            \"limitMaxConnectionsStatus\": \"disabled\",\r\n            \"limitMaxPps\": 0,\r\n            \"limitMaxPpsStatus\": \"disabled\",\r\n            \"limitMemAvail\": 0,\r\n            \"limitMemAvailStatus\": \"disabled\",\r\n            \"linkDiscovery\": \"disabled\",\r\n            \"monitor\": \"/Common/bigip\",\r\n  \r\n            \"product\": \"bigip\",\r\n            \"virtualServerDiscovery\": \"disabled\",\r\n            \"addresses\": [\r\n                {\r\n                    \"name\": \"10.1.10.4\",\r\n                    \"deviceName\": \"bigip1.f5lab.local\",\r\n                    \"translation\": \"none\"\r\n                }\r\n            ]\r\n\r\n        }\r\n"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create-bigip5 server",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d721765a-ec0f-4415-9ef5-b01c419249c8",
												"exec": [
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"bigip5 server Created\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"bigip5 server Exists\", function () {",
													"    pm.response.to.have.status(409);",
													"});",
													"",
													"setTimeout(function(){}, 2000);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3320694c-7266-45b7-925e-e70d305729b8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n            \"name\": \"bigip5.f5lab.local\",\r\n            \"datacenter\": \"/Common/DC1\",\r\n            \"enabled\": true,\r\n            \"exposeRouteDomains\": \"no\",\r\n            \"iqAllowPath\": \"yes\",\r\n            \"iqAllowServiceCheck\": \"yes\",\r\n            \"iqAllowSnmp\": \"yes\",\r\n            \"limitCpuUsage\": 0,\r\n            \"limitCpuUsageStatus\": \"disabled\",\r\n            \"limitMaxBps\": 0,\r\n            \"limitMaxBpsStatus\": \"disabled\",\r\n            \"limitMaxConnections\": 0,\r\n            \"limitMaxConnectionsStatus\": \"disabled\",\r\n            \"limitMaxPps\": 0,\r\n            \"limitMaxPpsStatus\": \"disabled\",\r\n            \"limitMemAvail\": 0,\r\n            \"limitMemAvailStatus\": \"disabled\",\r\n            \"linkDiscovery\": \"disabled\",\r\n            \"monitor\": \"/Common/bigip\",\r\n  \r\n            \"product\": \"bigip\",\r\n            \"virtualServerDiscovery\": \"disabled\",\r\n            \"addresses\": [\r\n                {\r\n                    \"name\": \"10.1.10.11\",\r\n                    \"deviceName\": \"bigip5.f5lab.local\",\r\n                    \"translation\": \"none\"\r\n                }\r\n            ]\r\n\r\n        }\r\n"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Add bigip1 application VS to Server",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5444af14-8425-4e31-a49f-007e16e0bbf9",
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS1\")",
													"",
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"Virtual Server \"+VS_NAME+\" with IP Address \"+ADDR+\" added to Server bigip1.f5lab.local\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"Virtual Server \"+VS_NAME+\" exists on server bigip1.f5lab.local\", function () {",
													"    pm.response.to.have.status(409);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b7335a7c-c10c-4555-8316-809dae1ef911",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"name\": \"/{{PARTITION_NAME}}/{{PATH_NAME}}/{{VS1_NAME}}\",\r\n\"destination\": \"{{BIGIP_ADDRESS1}}:443\"\r\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip1.f5lab.local/virtual-servers/",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server",
												"~Common~bigip1.f5lab.local",
												"virtual-servers",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create WideIP using AS3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4a7b1c9b-68e6-400a-8879-46d4f91882a8",
												"exec": [
													"var DNS_NAME = pm.collectionVariables.get(\"DNS1_NAME\");\r",
													"\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"\r",
													"pm.test(\"Wide IP \"+DNS_NAME+\" Created\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"} else \r",
													"pm.test(\"Wide IP \"+DNS_NAME+\" exists\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "90a4dc8b-0905-41f7-a83b-b1e9f8d4f9d5",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"class\": \"ADC\",\r\n    \"schemaVersion\": \"3.6.0\",\r\n    \"id\": \"GSLB_Sample\",\r\n    \"{{PARTITION_NAME}}-gslb\": {\r\n        \"class\": \"Tenant\",\r\n        \"{{VS1_NAME}}\": {\r\n            \"class\": \"Application\",\r\n            \"template\": \"generic\",\r\n            \"testDomain\": {\r\n                \"class\": \"GSLB_Domain\",\r\n                \"domainName\": \"{{DNS1_NAME}}\",\r\n                \"resourceRecordType\": \"A\",\r\n                \"poolLbMode\": \"ratio\",\r\n                \"lastResortPool\": {\"use\": \"{{VS1_NAME}}-pool\"},\r\n                \"lastResortPoolType\": \"A\",\r\n                \"pools\": [\r\n                              { \"use\": \"{{VS1_NAME}}-pool\" }\r\n                ]\r\n            },\r\n            \"{{VS1_NAME}}-pool\": {\r\n               \"class\": \"GSLB_Pool\",\r\n                \"enabled\": true,\r\n                \"lbModeAlternate\": \"ratio\",\r\n                \"lbModeFallback\": \"ratio\",\r\n                \"manualResumeEnabled\": false,\r\n                \"verifyMemberEnabled\": true,\r\n                \"members\": [\r\n                \t{\r\n                \t\"ratio\":10,\r\n                \t\"server\": {\r\n                \t\t\"bigip\": \"/Common/bigip1.f5lab.local\"\r\n                \t\t},\r\n                \t\t\"virtualServer\":\"/{{PARTITION_NAME}}/{{PATH_NAME}}/{{VS1_NAME}}\"\r\n                \t}\r\n                ],\r\n                \"resourceRecordType\": \"A\"\r\n            }\r\n        }\r\n    }\r\n \r\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/declare",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"declare"
											]
										}
									},
									"response": []
								},
								{
									"name": "end-dns-dc1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a85ad177-2ca9-4ea4-86c7-443c15c73c7b",
												"exec": [
													"var DC2_APM = pm.environment.get(\"DC2_APM\");",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
													"",
													"if (DC2_APM === 'true' && DC_COUNTER === '2') {",
													"   ",
													"} else {",
													"",
													"    postman.setNextRequest(\"end-dns-dc2\");",
													"    pm.collectionVariables.set('DC_COUNTER', '1' );",
													"    pm.test(\"Skipping DC2 DNS Configuration\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2e5620ee-aca6-42a8-922a-a1dbf2783131",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Add DC2 External DNS Configuration for Single App",
							"item": [
								{
									"name": "start-dns-dc2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "96b404b6-8c32-495a-9ca2-899cf1b66e11",
												"exec": [
													"var DC2_APM = pm.environment.get(\"DC2_APM\");",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
													"",
													"if (DC2_APM === 'true' && DC_COUNTER === '2') {",
													"   ",
													"} else {",
													"",
													"    postman.setNextRequest(\"end-dns-dc2\");",
													"    pm.collectionVariables.set('DC_COUNTER', '1' );",
													"    pm.test(\"Skipping DC2 DNS Configuration\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d457222d-cc2f-4aff-ae48-6292f09a9395",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-exist-bigip2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8223c80c-0508-419c-bd56-bfde1217e857",
												"exec": [
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"    for (var i = 0; i < jsonData.items.length; i++) {\r",
													"\r",
													"        if (jsonData.items[i].name === \"bigip2.f5lab.local\") {\r",
													"            pm.test(\"BIGIP2 already exists\", function () {\r",
													"                pm.response.to.have.status(200);\r",
													"            });\r",
													"            postman.setNextRequest(\"bigip5-Add bigip2 Application VS to Server\");\r",
													"        }\r",
													"    }\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9e0d4a5c-27fc-4896-909d-e5efda82854e",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip_add - bigip2 to bigip5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5252f713-89c5-4d7d-8364-31e4566931b8",
												"exec": [
													"pm.test(\"bigip_add command successfully run\", function () {\r",
													"pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"command\":\"run\",\r\n\t\"options\":[\r\n\t\t{\r\n\t\t\t\"ssh-password\":\"admin\",\r\n\t\t\t\"admin@10.1.1.5\":\"\"\r\n\t\t}\r\n\t]\r\n} "
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/bigip_add",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"bigip_add"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip2.f5lab.local - big3d_install",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "da41977a-b5d4-481d-98ba-9cf6a3550106",
												"exec": [
													"pm.test(\"big3d_install command successfully run\", function () {\r",
													"pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"command\":\"run\",\r\n\t\"options\":[\r\n\t\t{\r\n\t\t\t\"ssh-password\":\"admin\",\r\n\t\t\t\"admin@10.1.1.5\":\"\"\r\n\t\t}\r\n\t]\r\n} "
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/big3d_install",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"big3d_install"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create-DC2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7cccafea-9142-40d3-9cee-ac09eeecd39f",
												"exec": [
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"DC2 Created\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"DC2 Exists\", function () {",
													"    pm.response.to.have.status(409);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d4dbab2c-4e4d-4083-8a26-21c233b08c78",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"name\":\"DC2\"\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/datacenter",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"datacenter"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Server -  BIG-IP2 to BIG-IP5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4f8fefec-41e4-4c85-8a3d-32cb4972d0ea",
												"exec": [
													"if (responseCode.code === 200) {\r",
													"\r",
													"    pm.test(\"BIG-IP2 added\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else\r",
													"    pm.test(\"BIG-IP2 already Exists\", function () {\r",
													"        pm.response.to.have.status(409);\r",
													"    });\r",
													"\r",
													"setTimeout(function(){}, 2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\":\"bigip2.f5lab.local\",\n\t\"datacenter\": \"/Common/DC2\",\n\t\"virtualServerDiscovery\": \"disabled\",\n\t        \"addresses\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\":\"10.1.10.5\",\n\t\t\t\t\t\"deviceName\": \"bigip2.f5lab.local\",\n\t\t\t\t\t\"translation\": \"none\"\n\t\t\t\t}\n\t\t\t]\n\t\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Add bigip2 Application VS to Server",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "41d3b266-d0fd-41c6-bab3-d3e551398af6",
												"exec": [
													"",
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS1\")",
													"",
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"Virtual Server \"+VS_NAME+\" with IP Address \"+ADDR+\" added to server bigip2.f5lab.local\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"Virtual Server \"+VS_NAME+\" exists on server bigip2.f5lab.local\", function () {",
													"    pm.response.to.have.status(409);",
													"});",
													"",
													"setTimeout(function(){},5000);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ab93f44a-60e5-4254-8086-ac640a021a3a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"name\": \"/{{PARTITION_NAME}}/{{PATH_NAME}}/{{VS1_NAME}}\",\r\n\"destination\": \"{{BIGIP_ADDRESS1}}:443\"\r\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip2.f5lab.local/virtual-servers/",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server",
												"~Common~bigip2.f5lab.local",
												"virtual-servers",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Add bigip2 application to WideIP Pool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7d3cf335-8e9a-4e33-a1f0-ddc59ec5e866",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "9e0b4cb1-0f99-480a-85a6-618c9de7a901",
												"exec": [
													"var NAME = pm.collectionVariables.get(\"DNS1_NAME\");",
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS1\")",
													"",
													"",
													"",
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"Virtual Server \"+VS_NAME+\" with IP Address \"+ADDR+\" added to Wide IP \"+NAME, function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"Virtual Server \"+VS_NAME+\" exists on Wide IP \"+NAME, function () {",
													"    pm.response.to.have.status(409);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"name\":\"bigip2.f5lab.local:/{{PARTITION_NAME}}/{{PATH_NAME}}/{{VS1_NAME}}\"\r\n\t\r\n\t\r\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/pool/a/~{{PARTITION_NAME}}-gslb~{{VS1_NAME}}~{{VS1_NAME}}-pool/members",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"pool",
												"a",
												"~{{PARTITION_NAME}}-gslb~{{VS1_NAME}}~{{VS1_NAME}}-pool",
												"members"
											]
										}
									},
									"response": []
								},
								{
									"name": "end-dns-dc2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1b3a52b2-8ecf-4d34-86ff-14d394523925",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c0ef647c-92cb-4491-8940-2ae7c92018ea",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "End loop Datacenters",
			"item": [
				{
					"name": "loop",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99a85864-2608-470b-a531-bc8439813570",
								"exec": [
									"var DC2_APM = pm.environment.get(\"DC2_APM\");",
									"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
									"",
									"if (DC2_APM === 'true' && DC_COUNTER === '1') {",
									"    postman.setNextRequest(\"start\");",
									"    pm.collectionVariables.set('DC_COUNTER', '2' );",
									"",
									"    pm.test(\"Application created in DC1. Beginning DC2 Deployment\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"",
									"} else if (DC2_APM === 'false' && DC_COUNTER === '1') {",
									"    pm.test(\"Application created in DC1 \", function () {",
									"        pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"false\");",
									"    });",
									"",
									"} else {",
									"    pm.test(\"Application created in DC2 \", function () {",
									"        pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"true\");",
									"    });",
									"    pm.collectionVariables.set('DC_COUNTER', '1' );",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1127b3d0-316f-4e7f-a8cb-3476fba85db3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7bd3f752-602a-46ac-967d-ca0dd9f57a16",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e6051cf6-d262-468b-ac38-c0c1c2ca23bd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Display OAuth Client Setting",
			"item": [
				{
					"name": "display client settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3d47152-c67c-4f19-9dd4-20b509c25aa4",
								"exec": [
									"var id = pm.collectionVariables.get(\"CLIENT_ID\");",
									"var secret = pm.collectionVariables.get(\"CLIENT_SECRET\");",
									"var auth_uri = pm.collectionVariables.get(\"AUTH_URI\");",
									"var token_uri = pm.collectionVariables.get(\"TOKEN_URI\");",
									"",
									"pm.test(\"CALLBACK URL: https://www.getpostman.com/oauth2/callback\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"AUTH URL: \" +auth_uri, function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"ACCESS TOKEN URL: \" +token_uri, function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"CLIENT ID: \" +id, function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"CLIENT SECRET: \"+secret, function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1307aeb5-c333-4fc3-bc7c-6adb17130eb8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "58e0ced1-181f-4fa4-acdf-63b60d559f15",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ee185952-a6dc-40d0-a607-aa237b2f7b1a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}