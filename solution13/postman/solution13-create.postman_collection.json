{
	"info": {
		"_postman_id": "782bae3d-cefd-49f8-93aa-58759b68f376",
		"name": "solution13-create",
		"description": "Template 1.8",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Set Collection Parameters",
			"item": [
				{
					"name": "set parameters",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a0e58cd-0865-47a8-9446-d6d329b145ff",
								"exec": [
									"pm.test(\"Setting Parameters\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "98807512-6279-4f6b-a1bd-73e521d60b34",
								"exec": [
									"//Define the number of virtual servers in this solution\r",
									"pm.collectionVariables.set(\"VIPS\", \"1\");\r",
									"\r",
									"//THis below varaibles are using for defining the tenant ID in AS3.  This should be the solution number. Example: solution1 or solution2.\r",
									"pm.collectionVariables.set(\"PATH_NAME\", \"solution13\");\r",
									"pm.collectionVariables.set(\"PARTITION_NAME\", \"solution13\");\r",
									"\r",
									"//This is the primary section defining the settings for the application the solutions is going to deploy\r",
									"pm.collectionVariables.set(\"DNS1_NAME\", \"solution13.acme.com\");\r",
									"pm.collectionVariables.set(\"VS1_NAME\", \"solution13\");\r",
									"\r",
									"\r",
									"//This section is used when building two virtrual servers as part of a solutions or when a reference is needed to another solutions.  For example, if your solutions involved Federation you will need to define both the FQDNs for the both the SP and IDP.  \r",
									"pm.collectionVariables.set(\"DNS2_NAME\", \"as.acme.com\");\r",
									"pm.collectionVariables.set(\"VS2_NAME\", \"as\");\r",
									"\r",
									"\r",
									"//This variable is used for switching between standard and modern for logon pages, webtops, and other objects that support those changes.\r",
									"pm.collectionVariables.set(\"CUSTOM_TYPE\", \"modern\");\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://10.1.1.4/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"10",
								"1",
								"1",
								"4"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Start-loop-Datacenters",
			"item": [
				{
					"name": "start",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba6610ec-b230-48fe-8c50-96362c1a0ac1",
								"exec": [
									"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
									"\r",
									"\r",
									"pm.test(\"Starting configuratioon of Data Center \"+DC_COUNTER, function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "43f83d4f-57cf-45f9-8cfc-7328088f5de1",
								"exec": [
									"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
									"var DC2_APM = pm.environment.get(\"DC2_APM\");\r",
									"\r",
									"\r",
									"if (DC2_APM === 'true' && DC_COUNTER === '2') {\r",
									"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.5\");\r",
									"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP2_SCOPE\"));\r",
									"\r",
									"} else {\r",
									"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.4\");\r",
									"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP1_SCOPE\"));\r",
									"pm.collectionVariables.set('DC_COUNTER', '1' );\r",
									"\r",
									"\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "571d6f39-9119-401d-abf3-a69336a9e50d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b97128f3-c342-4491-b096-72bbe3659818",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Start Loop - Imperative Calls",
			"item": [
				{
					"name": "start-objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d810a96b-1abb-44b9-857f-760034d8b943",
								"exec": [
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
									"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
									"\r",
									"if (!VS_COUNTER) {\r",
									"pm.collectionVariables.set(\"VS_COUNTER\", 1);\r",
									"pm.collectionVariables.set(\"DNS_COUNTER\", 1);\r",
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
									"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
									"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
									"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
									" } else { \r",
									"\r",
									"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
									"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
									"}\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e635bd3b-4e81-4e9c-a807-ecdfd860ed16",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "14905db2-0df3-4e23-ab92-afc25141de16",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9d0c648b-0689-4f29-bfd4-997d64caf805",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "LTM Objects",
			"item": [
				{
					"name": "start LTM objects",
					"item": [
						{
							"name": "start-ltm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb0e6bf6-ed9d-4e32-b14a-3e9021bf87db",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"pm.test(\"Creating LTM objects for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    \r",
											"} else {\r",
											"    postman.setNextRequest(\"end-ltm-1\");\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7e32985d-e13f-4271-a1f7-5eff092538f0",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d5b55813-2114-4c31-ae5b-efac5620ffb6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "67404395-e0d8-48f4-9070-f53871fb412e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "DNS Resolver",
					"item": [
						{
							"name": "bigip-create-DNS resolver",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7fe9e170-766d-432c-92fd-7d5668cdb5cb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6fd4be29-35dd-4b3c-86a0-22593eccf31e",
										"exec": [
											"if (responseCode.code === 200) {",
											"pm.test(\"DNS Resolver Created\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"} else ",
											"pm.test(\"DNS Resolver Exists\", function () {",
											"    pm.response.to.have.status(409);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\":\"{{VS_NAME}}-dns\", \r\n \"forwardZones\": [\r\n                {\r\n                    \"name\": \".\",\r\n                    \"nameservers\": [\r\n                        {\r\n                            \"name\": \"10.1.20.7:53\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/net/dns-resolver",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"net",
										"dns-resolver"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1ecda059-f50d-4033-a209-31f103969067",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5d9f71d7-ea2c-4d6f-b80b-43d23e767b18",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End LTM Objects",
					"item": [
						{
							"name": "end-ltm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5f709bde-8903-4dff-a1e9-021d66133f6e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1bb92d7d-e9a7-4b29-bc4b-ccbc62f180b9",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f92fbcf1-0691-41e8-a32f-9bfbce99eec6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ba3883ca-2e18-48d7-b8d1-e1131b4eb571",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "APM Objects",
			"item": [
				{
					"name": "start APM objects",
					"item": [
						{
							"name": "start-apm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d8fb96d3-7281-495e-b107-e4f711fc7b70",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Creating APM objects for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Proceeding to creation of  Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-apm-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-apm-\"+VS);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7aa59830-6f45-4d19-bc4e-7227308b17e9",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "AAA Oauth Provider",
					"item": [
						{
							"name": "bigip-import ca.acme.com cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ebb0e3a2-9447-40a7-a95c-813d0f309100",
										"exec": [
											"pm.test(\"ca.acme.com.crt installed\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3d321a55-fbc3-4bbb-b9e9-cf214c86e277",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/octet-stream"
									},
									{
										"key": "Content-Range",
										"value": "0-1263/1264",
										"type": "text"
									},
									{
										"key": "Content-Length",
										"value": "1264",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "-----BEGIN CERTIFICATE-----\r\nMIIDazCCAlOgAwIBAgIQJ4DA+pop3K9HGUl4CIxjbjANBgkqhkiG9w0BAQsFADBI\r\nMRUwEwYKCZImiZPyLGQBGRYFbG9jYWwxFTATBgoJkiaJk/IsZAEZFgVmNWxhYjEY\r\nMBYGA1UEAxMPZGMxLmY1bGFiLmxvY2FsMB4XDTE5MTEyMDIyMDc0NVoXDTI5MTEy\r\nMDIyMTc0NVowSDEVMBMGCgmSJomT8ixkARkWBWxvY2FsMRUwEwYKCZImiZPyLGQB\r\nGRYFZjVsYWIxGDAWBgNVBAMTD2RjMS5mNWxhYi5sb2NhbDCCASIwDQYJKoZIhvcN\r\nAQEBBQADggEPADCCAQoCggEBANOejxrkrJD12YIeEkZNjRZ9/OZwFeX+QhVi1uHL\r\niILP+4+3ZiZ/dhVGQLncDfHlJm5hSXpzMMDK+LxmjnWfBcx8xurgDyL6E80ZTnIP\r\nBbVJ6Au2IWFXM62NK/qsE+5IF0ptAYzDiWjj75njoVQygMNkdWEPxu1N+Ar7WAR4\r\n5xghN2wE7d57iCZ53RmrIeGT6equiihns5nUssoOFh/ny9oR6+yudINlozllHhMB\r\nGRDCEeGC/0mY/LF50hP6vwEbl1ub0J1SlqlvTn3rrX7dumvtjSKxfQipwbCpG8Qz\r\nGi7ZsSe78Xg7VIGtDVk0Vh4+PbHVJ6GB8pUmFpQ4vVa6sY0CAwEAAaNRME8wCwYD\r\nVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFNhpUMHsIixtS9g6\r\ny/FyNrayg9V6MBAGCSsGAQQBgjcVAQQDAgEAMA0GCSqGSIb3DQEBCwUAA4IBAQCr\r\nEjJWFyZR3VFoIvZxUztGiWSjELJGD0vH42hONh6GrzxHadhZcQFmQsi4SmS9TUhP\r\nqyj+mUzreWziMcogqTYisSmF6h/cyAujdnLPbR//spGSOvLlV+43P57FmpQ+c+bB\r\nV8CJq3e0uvxt2h/9v5Du20fE/Zb6iPESMSjzhEoCPosozELpEqwKTzwGLsyqgLSN\r\nWW/+Ov+DGr+cE8pHsXZy8yhkbDY5wrbHMCyrRuXFXwYLpoMcUKMOWUCq+K3TSQ2A\r\nmGUtzY3KMfC7YCJj+mrCniWmvncryUpkY3hPplglevWAFQx4hslOU618gt4IpBXy\r\nLlIC0DqyAVMHJqF7WozV\r\n-----END CERTIFICATE-----\r\n"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/file-transfer/uploads/ca.acme.com.crt",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"file-transfer",
										"uploads",
										"ca.acme.com.crt"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-install ca.acme.com cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "603d2740-5037-49ec-bdf7-c04eef71f978",
										"exec": [
											"pm.test(\"ca.acme.com imported\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"command\":\"install\",\n\t\"name\":\"ca.acme.com\",\n\t\"from-local-file\":\"/var/config/rest/downloads/ca.acme.com.crt\"\n\t\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/sys/crypto/cert",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"sys",
										"crypto",
										"cert"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create-oauth-provider",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf25c775-dc90-445b-a7fc-ce9bd45ba8d2",
										"exec": [
											"if (responseCode.code === 200) {",
											"",
											"    pm.test(\"OAuth Provider Created\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else ",
											"    pm.test(\"OAuth Provider Exists\", function () {",
											"        pm.response.to.have.status(409);",
											"    });",
											"",
											"setTimeout(function(){}, 3000);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b55e91d2-ee53-44eb-9c9c-ab426904978c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n    \"name\": \"{{VS_NAME}}-provider\",\r\n    \"partition\": \"Common\",\r\n    \"allowSelfSignedJwkCert\": \"yes\",\r\n    \"discoveryInterval\": 60,\r\n    \"ignoreExpiredCert\": \"false\",\r\n    \"introspect\": \"supported\",\r\n    \"maxJsonNestingLayers\": 8,\r\n    \"maxResponseSize\": 131072,\r\n    \"openidCfgUri\": \"https://{{DNS2_NAME}}/f5-oauth2/v1/.well-known/openid-configuration\",\r\n    \"saveJsonPayload\": \"disabled\",\r\n    \"trustedCaBundle\": \"/Common/ca.acme.com\",\r\n     \"type\": \"f5\"\r\n\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/oauth-provider",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"aaa",
										"oauth-provider"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-retrieve-discovery task id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4b80b591-c51b-4784-89d3-46370c93a7c5",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"var jsonData = JSON.parse(responseBody);",
											"var exist = 0",
											"",
											"",
											"for (var i = 0; i < jsonData.items.length; i++) {",
											"",
											"if ( jsonData.items[i].providerName  === \"/Common/\"+VS_NAME+\"-provider\" ) {",
											"    pm.collectionVariables.set(\"DISCOVER_ID\",jsonData.items[i].id);",
											"    pm.test(\"Discovery Task ID Found\", function () {",
											"    pm.response.to.have.status(200);",
											"    });",
											"    exist = 1",
											"} ",
											"} ",
											"",
											"if (exist === 0) {",
											"    postman.setNextRequest(\"bigip-discover-provider-endpoints\");",
											"    pm.test(\"Discovery Task does not exist\", function () {",
											"    pm.response.to.have.status(200);",
											"    });",
											"}",
											"",
											"setTimeout(function(){}, 3000);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a3528d2f-8d87-46a0-ab9b-456532adf9d5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n    \"providerName\": \"{{VS_NAME}}-provider\"\r\n    \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/access/oidc/discover",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"access",
										"oidc",
										"discover"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-cancel-provider discover task",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e471bb20-4e71-4ba4-98bb-0dcb07d1d185",
										"exec": [
											"if (responseCode.code === 200) {",
											"    pm.test(\"Discovery Task Stopped\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} ",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "84cab34e-73d4-4f8e-b3e8-3afe2f25c149",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n    \"status\":CANCEL_REQUESTED\"\r\n    \r\n}\r\n\r\n"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/access/oidc/discover/{{DISCOVER_ID}}",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"access",
										"oidc",
										"discover",
										"{{DISCOVER_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-provider discover task",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "420c2a4b-ccdb-48fc-99f7-72c31a11669a",
										"exec": [
											"if (responseCode.code === 200) {",
											"    pm.test(\"Discovery Task Deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "672ac7d7-9937-461a-9197-fd52a70c5e31",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/access/oidc/discover/{{DISCOVER_ID}}",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"access",
										"oidc",
										"discover",
										"{{DISCOVER_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-discover-provider-endpoints",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5882a912-15d0-4cb7-9201-d2bd80c67a91",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.collectionVariables.set(\"DISCOVER_ID\",jsonData.id);",
											"",
											"if (responseCode.code === 202) { ",
											"    pm.test(\"Discovery Task Created\", function () {",
											"        pm.response.to.have.status(202);",
											"    });",
											"} else if (responseCode.code === 400) {",
											"    pm.test(\"Task exists\", function () {",
											"        pm.expect(pm.response.text()).to.include(\"Duplicate item. Key already exists\");",
											"    });",
											"}",
											"",
											"",
											"setTimeout(function(){}, 3000);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6d8424f0-a31d-4c52-acc6-07132677c2a5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n    \"providerName\": \"{{VS_NAME}}-provider\"\r\n    \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/access/oidc/discover",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"access",
										"oidc",
										"discover"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-retrieve-provider endpoints",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "42b44a75-7324-4d7a-8fc7-0d753bf48be8",
										"exec": [
											"",
											"if (responseCode.code === 200) {",
											"    var jsonData = JSON.parse(responseBody);",
											"    str = \"f5-oauth.local\";",
											"    if (jsonData.authenticationUri.includes(str)) {",
											"        pm.test(\"Unable to retrive Endpoints.  Ensure integrated Authorization Server solution is deployed prior to deploying this solution \", function () {",
											"            pm.response.to.have.status(400);",
											"        });",
											"        postman.setNextRequest(\"null\");",
											"  } else {",
											"",
											"    pm.test(\"Endpoints Retrieved\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    pm.collectionVariables.set(\"AUTH_URI\",jsonData.authenticationUri);",
											"    pm.collectionVariables.set(\"TOKEN_URI\",jsonData.tokenUri);",
											"    ",
											"} ",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e9d1e434-96b1-450a-96ff-0e5b05d126e7",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/oauth-provider/~Common~{{VS_NAME}}-provider",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"aaa",
										"oauth-provider",
										"~Common~{{VS_NAME}}-provider"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Provider List",
					"item": [
						{
							"name": "bigip-create-jwt provider list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "97592d06-420f-45b4-aa75-9f1dbb6aa7b1",
										"exec": [
											"if (responseCode.code === 200) {",
											"    pm.test(\"JWT Provider List Created\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else ",
											"    pm.test(\"JWT Provider List Exists\", function () {",
											"        pm.response.to.have.status(409);",
											"    });",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "167405f2-e241-4002-820a-4dd88cdb74ea",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \r\n            \"name\": \"{{VS_NAME}}-list\",\r\n            \"partition\": \"Common\",\r\n            \"accessTokenExpiresIn\": 0,\r\n            \"providers\": [\r\n                \"/Common/{{VS_NAME}}-provider\"\r\n            ]                \r\n            \r\n}\r\n"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/oauth/jwt-provider-list",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"oauth",
										"jwt-provider-list"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "OAuth Client",
					"item": [
						{
							"name": "Postman",
							"item": [
								{
									"name": "bigip-create-customization group-OAuth Client",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b46d2dc4-24ca-4b5b-bc9e-bdf590d41490",
												"exec": [
													"if (responseCode.code === 200) {\r",
													"    pm.test(\"Customization Group Created\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else \r",
													"    pm.test(\"Customization Group Exists\", function () {\r",
													"        pm.response.to.have.status(409);\r",
													"    });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}_oauth_authz_client_app_customization\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/standard\",\r\n    \"type\": \"oauth-authz-client-app\"\r\n    \r\n    \r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group/",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"customization-group",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-create-OAuth Client",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1bef6131-a622-499c-97f4-771480c43349",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"pm.collectionVariables.set(\"CLIENT_ID\",jsonData.clientId);\r",
													"pm.collectionVariables.set(\"CLIENT_SECRET\",jsonData.clientSecret);\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"    pm.test(\"OAuth Client Created\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (responseCode.code === 409) {\r",
													"    pm.test(\"OAuth Client Exists\", function () {\r",
													"        pm.response.to.have.status(409);\r",
													"    });\r",
													"    postman.setNextRequest(\"bigip-retreive-OAuth Client\");\r",
													"} else\r",
													"    pm.test(\"OAuth Client not found\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n         \r\n            \"name\": \"{{VS_NAME}}\",\r\n            \"partition\": \"Common\",\r\n            \"accessTokenLifetime\": 5,\r\n            \"appName\": \"{{VS_NAME}}\",\r\n            \"authCodeLifetime\": 5,\r\n            \"authType\": \"secret\",\r\n            \"customizationGroup\": \"/Common/{{VS_NAME}}_oauth_authz_client_app_customization\",\r\n            \"generateJwtRefreshToken\": \"true\",\r\n            \"generateRefreshToken\": \"true\",\r\n            \"grantCode\": \"enabled\",\r\n            \"grantPassword\": \"disabled\",\r\n            \"grantToken\": \"disabled\",\r\n            \"idTokenLifetime\": 5,\r\n            \"jwtAccessTokenLifetime\": 5,\r\n            \"jwtRefreshTokenLifetime\": 60,\r\n            \"openidConnect\": \"enabled\",\r\n            \"redirectUris\": [\r\n                \"https://www.getpostman.com/oauth2/callback\"\r\n            ],\r\n            \"refreshTokenLifetime\": 480,\r\n            \"refreshTokenUsageLimit\": 64,\r\n            \"reuseAccessToken\": \"false\",\r\n            \"reuseRefreshToken\": \"false\",\r\n            \"useProfileTokenMgmtSettings\": \"true\"\r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/oauth/oauth-client-app",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"oauth",
												"oauth-client-app"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-retreive-OAuth Client",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d81988b8-0af6-40ae-b70f-1b93d4179788",
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"\r",
													"for (var i = 0; i < jsonData.items.length; i++) {\r",
													"\r",
													"\tif (jsonData.items[i].name === VS_NAME) {\r",
													"               pm.collectionVariables.set(\"CLIENT_ID\",jsonData.items[i].clientId);\r",
													"               pm.collectionVariables.set(\"CLIENT_SECRET\",jsonData.items[i].clientSecret);\r",
													"\r",
													"              pm.test(\"Existing client information retrieved\", function () {\r",
													"              pm.response.to.have.status(200);\r",
													"            });\r",
													"            \r",
													"\t}\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/oauth/oauth-client-app",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"oauth",
												"oauth-client-app"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-modify-OAuth Clients list",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e52ecd95-ac03-4591-be50-4cd6b018766e",
												"exec": [
													" if (responseCode.code === 409)\r",
													"    pm.test(\"OAuth Client Exists on Auth Server\", function () {\r",
													"        pm.response.to.have.status(409);\r",
													"    });\r",
													"else  if (responseCode.code === 200) {\r",
													"    pm.test(\"OAuth Client added to Auth Server\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else {\r",
													"      pm.test(\"OAuth Client unable to be added to Authorization Server.   Ensure you deploy Integrated Authorization Server solution first and then redploy this solution.  Stopping automation\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"null\");\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"name\": \"{{VS_NAME}}\",\r\n   \"partition\": \"solution10\"\r\n  \r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/oauth/~Common~{{VS2_NAME}}-oauth/client-apps",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"profile",
												"oauth",
												"~Common~{{VS2_NAME}}-oauth",
												"client-apps"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-Apply Policy on AS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "365edaf0-739a-4d9f-a4fd-4f1de5897c96",
												"exec": [
													"\r",
													"pm.test(\"Apply Policy Successful\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"generationAction\": \"increment\"   \r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/~Common~{{VS2_NAME}}-psp",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"profile",
												"access",
												"~Common~{{VS2_NAME}}-psp"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End APM Objects",
					"item": [
						{
							"name": "end-apm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8bffae6b-52f2-467a-a86d-72cbcb1cd606",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0a980dac-8525-4b4f-999b-2595612e04d8",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "830dc424-0102-4a1c-9a4a-010408e6837d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5e7ef9b8-3ced-4081-9877-6be5910c2842",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "API Protection Profile",
			"item": [
				{
					"name": "start api",
					"item": [
						{
							"name": "start-api-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "35080a61-9c15-471b-8ae5-78c132bc97c2",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"pm.collectionVariables.set(\"SWAGGER_COUNTER\", 0);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Creating API Protection profile for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Proceeding to creation of API Protection profile for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-api-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-api-\"+VS);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "267e34aa-c866-4938-b5e6-713fc51b4efa",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "568f5f04-c3ad-4ca7-b2ec-6f093102d1e9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0730ee0a-feaa-4ca1-a730-2114532ecab9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Swagger Objects",
					"item": [
						{
							"name": "retrieve-swagger",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8f659e40-5b59-4383-ba40-571f68a83112",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "967b04cc-ec41-477f-a26b-6767242c5daa",
										"exec": [
											"var jsonData = JSON.parse(responseBody)\r",
											"pm.collectionVariables.set(\"SWAGGER_UNFORMATTED\",JSON.stringify(jsonData));\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Swagger File Retrieved\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{FILES_BASE}}/solution13/specfiles/ActiveDirectoryOpenAPI.json",
									"host": [
										"{{FILES_BASE}}"
									],
									"path": [
										"solution13",
										"specfiles",
										"ActiveDirectoryOpenAPI.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "upload-swagger",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ce6d8482-906f-43e8-bedc-c92199e00284",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "31c87a62-2329-4787-b74d-5f103cbf06ea",
										"exec": [
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Swagger File Uploaded\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Range",
										"value": "0-1937/1938",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{SWAGGER_UNFORMATTED}}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/file-transfer/uploads/{{VS_NAME}}.json",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"file-transfer",
										"uploads",
										"{{VS_NAME}}.json"
									]
								}
							},
							"response": []
						},
						{
							"name": "parse-swagger",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1861dcc5-4d0a-4790-937d-2755245b9eae",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4df8d64c-e6a8-4e58-a18d-f813b29586ad",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(\"SWAGGER_VERSION\",jsonData.version);\r",
											"pm.collectionVariables.set(\"SWAGGER_BASEPATH\",jsonData.basePath);\r",
											"pm.collectionVariables.set(\"SWAGGER_RAW\",JSON.stringify(jsonData));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"specFilePath\":\"/var/config/rest/downloads/{{VS_NAME}}.json\"\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apiprotection/openapi-parser",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apiprotection",
										"openapi-parser"
									]
								}
							},
							"response": []
						},
						{
							"name": "create-servers-swagger",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "31a46b88-5e96-438d-a6a7-5772a2c8fa9c",
										"exec": [
											"\r",
											"var jsonData = JSON.parse(pm.collectionVariables.get(\"SWAGGER_RAW\"));\r",
											"\r",
											"var counter = pm.collectionVariables.get(\"SWAGGER_COUNTER\");\r",
											"\r",
											"\r",
											" \t\tif (counter <= jsonData.servers.length) {\r",
											"            pm.collectionVariables.set(\"SWAGGER_SERVERS\", jsonData.servers[counter].url);\r",
											"\t\t    pm.collectionVariables.set(\"SWAGGER_COUNTER\", counter+1 );\r",
											"\t\t} else {\r",
											"             \r",
											"             pm.collectionVariables.set(\"SWAGGER_COUNTER\", 0 );\r",
											"\t   }\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b955627f-70ad-4e62-9fa3-c84952f137e6",
										"exec": [
											"var jsonData = JSON.parse(pm.collectionVariables.get(\"SWAGGER_RAW\"));\r",
											"var counter = pm.collectionVariables.get(\"SWAGGER_COUNTER\");\r",
											"\r",
											"if (counter < jsonData.servers.length) {\r",
											"postman.setNextRequest(\"create-servers-swagger\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"     pm.test(\"Server created - Additional Servers Required\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    });\r",
											"    } else \r",
											"     pm.test(\"Server exists - Additional Server Required\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											" \r",
											"} else {\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"     pm.test(\"Server created - All Servers Deployed\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    });\r",
											"    pm.collectionVariables.set(\"SWAGGER_COUNTER\", 0 );\r",
											"    } else \r",
											"     pm.test(\"Server exists - All Servers Deployed \", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"    });\r",
											"    pm.collectionVariables.set(\"SWAGGER_COUNTER\", 0 );\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{VS_NAME}}_server{{SWAGGER_COUNTER}}\",\r\n    \"partition\": \"Common\",\r\n    \"url\": \"{{SWAGGER_SERVERS}}\"\r\n\r\n    \r\n\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/api-protection/server",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"api-protection",
										"server"
									]
								}
							},
							"response": []
						},
						{
							"name": "create-responses-swagger",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "65a3ecd9-1ddc-4ad1-a17a-c0f6ea527d04",
										"exec": [
											"\r",
											"var jsonData = JSON.parse(pm.collectionVariables.get(\"SWAGGER_RAW\"));\r",
											"\r",
											"var counter = pm.collectionVariables.get(\"SWAGGER_COUNTER\");\r",
											"\r",
											"\r",
											"  if(!counter) {\r",
											"      var counter = 0\r",
											"  }\r",
											"\t\tif (counter <= jsonData.responses.length) {\r",
											"            pm.collectionVariables.set(\"SWAGGER_RESPONSES_STATUSCODE\", jsonData.responses[counter].statusCode);\r",
											"            pm.collectionVariables.set(\"SWAGGER_RESPONSES_STATUSSTRING\", jsonData.responses[counter].statusString);\r",
											"\t\t    pm.collectionVariables.set(\"SWAGGER_COUNTER\", counter+1 );\r",
											"\t\t} else {\r",
											"             \r",
											"             pm.collectionVariables.set(\"SWAGGER_COUNTER\", 0 );\r",
											"\t   }\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3b9df428-186f-45eb-aa98-900e711def61",
										"exec": [
											"var jsonData = JSON.parse(pm.collectionVariables.get(\"SWAGGER_RAW\"));\r",
											"var counter = pm.collectionVariables.get(\"SWAGGER_COUNTER\");\r",
											"\r",
											"if (counter < jsonData.responses.length) {\r",
											"postman.setNextRequest(\"create-responses-swagger\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"     pm.test(\"Response created - Additional Responses Required\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    });\r",
											"    } else \r",
											"     pm.test(\"Response exists - Additional Responses Required\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											" \r",
											"} else {\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"     pm.test(\"Response created - All Responses Deployed\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    });\r",
											"    pm.collectionVariables.set(\"SWAGGER_COUNTER\", 0 );\r",
											"    } else \r",
											"     pm.test(\"Response exists - All Responses Deployed \", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"    });\r",
											"    pm.collectionVariables.set(\"SWAGGER_COUNTER\", 0 );\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}_swagger_response{{SWAGGER_COUNTER}}\",\r\n    \"partition\": \"Common\",\r\n    \"statusCode\": \"{{SWAGGER_RESPONSES_STATUSCODE}}\",\r\n    \"statusString\": \"{{SWAGGER_RESPONSES_STATUSSTRING}}\"\r\n  \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/api-protection/response/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"api-protection",
										"response",
										""
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "API protection Standard Responses",
					"item": [
						{
							"name": "Create-response-standard-1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "644b3cbd-663a-4136-9376-60aab65b2ea5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "62af8fde-3cb6-4cc2-acbb-58616b24d480",
										"exec": [
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Standard Response Created \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"Standard Response Exists\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"value": "{{TRANSID}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}_auto_response1\",\r\n    \"partition\": \"Common\",\r\n    \"statusCode\": \"403\",\r\n    \"statusString\": \"Forbidden\"\r\n  \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/api-protection/response/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"api-protection",
										"response",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create-response-standard-2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6d905bde-5f7e-4bd9-a6e4-fdbc4f5f0033",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ec2f9bd5-733d-4a64-9977-5928cb210f08",
										"exec": [
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Standard Response Created \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"Standard Response Exists\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}_auto_response2\",\r\n    \"partition\": \"Common\",\r\n    \"statusCode\": \"%{perflow.oauth.scope.status_code}\",\r\n     \"statusString\": \"%{perflow.oauth.scope.status_string}\"\r\n  \r\n}\r\n"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/api-protection/response/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"api-protection",
										"response",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create-response-standard-3",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "aab5ee37-f99b-45bf-9166-2e538466e37c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "fea9d3be-326c-4b48-868b-fbce86365b3c",
										"exec": [
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Standard Response Created \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"Standard Response Exists\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"value": "{{TRANSID}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}_auto_response_api_rate_limiting3\",\r\n    \"partition\": \"Common\",\r\n    \"body\": \"API request was denied due to Rate Limiting enforcement, reason: %{perflow.api_rate_limiting.error_string}\",\r\n    \"statusCode\": \"429\",\r\n    \"statusString\": \"Too Many Requests\"\r\n  \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/api-protection/response/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"api-protection",
										"response",
										""
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "API Protection-PSP ",
					"item": [
						{
							"name": "bigip-create transaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "61ec3822-275f-4059-9629-054750dd9c1c",
										"exec": [
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.collectionVariables.set(\"TRANSID\", jsonData.transId);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "027a79b2-aa62-4851-8d1d-960bb120e49d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/transaction",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"transaction"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create-customization group-end deny",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "55a3f39a-6575-42af-9ec5-2eb79f4a620d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_end_deny_ag\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n    \"type\": \"logout\"\r\n    \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"customization-group"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create-customization group-logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "46df2a3d-db91-4334-910b-d4ccd471103f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{VS_NAME}}-psp_logout\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n    \"type\": \"logout\"\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"customization-group"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create-customization group-eps",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "be102759-60c5-480a-b98c-9422360af5c8",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_eps\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n    \"type\": \"eps\"\r\n    \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"customization-group"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create-customization group-error map",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca3c6d38-f5c7-4576-aa1f-3fffbab3d69c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_errormap\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n    \"type\": \"errormap\"\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"customization-group"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create-customization group-framework",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17c2c039-e938-4672-a3fe-0c0d4b1fe976",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \r\n     \"name\": \"{{VS_NAME}}-psp_framework_installation\",\r\n\t \"partition\": \"Common\",\r\n     \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n     \"type\": \"framework-installation\"\r\n    \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"customization-group"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create-customization group-general ui",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "48a2afdc-fc5c-41c5-9a75-28ef7bc9e7dc",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_general_ui\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n    \"type\": \"general-ui\"\r\n    \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"customization-group"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create-agent-allow ending",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c92fae7-4764-46ef-8acf-897f80bf85bd",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"value": "{{TRANSID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"name\": \"{{VS_NAME}}-psp_end_allow_ag\",\n\"partition\": \"Common\"\n\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/agent/ending-allow/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"agent",
										"ending-allow",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create-agent-deny ending",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "84fb0db4-2e6d-447a-8901-77fbf0790cb7",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"name\": \"{{VS_NAME}}-psp_end_deny_ag\",\n\"partition\": \"Common\",\n\"customizationGroup\": \"/Common/{{VS_NAME}}-psp_end_deny_ag\"\n\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/agent/ending-deny/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"agent",
										"ending-deny",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create- policy item-allow ending",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "74619fa5-2315-423f-b264-539a477fad74",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"value": "{{TRANSID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_end_allow\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"Allow\",\r\n    \"color\": 1,\r\n    \"itemType\": \"ending\",\r\n    \"agents\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_end_allow_ag\",\r\n\t\t\t\"partition\": \"Common\",\r\n            \"type\": \"ending-allow\"\r\n\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"policy-item",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create-policy item-Deny ending",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "51d73f40-be12-46c7-83e0-942b2b68a779",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"value": "{{TRANSID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_end_deny\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"Deny\",\r\n    \"color\": 2,\r\n    \"itemType\": \"ending\",\r\n    \"agents\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_end_deny_ag\",\r\n\t\t\t\"partition\": \"Common\",\r\n            \"type\": \"ending-deny\"\r\n\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"policy-item",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create-policy item-start",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a08b9650-9f54-40ff-91af-8f9fb08007ad",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_ent\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"Start\",\r\n    \"color\": 1,\r\n    \"itemType\": \"entry\",\r\n    \"loop\": \"false\",\r\n    \"rules\": [\r\n        {\r\n            \"caption\": \"fallback\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-psp_end_allow\"\r\n\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"policy-item",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create-policy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d569673c-e150-4743-85a5-347cf28b5262",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp\",\r\n    \"partition\": \"Common\",\r\n    \"defaultEnding\": \"{{VS_NAME}}-psp_end_allow\",\r\n        \"maxMacroLoopCount\": 1,\r\n    \"oneshotMacro\": \"false\",\r\n    \"startItem\": \"{{VS_NAME}}-psp_ent\",\r\n    \"type\": \"access-policy\",\r\n    \"items\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_end_allow\",\r\n            \"partition\": \"Common\"\r\n  \r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_end_deny\",\r\n            \"partition\": \"Common\"\r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_ent\",\r\n            \"partition\": \"Common\"\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/access-policy/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"access-policy",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create-profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "54bce18e-d2aa-44d0-adf9-f16b852840d5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp\",\r\n    \"partition\": \"Common\",\r\n    \"acceptLanguages\": [\r\n        \"en\"\r\n    ],\r\n    \"accessPolicy\": \"/Common/{{VS_NAME}}-psp\",\r\n      \"customizationGroup\": \"/Common/{{VS_NAME}}-psp_logout\",\r\n    \"epsGroup\": \"/Common/{{VS_NAME}}-psp_eps\",\r\n    \"errormapGroup\": \"/Common/{{VS_NAME}}-psp_errormap\",\r\n    \"frameworkInstallationGroup\": \"/Common/{{VS_NAME}}-psp_framework_installation\",\r\n    \"generalUiGroup\": \"/Common/{{VS_NAME}}-psp_general_ui\",\r\n    \"accessPolicyTimeout\": 300,\r\n    \"defaultLanguage\": \"en\",\r\n     \"httponlyCookie\": \"false\",\r\n    \"inactivityTimeout\": 900,\r\n    \"logoutUriTimeout\": 5,\r\n    \"maxConcurrentSessions\": 0,\r\n    \"maxConcurrentUsers\": 0,\r\n    \"maxFailureDelay\": 5,\r\n    \"maxInProgressSessions\": 128,\r\n    \"maxSessionTimeout\": 604800,\r\n    \"minFailureDelay\": 2,\r\n    \"modifiedSinceLastPolicySync\": \"false\",\r\n    \"persistentCookie\": \"false\",\r\n    \"restrictToSingleClientIp\": \"false\",\r\n    \"scope\": \"profile\",\r\n    \"secureCookie\": \"true\",\r\n    \"type\": \"api-protection\",\r\n    \"useHttp_503OnError\": \"false\",\r\n    \"userIdentityMethod\": \"http\",\r\n    \"logSettings\": [\r\n        \"/Common/default-log-setting\"\r\n    ]\r\n\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"profile",
										"access",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-commit-transaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5726db79-529d-477c-9b7a-62bb6d0cc0f9",
										"exec": [
											"\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"\r",
											"    pm.test(VS_NAME+\"-psp created\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(VS_NAME+\"-psp exists\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"state\":\"VALIDATING\"\t\n\t\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/transaction/{{TRANSID}}/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"transaction",
										"{{TRANSID}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-apply policy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6dbbc81a-5653-4ff1-bbf0-6d3078b36810",
										"exec": [
											"\r",
											"pm.test(\"Apply Policy Successful\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"generationAction\": \"increment\"   \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/~Common~{{VS_NAME}}-psp",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"profile",
										"access",
										"~Common~{{VS_NAME}}-psp"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "95d77b10-feb5-4c35-ad47-ae25ac7c41a6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "054ec1da-c367-416e-b581-f8b1492c898e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "API Protection-PRP",
					"item": [
						{
							"name": "Baseline Policy",
							"item": [
								{
									"name": "Create Transaction",
									"item": [
										{
											"name": "bigip-create transaction",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "46be2588-58ae-4c5b-b287-0002376b5408",
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"pm.collectionVariables.set(\"TRANSID\", jsonData.transId);",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "17ba699c-8e3f-4980-8c65-e504118daa7a",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\n}"
												},
												"url": {
													"raw": "https://10.1.1.4/mgmt/tm/transaction",
													"protocol": "https",
													"host": [
														"10",
														"1",
														"1",
														"4"
													],
													"path": [
														"mgmt",
														"tm",
														"transaction"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Policy-Item Reject Ending",
									"item": [
										{
											"name": "create-agent-reject ending",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"value": "{{TRANSID}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n    \"name\": \"{{VS1_NAME}}-prp_end_reject_ag\",\r\n    \"partition\": \"Common\"\r\n    \r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/agent/ending-reject/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"agent",
														"ending-reject",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "create-policy item-reject ending",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"value": "{{TRANSID}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{VS1_NAME}}-prp_end_reject\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"Reject\",\r\n    \"color\": 2,\r\n    \"itemType\": \"ending\",\r\n    \"loop\": \"false\",\r\n    \"agents\": [\r\n        {\r\n            \"name\": \"{{VS1_NAME}}-prp_end_reject_ag\",\r\n            \"partition\": \"Common\",\r\n            \"type\": \"ending-reject\"\r\n            \r\n        }\r\n    ]\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"policy-item",
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Policy-Item Allow Ending",
									"item": [
										{
											"name": "create-agent-allow ending",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"value": "{{TRANSID}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \r\n    \"name\": \"{{VS1_NAME}}-prp_end_allow_ag\",\r\n    \"partition\": \"Common\"\r\n    \r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/agent/ending-allow",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"agent",
														"ending-allow"
													]
												}
											},
											"response": []
										},
										{
											"name": "create-policy item-allow ending",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"value": "{{TRANSID}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \r\n    \"name\": \"{{VS1_NAME}}-prp_end_allow\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"Allow\",\r\n    \"color\": 1,\r\n    \"itemType\": \"ending\",\r\n    \"loop\": \"false\",\r\n    \"agents\": [\r\n        {\r\n            \"name\": \"{{VS1_NAME}}-prp_end_allow_ag\",\r\n            \"partition\": \"Common\",\r\n            \"type\": \"ending-allow\"\r\n            \r\n        }\r\n    ]\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"policy-item",
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Policy-Item Endpoint Classification",
									"item": [
										{
											"name": "create-agent-classification",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{VS_NAME}}-prp_act_request_classification_ag\",\r\n    \"partition\": \"Common\"\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/agent/request-classification/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"agent",
														"request-classification",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "create-policy item-classification",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "9aee02e9-4225-43c5-800d-78d792ec05dd",
														"exec": [
															"\r",
															"var jsonData = JSON.parse(pm.collectionVariables.get(\"SWAGGER_RAW\"));\r",
															"\r",
															"var path_id = 1\r",
															"for (var i = 0; i < jsonData.paths.length; i++) {\r",
															"\t   \r",
															"        var uri = jsonData.paths[i].uri;\r",
															"        var method = jsonData.paths[i].method;\r",
															"\r",
															"        \r",
															"        var classify = \"{\\\"caption\\\": \\\"\"+method+ \" \" +uri+\"\\\",\\\"expression\\\": \\\"expr { [mcget {perflow.request_classification.path_id}] == \" + path_id +  \"}\\\",\\\"nextItem\\\": \\\"/Common/{{VS_NAME}}-prp_end_allow\\\"},\";\r",
															"        path_id++\r",
															"    \r",
															"        if (i===0) {\r",
															"        var body = classify\r",
															"        \r",
															"        } else \r",
															"        var body = body + classify;\r",
															"  \r",
															"\t}\r",
															"    \r",
															"    pm.collectionVariables.set(\"CLASSIFICATION_BODY\", body);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "e1ba1960-7c7e-4182-8e9f-e314ad54b1ba",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-prp_act_request_classification\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"Classify API Request (RCA)\",\r\n    \"color\": 1,\r\n    \"itemType\": \"action\",\r\n    \"loop\": \"false\",\r\n    \"agents\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-prp_act_request_classification_ag\",\r\n            \"partition\": \"Common\",\r\n            \"type\": \"request-classification\"\r\n        }\r\n    ],\r\n    \"rules\": [\r\n        {{CLASSIFICATION_BODY}}\r\n        {\r\n            \"caption\": \"fallback\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-prp_end_reject\"\r\n            \r\n        }\r\n    ]\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"policy-item",
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Policy-Item Macro",
									"item": [
										{
											"name": "Create Macro",
											"item": [
												{
													"name": "create-policy item-macro",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "password",
																	"value": "admin",
																	"type": "string"
																},
																{
																	"key": "username",
																	"value": "admin",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-F5-REST-Coordination-Id",
																"type": "text",
																"value": "{{TRANSID}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \r\n    \"name\": \"{{VS_NAME}}-prp_mac_{{VS_NAME}}-prp_auth\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"OAuth Scope Check AuthZ\",\r\n    \"color\": 1,\r\n    \"itemType\": \"macro-call\",\r\n    \"loop\": \"false\",\r\n    \"macro\": \"/Common/{{VS_NAME}}-prp_auth\",\r\n \r\n    \"rules\": [\r\n        {\r\n            \"caption\": \"Out\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-prp_act_request_classification\"\r\n        },\r\n        {\r\n            \"caption\": \"Reject\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-prp_end_reject\"\r\n        }\r\n    ]\r\n}"
														},
														"url": {
															"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item",
															"protocol": "https",
															"host": [
																"{{BIGIP_MGMT}}"
															],
															"path": [
																"mgmt",
																"tm",
																"apm",
																"policy",
																"policy-item"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Macro Authentication",
											"item": [
												{
													"name": "Policy-Item API Authentication",
													"item": [
														{
															"name": "create-agent-api protection",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "password",
																			"value": "admin",
																			"type": "string"
																		},
																		{
																			"key": "username",
																			"value": "admin",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "X-F5-REST-Coordination-Id",
																		"type": "text",
																		"value": "{{TRANSID}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \r\n    \"name\": \"{{VS_NAME}}-prp_auth_act_api_authentication_ag\",\r\n    \"partition\": \"Common\"\r\n    \r\n}"
																},
																"url": {
																	"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/agent/api-authentication",
																	"protocol": "https",
																	"host": [
																		"{{BIGIP_MGMT}}"
																	],
																	"path": [
																		"mgmt",
																		"tm",
																		"apm",
																		"policy",
																		"agent",
																		"api-authentication"
																	]
																}
															},
															"response": []
														},
														{
															"name": "create-policy item-api authentication",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "password",
																			"value": "admin",
																			"type": "string"
																		},
																		{
																			"key": "username",
																			"value": "admin",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "X-F5-REST-Coordination-Id",
																		"type": "text",
																		"value": "{{TRANSID}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \r\n    \"name\": \"{{VS_NAME}}-prp_auth_act_api_authentication\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"API Authentication\",\r\n    \"color\": 1,\r\n    \"itemType\": \"action\",\r\n    \"loop\": \"false\",\r\n    \"agents\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-prp_auth_act_api_authentication_ag\",\r\n            \"partition\": \"Common\",\r\n            \"type\": \"api-authentication\"\r\n        }\r\n    ],\r\n    \"rules\": [\r\n        {\r\n            \"caption\": \"http\",\r\n            \"expression\": \"expr {[mcget {subsession.api_auth.scheme}] == \\\\\\\"http\\\\\\\"}\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-prp_auth_ter_reject\"\r\n            \r\n        },\r\n        {\r\n            \"caption\": \"oauth\",\r\n            \"expression\": \"expr {[mcget {subsession.api_auth.scheme}] == \\\\\\\"oauth\\\\\\\"}\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-prp_auth_act_oauth_scope_subsession\"\r\n            \r\n        },\r\n        {\r\n            \"caption\": \"fallback\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-prp_auth_ter_reject\"\r\n        }\r\n    ]\r\n}"
																},
																"url": {
																	"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item",
																	"protocol": "https",
																	"host": [
																		"{{BIGIP_MGMT}}"
																	],
																	"path": [
																		"mgmt",
																		"tm",
																		"apm",
																		"policy",
																		"policy-item"
																	]
																}
															},
															"response": []
														}
													],
													"protocolProfileBehavior": {},
													"_postman_isSubFolder": true
												},
												{
													"name": "Policy-Item OAuth aaa",
													"item": [
														{
															"name": "create-agent-aaa oauth",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "password",
																			"value": "admin",
																			"type": "string"
																		},
																		{
																			"key": "username",
																			"value": "admin",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "X-F5-REST-Coordination-Id",
																		"value": "{{TRANSID}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n           \r\n            \"name\": \"{{VS_NAME}}-prp_auth_act_oauth_scope_subsession_ag\",\r\n            \"partition\": \"Common\",\r\n            \"grantType\": \"authorization-code\",\r\n            \"jwtProviderList\": \"/Common/{{VS_NAME}}-list\",\r\n            \"openidConnect\": \"disabled\",\r\n            \"openidFlowType\": \"code\",\r\n            \"openidHybridResponseType\": \"code-idtoken\",\r\n            \"redirectionUri\": \"https://%{session.server.network.name}/oauth/client/redirect\",\r\n            \"response\": \"/Common/{{VS_NAME}}_auto_response1\",\r\n            \"tokenValidationMode\": \"internal\",\r\n            \"type\": \"scope\"\r\n}"
																},
																"url": {
																	"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/agent/aaa-oauth/",
																	"protocol": "https",
																	"host": [
																		"{{BIGIP_MGMT}}"
																	],
																	"path": [
																		"mgmt",
																		"tm",
																		"apm",
																		"policy",
																		"agent",
																		"aaa-oauth",
																		""
																	]
																}
															},
															"response": []
														},
														{
															"name": "create-policy item-aaa oauth",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "password",
																			"value": "admin",
																			"type": "string"
																		},
																		{
																			"key": "username",
																			"value": "admin",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "X-F5-REST-Coordination-Id",
																		"type": "text",
																		"value": "{{TRANSID}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-prp_auth_act_oauth_scope_subsession\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"OAuth Scope\",\r\n    \"color\": 1,\r\n    \"itemType\": \"action\",\r\n    \"loop\": \"false\",\r\n    \"agents\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-prp_auth_act_oauth_scope_subsession_ag\",\r\n            \"partition\": \"Common\",\r\n            \"type\": \"aaa-oauth\"\r\n        }\r\n    ],\r\n    \"rules\": [\r\n        {\r\n            \"caption\": \"Successful\",\r\n            \"expression\": \"expr {[mcget {subsession.oauth.scope.last.authresult}] == 1}\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-prp_auth_ter_out\"\r\n        },\r\n        {\r\n            \"caption\": \"fallback\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-prp_auth_ter_reject\"\r\n        }\r\n    ]\r\n}"
																},
																"url": {
																	"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
																	"protocol": "https",
																	"host": [
																		"{{BIGIP_MGMT}}"
																	],
																	"path": [
																		"mgmt",
																		"tm",
																		"apm",
																		"policy",
																		"policy-item",
																		""
																	]
																}
															},
															"response": []
														}
													],
													"protocolProfileBehavior": {},
													"_postman_isSubFolder": true
												},
												{
													"name": "Policy-Item Entry",
													"item": [
														{
															"name": "create-policy item-entry",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "password",
																			"value": "admin",
																			"type": "string"
																		},
																		{
																			"key": "username",
																			"value": "admin",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "X-F5-REST-Coordination-Id",
																		"type": "text",
																		"value": "{{TRANSID}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-prp_auth_ent_in\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"In\",\r\n    \"color\": 1,\r\n    \"itemType\": \"entry\",\r\n    \"loop\": \"false\",\r\n    \"rules\": [\r\n        {\r\n            \"caption\": \"fallback\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-prp_auth_act_api_authentication\"\r\n            \r\n        }\r\n    ]\r\n}"
																},
																"url": {
																	"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
																	"protocol": "https",
																	"host": [
																		"{{BIGIP_MGMT}}"
																	],
																	"path": [
																		"mgmt",
																		"tm",
																		"apm",
																		"policy",
																		"policy-item",
																		""
																	]
																}
															},
															"response": []
														}
													],
													"protocolProfileBehavior": {},
													"_postman_isSubFolder": true
												},
												{
													"name": "Policy-Item Out",
													"item": [
														{
															"name": "create-policy item-out terminal",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "password",
																			"value": "admin",
																			"type": "string"
																		},
																		{
																			"key": "username",
																			"value": "admin",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "X-F5-REST-Coordination-Id",
																		"value": "{{TRANSID}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"name\": \"{{VS_NAME}}-prp_auth_ter_out\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"Out\",\r\n    \"color\": 1,\r\n    \"itemType\": \"terminal-out\",\r\n    \"loop\": \"false\"\r\n}"
																},
																"url": {
																	"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
																	"protocol": "https",
																	"host": [
																		"{{BIGIP_MGMT}}"
																	],
																	"path": [
																		"mgmt",
																		"tm",
																		"apm",
																		"policy",
																		"policy-item",
																		""
																	]
																}
															},
															"response": []
														}
													],
													"protocolProfileBehavior": {},
													"_postman_isSubFolder": true
												},
												{
													"name": "Policy-Item reject ",
													"item": [
														{
															"name": "create-policy item-reject terminal",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "password",
																			"value": "admin",
																			"type": "string"
																		},
																		{
																			"key": "username",
																			"value": "admin",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "X-F5-REST-Coordination-Id",
																		"value": "{{TRANSID}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"name\": \"{{VS_NAME}}-prp_auth_ter_reject\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"Reject\",\r\n    \"color\": 2,\r\n    \"itemType\": \"terminal-out\",\r\n    \"loop\": \"false\"\r\n}"
																},
																"url": {
																	"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
																	"protocol": "https",
																	"host": [
																		"{{BIGIP_MGMT}}"
																	],
																	"path": [
																		"mgmt",
																		"tm",
																		"apm",
																		"policy",
																		"policy-item",
																		""
																	]
																}
															},
															"response": []
														}
													],
													"protocolProfileBehavior": {},
													"_postman_isSubFolder": true
												},
												{
													"name": "Create Subroutine",
													"item": [
														{
															"name": "create-policy-prp-subroutine",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "password",
																			"value": "admin",
																			"type": "string"
																		},
																		{
																			"key": "username",
																			"value": "admin",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "X-F5-REST-Coordination-Id",
																		"type": "text",
																		"value": "{{TRANSID}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n  \r\n    \"name\": \"{{VS_NAME}}-prp_auth\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"OAuth Scope Check AuthZ\",\r\n    \"defaultEnding\": \"/Common/{{VS_NAME}}-prp_auth_ter_out\",\r\n    \"maxMacroLoopCount\": 1,\r\n    \"oneshotMacro\": \"false\",\r\n    \"startItem\": \"/Common/{{VS_NAME}}-prp_auth_ent_in\",\r\n    \"type\": \"api-protection-subroutine\",\r\n    \"items\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-prp_auth_act_api_authentication\",\r\n            \"partition\": \"Common\",\r\n            \"priority\": 0\r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-prp_auth_act_oauth_scope_subsession\",\r\n            \"partition\": \"Common\",\r\n            \"priority\": 0\r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-prp_auth_ent_in\",\r\n            \"partition\": \"Common\",\r\n            \"priority\": 0\r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-prp_auth_ter_out\",\r\n            \"partition\": \"Common\",\r\n            \"priority\": 2\r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-prp_auth_ter_reject\",\r\n            \"partition\": \"Common\",\r\n            \"priority\": 3\r\n        }\r\n    ],\r\n    \"subroutineProperties\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-prp_auth\",\r\n            \"partition\": \"Common\",\r\n            \"gatingCriteria\": \"expr { [ mcget {request.header.authorization} ]  }\",\r\n            \"inactivityTimeout\": 300,\r\n            \"maxSubsessionLifetime\": 900,\r\n            \"subroutineTimeout\": 120\r\n        }\r\n    ]\r\n}"
																},
																"url": {
																	"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/access-policy",
																	"protocol": "https",
																	"host": [
																		"{{BIGIP_MGMT}}"
																	],
																	"path": [
																		"mgmt",
																		"tm",
																		"apm",
																		"policy",
																		"access-policy"
																	]
																}
															},
															"response": []
														}
													],
													"protocolProfileBehavior": {},
													"_postman_isSubFolder": true
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Policy-Item Start",
									"item": [
										{
											"name": "create-policy item-start",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"value": "{{TRANSID}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-prp_ent\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"Start\",\r\n    \"color\": 1,\r\n    \"itemType\": \"entry\",\r\n    \"loop\": \"false\",\r\n    \"rules\": [\r\n        {\r\n            \"caption\": \"fallback\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-prp_mac_{{VS_NAME}}-prp_auth\"\r\n            \r\n        }\r\n    ]\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"policy-item",
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Create Policy",
									"item": [
										{
											"name": "create-policy-prp",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"value": "{{TRANSID}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{VS_NAME}}-prp\",\r\n    \"partition\": \"Common\",\r\n    \r\n    \"defaultEnding\": \"/Common/{{VS_NAME}}-prp_end_reject\",\r\n    \"macros\": [\r\n        \"/Common/{{VS_NAME}}-prp_auth\"\r\n    ],\r\n    \"maxMacroLoopCount\": 1,\r\n    \"oneshotMacro\": \"false\",\r\n    \"startItem\": \"/Common/{{VS_NAME}}-prp_ent\",\r\n    \"type\": \"api-protection\",\r\n    \"items\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-prp_act_request_classification\",\r\n            \"partition\": \"Common\",\r\n            \"priority\": 0\r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-prp_end_allow\",\r\n            \"partition\": \"Common\",\r\n            \"priority\": 0\r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-prp_end_reject\",\r\n            \"partition\": \"Common\",\r\n            \"priority\": 0 \r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-prp_ent\",\r\n            \"partition\": \"Common\",\r\n            \"priority\": 0\r\n            \r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-prp_mac_{{VS_NAME}}-prp_auth\",\r\n            \"partition\": \"Common\",\r\n            \"priority\": 0\r\n         \r\n        }\r\n    ],\r\n    \"perReqPolicyProperties\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-prp\",\r\n            \"partition\": \"Common\",\r\n            \"incompleteAction\": \"deny\"\r\n        }\r\n    ]\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/access-policy",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"access-policy"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Commit Transaction",
									"item": [
										{
											"name": "bigip1- commit transaction",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "09c4ba9f-b2c4-4351-a088-d06e0a840115",
														"exec": [
															"\r",
															"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");\r",
															"\r",
															"if (responseCode.code === 200) {\r",
															"\r",
															"    pm.test(VS_NAME+\"-prp created\", function () {\r",
															"        pm.response.to.have.status(200);\r",
															"    });\r",
															"} else \r",
															"    pm.test(VS_NAME+\"-prp exists\", function () {\r",
															"        pm.response.to.have.status(409);\r",
															"    });\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"state\":\"VALIDATING\"\t\n\t\n}"
												},
												"url": {
													"raw": "https://10.1.1.4/mgmt/tm/transaction/{{TRANSID}}/",
													"protocol": "https",
													"host": [
														"10",
														"1",
														"1",
														"4"
													],
													"path": [
														"mgmt",
														"tm",
														"transaction",
														"{{TRANSID}}",
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "API Protection Profile",
					"item": [
						{
							"name": "Create-Profile-API Protection",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "549ff8a7-58c5-4c3f-843e-84ed7bfa8fc7",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "936ce229-3280-40ea-86d8-032ea75c65c4",
										"exec": [
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"API Profile Created\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"API Profile Exists\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n{    \r\n            \"name\": \"{{VS_NAME}}-api\",\r\n            \"partition\": \"Common\",\r\n            \"accessProfile\": \"/Common/{{VS_NAME}}-psp\",\r\n            \"createSecurityPolicy\": \"false\",\r\n            \"defaultResponse\": \"/Common/{{VS_NAME}}_auto_response1\",\r\n            \"defaultServer\": \"/Common/{{VS_NAME}}_server1\",\r\n            \"dnsMode\": \"ipv4-only\",\r\n            \"maxConcurrentSubsessions\": 0,\r\n            \"perRequestPolicy\": \"/Common/{{VS_NAME}}-prp\",\r\n            \"usePool\": \"false\",\r\n            \"basePath\": \"{{SWAGGER_BASEPATH}}\",\r\n            \"openapiVersion\": \"{{SWAGGER_VERSION}}\",\r\n            \"dnsResolver\": \"{{VS_NAME}}-dns\",\r\n            \"lastGeneratedPathId\": 0,\r\n\t\t\t\"blackWhiteListsR\": {\r\n              \r\n            },\r\n            \"paths\":[]\r\n              \r\n            ,\r\n            \"rateLimitingConfigs\": {\r\n                \r\n            },\r\n            \"rateLimitingKeys\": {\r\n                \r\n            },\r\n            \"responses\":  [\r\n                 \"/Common/{{VS_NAME}}_auto_response1\"\r\n                 \"/Common/{{VS_NAME}}_auto_response2\"\r\n                 \"/Common/{{VS_NAME}}_auto_response_api_rate_limiting3\"\r\n            \r\n            ],    \r\n            \"servers\": [\r\n                \"/Common/{{VS_NAME}}_server1\"\r\n            ]\r\n             \r\n  \r\n    \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/api-protection/profile/apiprotection",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"api-protection",
										"profile",
										"apiprotection"
									]
								}
							},
							"response": []
						},
						{
							"name": "create-paths",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d1906c29-b291-4d9a-be9d-7d1fd575f3f9",
										"exec": [
											"\r",
											"var jsonData = JSON.parse(pm.collectionVariables.get(\"SWAGGER_RAW\"));\r",
											"var counter = pm.collectionVariables.get(\"SWAGGER_COUNTER\");\r",
											"\r",
											"\r",
											"  if(!counter) {\r",
											"      var counter = 0\r",
											"  }\r",
											"\t\tif (counter <= jsonData.paths.length) {\r",
											"            pm.collectionVariables.set(\"SWAGGER_PATH_URI\", jsonData.paths[counter].uri);\r",
											"            pm.collectionVariables.set(\"SWAGGER_PATH_METHOD\", jsonData.paths[counter].method);\r",
											"            pm.collectionVariables.set(\"SWAGGER_COUNTER\", counter+1 );\r",
											"\t\t} else {\r",
											"             \r",
											"             pm.collectionVariables.set(\"SWAGGER_COUNTER\", 0 );\r",
											"\t   }\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "06cb2329-3bb7-4c33-9aa8-75007b0f3ce8",
										"exec": [
											"var jsonData = JSON.parse(pm.collectionVariables.get(\"SWAGGER_RAW\"));\r",
											"var counter = pm.collectionVariables.get(\"SWAGGER_COUNTER\");\r",
											"\r",
											"if (counter < jsonData.paths.length) {\r",
											"postman.setNextRequest(\"create-paths\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"     pm.test(\"Path created - Additional Paths Required\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    });\r",
											"    } else \r",
											"     pm.test(\"Path exists - Additional Paths Required\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											" \r",
											"} else {\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"     pm.test(\"Server created - All Paths Deployed\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    });\r",
											"    pm.collectionVariables.set(\"SWAGGER_COUNTER\", 0 );\r",
											"    } else \r",
											"     pm.test(\"Server exists - All Paths Deployed \", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"    });\r",
											"    pm.collectionVariables.set(\"SWAGGER_COUNTER\", 0 );\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{VS_NAME}}_path{{SWAGGER_COUNTER}}\",\r\n    \"partition\": \"Common\",\r\n    \"active\": \"true\",\r\n    \"uri\": \"{{SWAGGER_PATH_URI}}\",\r\n    \"method\": \"{{SWAGGER_PATH_METHOD}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/api-protection/profile/apiprotection/~Common~{{VS_NAME}}-api/paths",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"api-protection",
										"profile",
										"apiprotection",
										"~Common~{{VS_NAME}}-api",
										"paths"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-assign-reponses-swagger",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "154dff5e-4eb7-4ca2-af0a-d439f6d26db1",
										"exec": [
											"var jsonData = JSON.parse(pm.collectionVariables.get(\"SWAGGER_RAW\"));\r",
											"var counter = pm.collectionVariables.get(\"SWAGGER_COUNTER\");\r",
											"\r",
											"\r",
											"if(!counter) {\r",
											"      var counter = 0\r",
											"}\r",
											"\r",
											"if (counter <= jsonData.responses.length) {\r",
											"\tpm.collectionVariables.set(\"SWAGGER_COUNTER\", counter+1 );\r",
											"} else {  \r",
											"    pm.collectionVariables.set(\"SWAGGER_COUNTER\", 0 );\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1807f9f9-1cf0-4cc4-9a6c-01a493a9ff83",
										"exec": [
											"var jsonData = JSON.parse(pm.collectionVariables.get(\"SWAGGER_RAW\"));\r",
											"var counter = pm.collectionVariables.get(\"SWAGGER_COUNTER\");\r",
											"\r",
											"if (counter < jsonData.responses.length) {\r",
											"postman.setNextRequest(\"bigip-assign-reponses-swagger\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"     pm.test(\"Response Assigned - Additional Responses Required\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    });\r",
											"    } else \r",
											"     pm.test(\"Response exists - Additional Responses Required\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											" \r",
											"} else {\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"     pm.test(\"Response Assigned - All Responses Deployed\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    });\r",
											"    pm.collectionVariables.set(\"SWAGGER_COUNTER\", 0 );\r",
											"    } else \r",
											"     pm.test(\"Response exists - All Responses Deployed \", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"    });\r",
											"    pm.collectionVariables.set(\"SWAGGER_COUNTER\", 0 );\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}_swagger_response{{SWAGGER_COUNTER}}\",\r\n    \"partition\": \"Common\"\r\n   \r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/api-protection/profile/apiprotection/~Common~{{VS_NAME}}-api/responses/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"api-protection",
										"profile",
										"apiprotection",
										"~Common~{{VS_NAME}}-api",
										"responses",
										""
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End api",
					"item": [
						{
							"name": "end-api-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f522b47f-f075-43cf-8c1e-d9cac0263385",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d5891e95-81c6-440d-90de-0bd1a72628b9",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fe55527-5baf-4126-835c-b7a221d11a61",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "30472d61-094a-46af-b6a1-75b11910927b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Virtual Server Address Assignment",
			"item": [
				{
					"name": "bigip-Check Scope for existing assignment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6fa391b1-37f9-4359-887d-e2756c8508b2",
								"exec": [
									"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
									"var jsonData = pm.response.json();\r",
									"var EXIST = 0\r",
									"\r",
									"\r",
									"\r",
									"if(!jsonData.length) {\r",
									"    if ( jsonData.Description  === VS_NAME ) {\r",
									"        pm.collectionVariables.set(\"BIGIP_ADDRESS\"+VS_COUNTER, jsonData.IPAddress.IPAddressToString );\r",
									"        pm.collectionVariables.set(\"BIGIP_ADDRESS\", pm.collectionVariables.get(\"BIGIP_ADDRESS\"+VS_COUNTER));\r",
									"        var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS\"+VS_COUNTER);\r",
									"        postman.setNextRequest(\"end-address\");\r",
									"        var EXIST = 1;\r",
									"        if (responseCode.code === 200) {\r",
									"            pm.test(\"Existing Address \"+ADDR+\" assigned to \"+VS_NAME, function () {\r",
									"                pm.response.to.have.status(200);\r",
									"            });\r",
									"        }\r",
									"    }\r",
									"} else {\r",
									"\r",
									"  for (var i = 0; i < jsonData.length; i++) {\r",
									"\r",
									"        if ( jsonData[i].Description  === VS_NAME ) {   \r",
									"            pm.collectionVariables.set(\"BIGIP_ADDRESS\"+VS_COUNTER, jsonData[i].IPAddress.IPAddressToString );\r",
									"            pm.collectionVariables.set(\"BIGIP_ADDRESS\", pm.collectionVariables.get(\"BIGIP_ADDRESS\"+VS_COUNTER));\r",
									"            var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS\"+VS_COUNTER);\r",
									"            postman.setNextRequest(\"end-address\");\r",
									"            var EXIST =1;\r",
									"\r",
									"            if (responseCode.code === 200) {\r",
									"                pm.test(\"Existing Address \"+ADDR+\" assigned to \"+VS_NAME, function () {\r",
									"                    pm.response.to.have.status(200);\r",
									"                });\r",
									"            }\r",
									"        } \r",
									"    }\r",
									"} \r",
									"\r",
									"if (EXIST === 0) {\r",
									"    if (responseCode.code === 200) {\r",
									"        pm.test(\"No Address assigned to \"+VS_NAME , function () {\r",
									"            pm.response.to.have.status(200);\r",
									"        }); \r",
									"    }\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://10.1.20.6:81/addr/scope-status?scope={{BIGIP_SCOPE}}",
							"protocol": "http",
							"host": [
								"10",
								"1",
								"20",
								"6"
							],
							"port": "81",
							"path": [
								"addr",
								"scope-status"
							],
							"query": [
								{
									"key": "scope",
									"value": "{{BIGIP_SCOPE}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "bigip-Check for next available address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c4cf719e-aa68-4d68-baa0-7b9546dd6e2a",
								"exec": [
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"BIGIP_ADDRESS\"+VS_COUNTER,jsonData.address);\r",
									"pm.collectionVariables.set(\"BIGIP_ADDRESS\", pm.collectionVariables.get(\"BIGIP_ADDRESS\"+VS_COUNTER));\r",
									"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS\"+VS_COUNTER)\r",
									"\r",
									"pm.test(\"Next availble address is \"+ADDR, function () {\r",
									"    pm.expect(jsonData.address).not.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://10.1.20.6:81/addr/available?scope={{BIGIP_SCOPE}}",
							"protocol": "http",
							"host": [
								"10",
								"1",
								"20",
								"6"
							],
							"port": "81",
							"path": [
								"addr",
								"available"
							],
							"query": [
								{
									"key": "scope",
									"value": "{{BIGIP_SCOPE}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "bigip-Check bigip for existing address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5eb1c1cb-d51c-4cd5-8116-0163bf78eeba",
								"exec": [
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
									"var jsonData = pm.response.json();\r",
									"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS\"+VS_COUNTER)\r",
									"var exist = 0\r",
									"\r",
									"\r",
									" if (responseCode.code === 200) {\r",
									"  if(!jsonData.length) {\r",
									"       for (var i = 0; i < jsonData.items.length; i++) {\r",
									"            if ( jsonData.items[i].destination.includes(ADDR)) {  \r",
									"               var VS_NAME = jsonData.items[i].name \r",
									"                    \r",
									"                    pm.test(ADDR+\" in use by Virtual server \"+VS_NAME, function () {\r",
									"                        pm.response.to.have.status(200);\r",
									"                    });\r",
									"\r",
									"                    pm.collectionVariables.set(\"EXISTING_VS\", VS_NAME); \r",
									"\r",
									"                    var exist = 1    \r",
									"            }\r",
									"        }\r",
									" }\r",
									"  if (exist === 0) {\r",
									"     pm.test(\"Address \"+ADDR+\" not configured on BIG-IP\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"    postman.setNextRequest(\"bigip-checkout-address\");\r",
									"  }\r",
									" \r",
									" }\r",
									" \r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/virtual/",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"tm",
								"ltm",
								"virtual",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "bigip-checkout-address-exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "85fbb827-74ac-440e-b63a-57cff311968d",
								"exec": [
									"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS\");",
									"var VS_NAME = pm.collectionVariables.get(\"EXISTING_VS\");",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Address \"+ADDR+\" checked out for \"+VS_NAME+\". Looking for next available Address\", function () {",
									"    pm.expect(jsonData.status).not.eql(\"Fail\");",
									"});",
									"postman.setNextRequest(\"bigip-Check Scope for existing assignment\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"scope\":\"{{BIGIP_SCOPE}}\",\n\"address\":\"{{BIGIP_ADDRESS}}\",\n\"name\":\"{{EXISTING_VS}}\"\n}"
						},
						"url": {
							"raw": "http://10.1.20.6:81/addr/checkout",
							"protocol": "http",
							"host": [
								"10",
								"1",
								"20",
								"6"
							],
							"port": "81",
							"path": [
								"addr",
								"checkout"
							]
						}
					},
					"response": []
				},
				{
					"name": "bigip-checkout-address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b61d02c-4f72-418f-a9b6-bdd530ffddad",
								"exec": [
									"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS\");",
									"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Address \"+ADDR+\" checked out for \"+VS_NAME, function () {",
									"    pm.expect(jsonData.status).not.eql(\"Fail\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"scope\":\"{{BIGIP_SCOPE}}\",\n\"address\":\"{{BIGIP_ADDRESS}}\",\n\"name\":\"{{VS_NAME}}\"\n}"
						},
						"url": {
							"raw": "http://10.1.20.6:81/addr/checkout",
							"protocol": "http",
							"host": [
								"10",
								"1",
								"20",
								"6"
							],
							"port": "81",
							"path": [
								"addr",
								"checkout"
							]
						}
					},
					"response": []
				},
				{
					"name": "end-address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "34cacd89-4920-41ff-a4d8-ace74d68b89e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "24461185-9838-4822-b9f6-60811acd9cd5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1da9777a-09dc-4711-9bd5-7071097b3d61",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5d80fc98-6a2f-40aa-8559-a6033653eb98",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "End Loop - Imperative Calls",
			"item": [
				{
					"name": "loop-objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b1187947-3976-41fd-a6a4-e6a2ee73b29c",
								"exec": [
									"var VIPS = pm.collectionVariables.get(\"VIPS\");",
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\")",
									"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\")",
									"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
									"",
									"if (VS_COUNTER < VIPS ) {",
									"    pm.test(\"Objects for Virutal Server \"+VS_NAME+\" completed.  Creating loop for next virtual server \" , function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    VS_COUNTER++",
									"    DNS_COUNTER++",
									"",
									"pm.collectionVariables.set(\"VS_COUNTER\", VS_COUNTER)",
									"pm.collectionVariables.set(\"DNS_COUNTER\", DNS_COUNTER)",
									"",
									"postman.setNextRequest(\"start-objects\");",
									"",
									"",
									"} else {",
									"    pm.test(\"Objects for Virtual Server \"+VS_NAME+\" Ccmpleted.  All objects created\" , function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"  pm.collectionVariables.set(\"VS_COUNTER\", 1)",
									"   pm.collectionVariables.set(\"DNS_COUNTER\", 1)",
									"}",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3e3078da-0728-48a8-800f-512d398db455",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7ba7eda2-ff83-4eef-bfe0-46d95af5e105",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7af150c4-dbb7-4017-a9e3-edd015a7739f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Applications",
			"item": [
				{
					"name": "Single Tenant-1 VIP- API protection profile",
					"item": [
						{
							"name": "bigip-create-application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9798656a-906b-43a0-9f0e-3cf42b5ec304",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"pm.test(\"Application \"+VS_NAME+\" created\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"setTimeout(function(){}, 3000);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"class\": \"ADC\",\r\n    \"action\": \"deploy\",\r\n    \"persist\": true,\r\n    \"declaration\": {\r\n       \"class\": \"ADC\",\r\n       \"schemaVersion\": \"3.14.0\",\r\n       \"id\": \"APM\",\r\n       \"{{PARTITION_NAME}}\": {\r\n          \"class\": \"Tenant\",\r\n          \"{{VS_NAME}}\": {\r\n             \"class\": \"Application\",\r\n             \"template\": \"generic\",\r\n             \"{{VS_NAME}}\": {\r\n                \"class\": \"Service_HTTPS\",\r\n                \"virtualAddresses\": [\r\n                 \"{{BIGIP_ADDRESS1}}\"\r\n                ],\r\n                \"virtualPort\": 443,\r\n                \"serverTLS\": \"{{VS_NAME}}-clientssl\",\r\n        \t\t\"snat\": \"auto\"\r\n                },\r\n                \"{{VS_NAME}}-clientssl\": {\r\n                    \"class\": \"TLS_Server\",\r\n                    \"certificates\": [\r\n                        {\r\n                        \"certificate\": \"tlsserver_local_cert\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"tlsserver_local_cert\": {\r\n                    \"class\": \"Certificate\",\r\n                    \"certificate\": {\"bigip\":\"/Common/acme.com-wildcard\"},\r\n                    \"privateKey\": {\"bigip\":\"/Common/acme.com-wildcard\"}\r\n                }\r\n\r\n\r\n            }\r\n       }\r\n    }\r\n\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/declare",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"declare"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-attach-profile-api protection",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "60a99ce6-57b5-4eab-816f-356317a6dbf0",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "51ca74a6-75d7-4b05-bc0a-9e32f706b7a0",
										"exec": [
											"if (responseCode.code === 200) {",
											"    pm.test(\"API Protection Profile Attached \", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else ",
											"    pm.test(\"API Protection Profile Exists\", function () {",
											"        pm.response.to.have.status(409);",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "            {\r\n                \"name\":\"{{VS_NAME}}-api\"\r\n            }\r\n            \r\n       \r\n"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/virtual/~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS_NAME}}/profiles",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"virtual",
										"~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS_NAME}}",
										"profiles"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "External DNS",
			"item": [
				{
					"name": "Single Application",
					"item": [
						{
							"name": "Create DC1 External DNS Configuration for SIngle App",
							"item": [
								{
									"name": "bigip5-Test AS3 is running",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a3427257-73e8-4dae-abd2-4f4f53a4a91f",
												"exec": [
													"var DC2_APM = pm.environment.get(\"DC2_APM\");",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
													"",
													"if (DC2_APM === 'true' && DC_COUNTER === '2') {",
													"    postman.setNextRequest(\"end-dns-dc1\");",
													"    pm.test(\"Proceeding to DC2 DNS Configuration\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"} else {",
													"",
													"  ",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1402d742-7ef0-4842-a95f-21fc28141e62",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create-DC1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bf49f29e-9542-4fe9-bb78-3608ed2925f2",
												"exec": [
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"DC1 Created\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"DC1 Exists\", function () {",
													"    pm.response.to.have.status(409);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b1d3d974-dc38-4896-96eb-99a09a955eed",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"name\":\"DC1\"\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/datacenter",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"datacenter"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create-bigip1 server",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "be2e398e-c285-4df7-9c50-f8c88ecb601d",
												"exec": [
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"bigip1 server Created\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"bigip1 server Exists\", function () {",
													"    pm.response.to.have.status(409);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "211750a1-79ab-4c0f-bf7a-9d97c15a3e26",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n            \"name\": \"bigip1.f5lab.local\",\r\n            \"datacenter\": \"/Common/DC1\",\r\n            \"enabled\": true,\r\n            \"exposeRouteDomains\": \"no\",\r\n            \"iqAllowPath\": \"yes\",\r\n            \"iqAllowServiceCheck\": \"yes\",\r\n            \"iqAllowSnmp\": \"yes\",\r\n            \"limitCpuUsage\": 0,\r\n            \"limitCpuUsageStatus\": \"disabled\",\r\n            \"limitMaxBps\": 0,\r\n            \"limitMaxBpsStatus\": \"disabled\",\r\n            \"limitMaxConnections\": 0,\r\n            \"limitMaxConnectionsStatus\": \"disabled\",\r\n            \"limitMaxPps\": 0,\r\n            \"limitMaxPpsStatus\": \"disabled\",\r\n            \"limitMemAvail\": 0,\r\n            \"limitMemAvailStatus\": \"disabled\",\r\n            \"linkDiscovery\": \"disabled\",\r\n            \"monitor\": \"/Common/bigip\",\r\n  \r\n            \"product\": \"bigip\",\r\n            \"virtualServerDiscovery\": \"disabled\",\r\n            \"addresses\": [\r\n                {\r\n                    \"name\": \"10.1.10.4\",\r\n                    \"deviceName\": \"bigip1.f5lab.local\",\r\n                    \"translation\": \"none\"\r\n                }\r\n            ]\r\n\r\n        }\r\n"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create-bigip5 server",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ea100f59-1027-4fec-a613-fdb98487b4e5",
												"exec": [
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"bigip5 server Created\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"bigip5 server Exists\", function () {",
													"    pm.response.to.have.status(409);",
													"});",
													"",
													"setTimeout(function(){}, 2000);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d2b4eb6d-0d4a-4599-ab54-80b7b64efadd",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n            \"name\": \"bigip5.f5lab.local\",\r\n            \"datacenter\": \"/Common/DC1\",\r\n            \"enabled\": true,\r\n            \"exposeRouteDomains\": \"no\",\r\n            \"iqAllowPath\": \"yes\",\r\n            \"iqAllowServiceCheck\": \"yes\",\r\n            \"iqAllowSnmp\": \"yes\",\r\n            \"limitCpuUsage\": 0,\r\n            \"limitCpuUsageStatus\": \"disabled\",\r\n            \"limitMaxBps\": 0,\r\n            \"limitMaxBpsStatus\": \"disabled\",\r\n            \"limitMaxConnections\": 0,\r\n            \"limitMaxConnectionsStatus\": \"disabled\",\r\n            \"limitMaxPps\": 0,\r\n            \"limitMaxPpsStatus\": \"disabled\",\r\n            \"limitMemAvail\": 0,\r\n            \"limitMemAvailStatus\": \"disabled\",\r\n            \"linkDiscovery\": \"disabled\",\r\n            \"monitor\": \"/Common/bigip\",\r\n  \r\n            \"product\": \"bigip\",\r\n            \"virtualServerDiscovery\": \"disabled\",\r\n            \"addresses\": [\r\n                {\r\n                    \"name\": \"10.1.10.11\",\r\n                    \"deviceName\": \"bigip5.f5lab.local\",\r\n                    \"translation\": \"none\"\r\n                }\r\n            ]\r\n\r\n        }\r\n"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Add bigip1 application VS to Server",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "09c2c86a-77aa-4eb0-9267-17659d09bc82",
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS1\")",
													"",
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"Virtual Server \"+VS_NAME+\" with IP Address \"+ADDR+\" added to Server bigip1.f5lab.local\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"Virtual Server \"+VS_NAME+\" exists on server bigip1.f5lab.local\", function () {",
													"    pm.response.to.have.status(409);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1ed9cf91-15ee-42ad-929f-6f3dec541bc1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"name\": \"/{{PARTITION_NAME}}/{{PATH_NAME}}/{{VS1_NAME}}\",\r\n\"destination\": \"{{BIGIP_ADDRESS1}}:443\"\r\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip1.f5lab.local/virtual-servers/",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server",
												"~Common~bigip1.f5lab.local",
												"virtual-servers",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create WideIP using AS3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "513a26ed-c9bc-4153-845b-10d991d91edb",
												"exec": [
													"var DNS_NAME = pm.collectionVariables.get(\"DNS1_NAME\");\r",
													"\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"\r",
													"pm.test(\"Wide IP \"+DNS_NAME+\" Created\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"} else \r",
													"pm.test(\"Wide IP \"+DNS_NAME+\" exists\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "91dbdb6f-cc65-4b9a-b9cb-8d86c7fc45a2",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"class\": \"ADC\",\r\n    \"schemaVersion\": \"3.6.0\",\r\n    \"id\": \"GSLB_Sample\",\r\n    \"{{PARTITION_NAME}}-gslb\": {\r\n        \"class\": \"Tenant\",\r\n        \"{{VS1_NAME}}\": {\r\n            \"class\": \"Application\",\r\n            \"template\": \"generic\",\r\n            \"testDomain\": {\r\n                \"class\": \"GSLB_Domain\",\r\n                \"domainName\": \"{{DNS1_NAME}}\",\r\n                \"resourceRecordType\": \"A\",\r\n                \"poolLbMode\": \"ratio\",\r\n                \"lastResortPool\": {\"use\": \"{{VS1_NAME}}-pool\"},\r\n                \"lastResortPoolType\": \"A\",\r\n                \"pools\": [\r\n                              { \"use\": \"{{VS1_NAME}}-pool\" }\r\n                ]\r\n            },\r\n            \"{{VS1_NAME}}-pool\": {\r\n               \"class\": \"GSLB_Pool\",\r\n                \"enabled\": true,\r\n                \"lbModeAlternate\": \"ratio\",\r\n                \"lbModeFallback\": \"ratio\",\r\n                \"manualResumeEnabled\": false,\r\n                \"verifyMemberEnabled\": true,\r\n                \"members\": [\r\n                \t{\r\n                \t\"ratio\":10,\r\n                \t\"server\": {\r\n                \t\t\"bigip\": \"/Common/bigip1.f5lab.local\"\r\n                \t\t},\r\n                \t\t\"virtualServer\":\"/{{PARTITION_NAME}}/{{PATH_NAME}}/{{VS1_NAME}}\"\r\n                \t}\r\n                ],\r\n                \"resourceRecordType\": \"A\"\r\n            }\r\n        }\r\n    }\r\n \r\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/declare",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"declare"
											]
										}
									},
									"response": []
								},
								{
									"name": "end-dns-dc1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a1c7c618-215b-4590-8255-1184ccd4db92",
												"exec": [
													"var DC2_APM = pm.environment.get(\"DC2_APM\");",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
													"",
													"if (DC2_APM === 'true' && DC_COUNTER === '2') {",
													"   ",
													"} else {",
													"",
													"    postman.setNextRequest(\"end-dns-dc2\");",
													"    pm.collectionVariables.set('DC_COUNTER', '1' );",
													"    pm.test(\"Skipping DC2 DNS Configuration\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "27c316fa-8f88-44f8-836a-69ceeb7c88af",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Add DC2 External DNS Configuration for Single App",
							"item": [
								{
									"name": "start-dns-dc2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cda96c87-4f17-48ae-a201-7a9da66b6962",
												"exec": [
													"var DC2_APM = pm.environment.get(\"DC2_APM\");",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
													"",
													"if (DC2_APM === 'true' && DC_COUNTER === '2') {",
													"   ",
													"} else {",
													"",
													"    postman.setNextRequest(\"end-dns-dc2\");",
													"    pm.collectionVariables.set('DC_COUNTER', '1' );",
													"    pm.test(\"Skipping DC2 DNS Configuration\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "142b42e2-380e-4edb-8a59-a5a7a690941e",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-exist-bigip2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "69c389ab-8728-4a43-95b1-647f0d45f2df",
												"exec": [
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"    for (var i = 0; i < jsonData.items.length; i++) {\r",
													"\r",
													"        if (jsonData.items[i].name === \"bigip2.f5lab.local\") {\r",
													"            pm.test(\"BIGIP2 already exists\", function () {\r",
													"                pm.response.to.have.status(200);\r",
													"            });\r",
													"            postman.setNextRequest(\"bigip5-Add bigip2 Application VS to Server\");\r",
													"        }\r",
													"    }\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "36858ee0-c9f8-40f4-a768-fa0f77a5031b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip_add - bigip2 to bigip5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d0615228-4b2f-4772-9537-afb259004f62",
												"exec": [
													"pm.test(\"bigip_add command successfully run\", function () {\r",
													"pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"command\":\"run\",\r\n\t\"options\":[\r\n\t\t{\r\n\t\t\t\"ssh-password\":\"admin\",\r\n\t\t\t\"admin@10.1.1.5\":\"\"\r\n\t\t}\r\n\t]\r\n} "
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/bigip_add",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"bigip_add"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip2.f5lab.local - big3d_install",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ca524332-87fc-42e3-8800-6d9c294fa364",
												"exec": [
													"pm.test(\"big3d_install command successfully run\", function () {\r",
													"pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"command\":\"run\",\r\n\t\"options\":[\r\n\t\t{\r\n\t\t\t\"ssh-password\":\"admin\",\r\n\t\t\t\"admin@10.1.1.5\":\"\"\r\n\t\t}\r\n\t]\r\n} "
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/big3d_install",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"big3d_install"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create-DC2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "31423688-bac7-4e31-9327-e8f22f3aea02",
												"exec": [
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"DC2 Created\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"DC2 Exists\", function () {",
													"    pm.response.to.have.status(409);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e31d62d9-9e84-43c1-8653-7b2c71712d2b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"name\":\"DC2\"\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/datacenter",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"datacenter"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Server -  BIG-IP2 to BIG-IP5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8c0131d6-fa8e-4ed6-83e1-ef7b76eb2ad5",
												"exec": [
													"if (responseCode.code === 200) {\r",
													"\r",
													"    pm.test(\"BIG-IP2 added\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else\r",
													"    pm.test(\"BIG-IP2 already Exists\", function () {\r",
													"        pm.response.to.have.status(409);\r",
													"    });\r",
													"\r",
													"setTimeout(function(){}, 2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\":\"bigip2.f5lab.local\",\n\t\"datacenter\": \"/Common/DC2\",\n\t\"virtualServerDiscovery\": \"disabled\",\n\t        \"addresses\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\":\"10.1.10.5\",\n\t\t\t\t\t\"deviceName\": \"bigip2.f5lab.local\",\n\t\t\t\t\t\"translation\": \"none\"\n\t\t\t\t}\n\t\t\t]\n\t\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Add bigip2 Application VS to Server",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dd972154-f525-4471-86fd-c314816bbcf3",
												"exec": [
													"",
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS1\")",
													"",
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"Virtual Server \"+VS_NAME+\" with IP Address \"+ADDR+\" added to server bigip2.f5lab.local\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"Virtual Server \"+VS_NAME+\" exists on server bigip2.f5lab.local\", function () {",
													"    pm.response.to.have.status(409);",
													"});",
													"",
													"setTimeout(function(){},5000);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4f897a42-9736-449d-8f4f-dd5aa4d51ea3",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"name\": \"/{{PARTITION_NAME}}/{{PATH_NAME}}/{{VS1_NAME}}\",\r\n\"destination\": \"{{BIGIP_ADDRESS1}}:443\"\r\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip2.f5lab.local/virtual-servers/",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server",
												"~Common~bigip2.f5lab.local",
												"virtual-servers",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Add bigip2 application to WideIP Pool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d1545d82-ef6e-4988-9459-cfd99564e7a7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f9776f55-7436-40f8-95e6-c55a86a4cfe0",
												"exec": [
													"var NAME = pm.collectionVariables.get(\"DNS1_NAME\");",
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS1\")",
													"",
													"",
													"",
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"Virtual Server \"+VS_NAME+\" with IP Address \"+ADDR+\" added to Wide IP \"+NAME, function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"Virtual Server \"+VS_NAME+\" exists on Wide IP \"+NAME, function () {",
													"    pm.response.to.have.status(409);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"name\":\"bigip2.f5lab.local:/{{PARTITION_NAME}}/{{PATH_NAME}}/{{VS1_NAME}}\"\r\n\t\r\n\t\r\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/pool/a/~{{PARTITION_NAME}}-gslb~{{VS1_NAME}}~{{VS1_NAME}}-pool/members",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"pool",
												"a",
												"~{{PARTITION_NAME}}-gslb~{{VS1_NAME}}~{{VS1_NAME}}-pool",
												"members"
											]
										}
									},
									"response": []
								},
								{
									"name": "end-dns-dc2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "408ddb80-0afc-4f53-a57f-f73b8b0d734c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8a659266-c7fe-4ccf-b6d0-df5b07a01670",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "End loop Datacenters",
			"item": [
				{
					"name": "loop",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "690084a5-f4ad-45d8-a9a0-49be23376ee0",
								"exec": [
									"var DC2_APM = pm.environment.get(\"DC2_APM\");",
									"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
									"",
									"if (DC2_APM === 'true' && DC_COUNTER === '1') {",
									"    postman.setNextRequest(\"start\");",
									"    pm.collectionVariables.set('DC_COUNTER', '2' );",
									"",
									"    pm.test(\"Application created in DC1. Beginning DC2 Deployment\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"",
									"} else if (DC2_APM === 'false' && DC_COUNTER === '1') {",
									"    pm.test(\"Application created in DC1 \", function () {",
									"        pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"false\");",
									"    });",
									"",
									"} else {",
									"    pm.test(\"Application created in DC2 \", function () {",
									"        pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"true\");",
									"    });",
									"    pm.collectionVariables.set('DC_COUNTER', '1' );",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ee4e696c-68e3-4480-82d5-279f0dc3990a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "eb83977c-ab07-4fcf-8c27-f0239e73fd0d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "94665dad-d5cb-444d-aa0c-d29902ad6288",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Display OAuth Client Setting",
			"item": [
				{
					"name": "display client settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e6817a52-771a-4392-b12f-2226ce0f0a6c",
								"exec": [
									"var id = pm.collectionVariables.get(\"CLIENT_ID\");",
									"var secret = pm.collectionVariables.get(\"CLIENT_SECRET\");",
									"var auth_uri = pm.collectionVariables.get(\"AUTH_URI\");",
									"var token_uri = pm.collectionVariables.get(\"TOKEN_URI\");",
									"",
									"pm.test(\"CALLBACK URL: https://www.getpostman.com/oauth2/callback\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"AUTH URL: \" +auth_uri, function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"ACCESS TOKEN URL: \" +token_uri, function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"CLIENT ID: \" +id, function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"CLIENT SECRET: \"+secret, function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1bf03e02-f978-4e4b-b491-7135df202d58",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d4b61e03-bfbd-4bfe-ad45-e9aea712d214",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "63d92759-8721-4542-a3d3-3c79ae373d71",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "bd1d3345-3261-48fb-8e46-78d2ba67f4c5",
			"key": "CUSTOM_TYPE",
			"value": ""
		},
		{
			"id": "4cb4c604-009a-440d-8b79-4d28a94272fe",
			"key": "DNS1_NAME",
			"value": ""
		},
		{
			"id": "a1056c71-6d76-4684-820c-d4d1b9fdb73f",
			"key": "DNS2_NAME",
			"value": ""
		},
		{
			"id": "95db98fb-e99f-4b61-9ed9-d62b01e5b483",
			"key": "PARTITION_NAME",
			"value": ""
		},
		{
			"id": "91e8f913-50ce-4b10-ab49-4c7e0a767548",
			"key": "PATH_NAME",
			"value": ""
		},
		{
			"id": "3091b656-f32c-4b71-80f0-18a88394e6a0",
			"key": "VIPS",
			"value": ""
		},
		{
			"id": "8975e878-b7ba-4819-a525-a72e68b8a3e5",
			"key": "VS1_NAME",
			"value": ""
		},
		{
			"id": "2b813823-7f2d-49ff-bd60-8d0590bec9a4",
			"key": "VS2_NAME",
			"value": ""
		},
		{
			"id": "238760ef-1419-4801-8a8a-60d7145280f9",
			"key": "BIGIP_MGMT",
			"value": ""
		},
		{
			"id": "bfb94a9d-2382-4e3d-a3e4-9ee836ff62a8",
			"key": "BIGIP_SCOPE",
			"value": ""
		},
		{
			"id": "7d9f1159-f41e-4f56-92c4-a1b1a567284d",
			"key": "DC_COUNTER",
			"value": ""
		},
		{
			"id": "7233dd2d-7d01-4e45-8021-b97bad6c4104",
			"key": "DNS_COUNTER",
			"value": ""
		},
		{
			"id": "4ae0945b-55f3-4a5d-bb11-a90295ce6293",
			"key": "DNS_NAME",
			"value": ""
		},
		{
			"id": "fb96957d-d579-4a98-9d2d-4fb9d6325251",
			"key": "VS_COUNTER",
			"value": ""
		},
		{
			"id": "1e853c4d-c652-4efa-94a2-8344d30d87e6",
			"key": "VS_NAME",
			"value": ""
		},
		{
			"id": "f00a7ec2-04c8-41c2-9145-a952f71d29fe",
			"key": "AUTH_URI",
			"value": ""
		},
		{
			"id": "1ca4e7e6-8b8d-4c77-96f3-91c7ce944688",
			"key": "TOKEN_URI",
			"value": ""
		}
	],
	"protocolProfileBehavior": {}
}