{
	"info": {
		"_postman_id": "a35a1035-d9b0-41f9-9911-35ed626f87c8",
		"name": "Solution14-delete",
		"description": "Created using template 1.8",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Set Collection Parameters",
			"item": [
				{
					"name": "set parameters",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c79cae9b-868c-4ae4-b837-15801eddfbca",
								"exec": [
									"pm.test(\"Setting Parameters\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ffc776a7-d615-4275-a3dc-623089f0815c",
								"exec": [
									"//Define the number of virtual servers in this solution\r",
									"pm.collectionVariables.set(\"VIPS\", \"1\");\r",
									"\r",
									"//THis below varaibles are using for defining the tenant ID in AS3.  This should be the solution number. Example: solution1 or solution2.\r",
									"pm.collectionVariables.set(\"PATH_NAME\", \"solution14\");\r",
									"pm.collectionVariables.set(\"PARTITION_NAME\", \"solution14\");\r",
									"\r",
									"//This is the primary section defining the settings for the application the solutions is going to deploy\r",
									"pm.collectionVariables.set(\"DNS1_NAME\", \"solution14.acme.com\");\r",
									"pm.collectionVariables.set(\"VS1_NAME\", \"solution14\");\r",
									"\r",
									"\r",
									"//This section is used when building two virtrual servers as part of a solutions or when a reference is needed to another solutions.  For example, if your solutions involved Federation you will need to define both the FQDNs for the both the SP and IDP.  \r",
									"pm.collectionVariables.set(\"DNS2_NAME\", \"sp.acme.com\");\r",
									"pm.collectionVariables.set(\"VS2_NAME\", \"sp\");\r",
									"\r",
									"pm.collectionVariables.set(\"DNS3_NAME\", \"sp1.acme.com\");\r",
									"pm.collectionVariables.set(\"VS3_NAME\", \"sp1\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://10.1.1.4/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"10",
								"1",
								"1",
								"4"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Start-Loop Datacenters",
			"item": [
				{
					"name": "start",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c018c64-fcfb-4cca-b603-3c56cff59f41",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "79257089-141a-4aba-a043-3011c02baabb",
								"exec": [
									"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
									"var DC2_APM = pm.environment.get(\"DC2_APM\");\r",
									"\r",
									"\r",
									"if (DC2_APM === 'true' && DC_COUNTER === '2') {\r",
									"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.5\");\r",
									"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP2_SCOPE\"));\r",
									"\r",
									"} else {\r",
									"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.4\");\r",
									"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP1_SCOPE\"));\r",
									"pm.collectionVariables.set('DC_COUNTER', '1' );\r",
									"\r",
									"\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e206b247-9fa1-4555-8428-29de00c9cecd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "19ca8849-353a-4130-a245-16eb6da5d577",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "External DNS",
			"item": [
				{
					"name": "start-dns",
					"item": [
						{
							"name": "start-dns",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a8c97fe-99e0-497d-b1d3-c125c8405b2e",
										"exec": [
											"var DC2_APM = pm.environment.get(\"DC2_APM\");",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
											"",
											"if (DC2_APM === 'true' && DC_COUNTER === '2') {",
											"    postman.setNextRequest(\"bigip5-retrieve-addres-server-vs2\");",
											"    pm.test(\"Beginning DC2 Server deletion\", function () {",
											"                pm.response.to.have.status(200);",
											"            });",
											"} ",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5ade88e5-aad2-4b2f-aa65-503282945d7d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete WideIP",
					"item": [
						{
							"name": "bigip5-delete-wideip",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1d3b6a60-ad58-4dad-b345-46d81156f070",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "650cccca-e934-4d8a-8107-87714be8df07",
										"exec": [
											"var DNS_NAME = pm.collectionVariables.get(\"DNS1_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"Wide IP \"+DNS_NAME+\" deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else if (responseCode.code === 422) {",
											"    pm.test(\"WideIP \"+DNS_NAME+\" does not exist\", function () {",
											"        pm.expect(pm.response.text()).to.include(\"path does not exist\");",
											"    });",
											"}",
											"",
											"setTimeout(function(){}, 1000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\n"
								},
								"url": {
									"raw": "https://10.1.1.11/mgmt/shared/appsvcs/declare/{{PARTITION_NAME}}",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"declare",
										"{{PARTITION_NAME}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete Virtual Server address from BIG-IP Server",
					"item": [
						{
							"name": "bigip5-retrieve-addres-server",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0933f6f0-170d-4fea-9106-636942169071",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "fee14971-225f-4b48-8d39-b07e507b6a05",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"if (responseCode.code === 200) {",
											"  ",
											"    pm.collectionVariables.set(\"DNS_DEST\", jsonData.destination);",
											"    address = (pm.collectionVariables.get(\"DNS_DEST\")).split(\":\");",
											"    pm.collectionVariables.set('BIGIP_ADDRESS1', address[0]);",
											"    ",
											"    pm.test(\"VS \"+VS_NAME+ \" Address \"+address[0]+ \" found\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"} else",
											"    pm.test(\"VS \"+VS_NAME+\" does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip{{DC_COUNTER}}.f5lab.local/virtual-servers/~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"tm",
										"gtm",
										"server",
										"~Common~bigip{{DC_COUNTER}}.f5lab.local",
										"virtual-servers",
										"~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-checkin-address",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "463b7190-f337-4850-b280-9bea6b1a93f4",
										"exec": [
											"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS1\");",
											"",
											"var jsonData = pm.response.json();",
											"",
											"if(jsonData.status === \"Success\") {",
											"    pm.test(\"Address \"+ADDR+\" returned to Scope\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else {",
											"    pm.test(\"Address \"+ADDR+\" not assigned in Scope\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"}",
											"",
											"setTimeout(function(){}, 1000);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://10.1.20.6:81/addr/checkin?address={{BIGIP_ADDRESS1}}",
									"protocol": "http",
									"host": [
										"10",
										"1",
										"20",
										"6"
									],
									"port": "81",
									"path": [
										"addr",
										"checkin"
									],
									"query": [
										{
											"key": "address",
											"value": "{{BIGIP_ADDRESS1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip5-delete-server-vs",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f1feece3-c30f-4568-b544-41ae70f17776",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e1017211-2202-4e81-adef-dd4e47b34afb",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS2_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"pm.test(\"Virtual Server \"+VS_NAME+\" deleted from server\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"} else ",
											"pm.test(\"Virtual Server \"+VS_NAME+\" does not exist\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip{{DC_COUNTER}}.f5lab.local/virtual-servers/~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"tm",
										"gtm",
										"server",
										"~Common~bigip{{DC_COUNTER}}.f5lab.local",
										"virtual-servers",
										"~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Applications",
			"item": [
				{
					"name": "Single Tentant- Single App",
					"item": [
						{
							"name": "bigip-delete Application",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "16096a08-89cd-4247-b085-05260d6dd9ff",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5828e465-5467-492a-847c-638327c8334e",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
											"",
											"pm.test(\"Application \"+VS_NAME+\" deleted\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"setTimeout(function(){}, 2000);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/declare/{{PARTITION_NAME}}",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"declare",
										"{{PARTITION_NAME}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Start Loop - Imperative Calls",
			"item": [
				{
					"name": "start-objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "603c8a0e-a287-4245-9d3d-6d7b38710404",
								"exec": [
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
									"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
									"\r",
									"if (!VS_COUNTER) {\r",
									"pm.collectionVariables.set(\"VS_COUNTER\", 1);\r",
									"pm.collectionVariables.set(\"DNS_COUNTER\", 1);\r",
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
									"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
									"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
									"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
									" } else { \r",
									"\r",
									"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
									"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0c80d57b-7b94-429f-b023-450df698ce03",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7bc713f5-0de0-4623-af96-06e676057da8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1536c9f2-6b4f-46c2-8404-9736aa9cd253",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PSP",
			"item": [
				{
					"name": "start PSP",
					"item": [
						{
							"name": "start-psp-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9db724dd-a536-4bc4-bdfb-ee17adce7eed",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Deleting APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Proceeding to deletion of APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-psp-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-psp-\"+VS);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cd2ff8f8-5a22-48fe-ab59-8392ec72d64b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bdb1f469-6eab-4086-9679-ad2b27194d23",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "73db8a4f-421a-4ea0-9a75-6fbe87c71771",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Profile/Policy",
					"item": [
						{
							"name": "bigip-delete-profile-psp",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8059769b-193b-4837-aa32-f4feba803176",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Profile \"+VS_NAME+\"-psp Deleted\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"Profile \"+VS_NAME+\"-psp Does Not Exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"\r",
											"setTimeout(function(){}, 2000);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5f8dd55d-9b1b-4b5b-b45d-6bd9b1db7c8a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/~Common~{{VS_NAME}}-psp",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"profile",
										"access",
										"~Common~{{VS_NAME}}-psp"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-policy-psp",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3ddec898-0873-4382-9013-9e05c73a2e46",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Policy \"+VS_NAME+\"-prp deleted\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"Policy \"+VS_NAME+\"-prp does not exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5e5ef7c3-b82b-4537-8686-adb3f5237ad9",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/access-policy/~Common~{{VS_NAME}}-psp",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"access-policy",
										"~Common~{{VS_NAME}}-psp"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End PSP",
					"item": [
						{
							"name": "end-psp-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e3cd603-6a4f-496a-be98-f40a367838b4",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8eabc890-4173-4035-b797-8a291cbe0e63",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4924757e-0a7e-474a-87e7-e60d58ef76b1",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "844e02d3-6333-4a78-8d1b-d22464252ca7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PRP",
			"item": [
				{
					"name": "start PRP",
					"item": [
						{
							"name": "start-prp-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4255bfa8-7ba6-4c30-bca2-6a62860e7515",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Deleting APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Proceeding to deletion of APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-psp-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-psp-\"+VS);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e80ed3d7-9c69-4f58-b487-9c2bfbc5fc63",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0c6ef0a4-799e-4fa4-918b-efc78203109b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "20726641-fcad-4b4e-ab04-7c2774c7f4ea",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Policy",
					"item": [
						{
							"name": "bigip-delete-policy-prp",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1fab709e-fb1e-4a66-8084-226d22b9e0b9",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Per-Request Policy \"+VS_NAME+\"-prp deleted\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"Per-Request Policy \"+VS_NAME+\"-prp does not exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2753d035-a6ad-483b-b596-8e9b181c5f46",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/access-policy/~Common~{{VS_NAME}}-prp",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"access-policy",
										"~Common~{{VS_NAME}}-prp"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End PSP",
					"item": [
						{
							"name": "end-prp-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f8189cd5-3694-4e20-827a-e9208f97f85c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b10b5d74-a6bd-4085-8436-71614a3c9770",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9834dd9f-7d92-48d9-b866-3d206b7c4926",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "af2cade8-fbf2-4516-8e92-d615ca14425d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "APM Objects",
			"item": [
				{
					"name": "start APM objects",
					"item": [
						{
							"name": "start-apm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd0fa5c2-a410-447c-86de-48ee872d973c",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Deleting APM objects for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Proceedibg to Deletion of  Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-apm-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-apm-\"+VS);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0ed3536f-6bb8-4106-9c91-e48fce1e65ae",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "BIGIP SP-sp",
					"item": [
						{
							"name": "bigip-delete-sp service",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "00ae0266-79ec-4ab9-9b56-4d6b3116e403",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"",
											"    pm.test(\"SAML SP Service \"+VS_NAME+\"-sp deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else {",
											"    pm.test(\"SAML SP Service \"+VS_NAME+\"-sp does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9d310ac9-0a82-46a1-9d58-78e9c13a9673",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/saml/~Common~{{DNS2_NAME}}-sp",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"aaa",
										"saml",
										"~Common~{{DNS2_NAME}}-sp"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-idp connector",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2dbb90ba-0e69-4dc3-8f45-8ab2295b5969",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"",
											"    pm.test(\"SAML IDP connector \"+VS_NAME+\"-idp deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else ",
											"    pm.test(\"SAML IDP connector \"+VS_NAME+\"-idp does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c948ecd1-aa8f-4f1e-bae2-7dfe78f2db2b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/saml-idp-connector/~Common~{{VS2_NAME}}-sso",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"aaa",
										"saml-idp-connector",
										"~Common~{{VS2_NAME}}-sso"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-idp cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "14e3b2c1-9925-485d-8cf3-f0417fb14383",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"\r",
											"    pm.test(\"IDP certificate \"+VS_NAME+\"-idp deleted\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"IDP certificate \"+VS_NAME+\"-idp does not exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "",
										"disabled": true
									},
									{
										"key": "Content-Range",
										"type": "text",
										"value": "0-1321/1322",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/sys/crypto/cert/~Common~{{VS2_NAME}}-idp",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"sys",
										"crypto",
										"cert",
										"~Common~{{VS2_NAME}}-idp"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "BIGIP SP-sp1",
					"item": [
						{
							"name": "bigip-delete-sp service",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "57071d3e-f714-4aea-88d3-7fa07d831b64",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"",
											"    pm.test(\"SAML SP Service \"+VS_NAME+\"-sp deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else {",
											"    pm.test(\"SAML SP Service \"+VS_NAME+\"-sp does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a91cd0f7-1dda-4af0-b277-b00af7d12309",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/saml/~Common~{{DNS3_NAME}}-sp",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"aaa",
										"saml",
										"~Common~{{DNS3_NAME}}-sp"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-idp connector",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "82320c73-503b-48b3-8554-7d715742cdcd",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"",
											"    pm.test(\"SAML IDP connector \"+VS_NAME+\"-idp deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else ",
											"    pm.test(\"SAML IDP connector \"+VS_NAME+\"-idp does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6455ce4b-5b1e-4fc1-9af3-4372ad50725c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/saml-idp-connector/~Common~{{VS3_NAME}}-sso",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"aaa",
										"saml-idp-connector",
										"~Common~{{VS3_NAME}}-sso"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-idp cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f3cce5d-6e8a-42c4-b9ab-53f64dabe591",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"\r",
											"    pm.test(\"IDP certificate \"+VS_NAME+\"-idp deleted\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"IDP certificate \"+VS_NAME+\"-idp does not exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "",
										"disabled": true
									},
									{
										"key": "Content-Range",
										"type": "text",
										"value": "0-1321/1322",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/sys/crypto/cert/~Common~{{VS3_NAME}}-idp",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"sys",
										"crypto",
										"cert",
										"~Common~{{VS3_NAME}}-idp"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End APM Objects",
					"item": [
						{
							"name": "end-apm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d9692427-e76b-40b9-95a9-934feb31ce0c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "28c3c7d6-eb5e-46ec-beeb-31f3facf6406",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "70e6d0f4-38c9-4dfa-a47a-44c7954807c0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "92de4d0d-d2ea-421b-85b3-971812dc0a2d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "LTM Objects",
			"item": [
				{
					"name": "start LTM Objects",
					"item": [
						{
							"name": "start-ltm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6b1fb066-da50-45a2-bc35-599316afa6bc",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var DNS_NAME = pm.collectionVariables.get(\"DNS_NAME\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Deleting website \"+DNS_NAME, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Continuing deletion of Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-ltm-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-ltm-\"+VS);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "093f8997-32d1-4ee2-aa8a-a14e0efb8b46",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "pool sp.acme.com",
					"item": [
						{
							"name": "get-pool-member",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5fda6b70-d459-4b0d-bec2-f1a9539bc91b",
										"exec": [
											"var PARTITION_NAME = pm.collectionVariables.get(\"PARTITION_NAME\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS2_NAME\");\r",
											"var DNS_COUNTER = 1\r",
											"\r",
											"\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.collectionVariables.set(\"IIS_ADDRESS\"+DNS_COUNTER, jsonData.items[0].address);\r",
											"    pm.collectionVariables.set(\"IIS_ADDRESS\", pm.collectionVariables.get(\"IIS_ADDRESS\"+DNS_COUNTER))\r",
											"    var ADDR = pm.collectionVariables.get(\"IIS_ADDRESS\");\r",
											"\r",
											"    pm.test(\"Retrieved address \"+ADDR + \" from \"+PARTITION_NAME+\"-\"+VS_NAME+\"-pool\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(PARTITION_NAME+\"-\"+VS_NAME+\"-pool does not exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"}\r",
											"   "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a4d1a1b9-54bd-41c3-91c4-0bd7caf673f9",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/pool/~Common~{{PARTITION_NAME}}-{{VS2_NAME}}-pool/members",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"pool",
										"~Common~{{PARTITION_NAME}}-{{VS2_NAME}}-pool",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete-pool",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "343beaac-3008-40fb-8275-d4478bdd7010",
										"exec": [
											"var PARTITION_NAME = pm.collectionVariables.get(\"PARTITION_NAME\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS2_NAME\");\r",
											"\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"\r",
											"    pm.test(PARTITION_NAME+\"-\"+VS_NAME+\"-pool deleted\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(PARTITION_NAME+\"-\"+VS_NAME+\"-pool does not exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"}\r",
											"   "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "46ad9c18-c97e-4232-a768-ab6c8d3da6a8",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/pool/~Common~{{PARTITION_NAME}}-{{VS2_NAME}}-pool/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"pool",
										"~Common~{{PARTITION_NAME}}-{{VS2_NAME}}-pool",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-node",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7b37bb9d-933e-43bf-9997-311b07986b7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "89658114-2c8d-4c1b-81eb-c1ace3f31b01",
										"exec": [
											" var DNS_COUNTER = 1",
											" var ADDR = pm.collectionVariables.get(\"IIS_ADDRESS\"+DNS_COUNTER)",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"Node \"+ADDR+ \" deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else if (responseCode.code === 404) { ",
											"    pm.test(\"Node \"+ADDR+\" does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"} else if (responseCode.code === 400) {",
											"    pm.test(\"Unable to delete node \"+ADDR+\". Still in use\", function () {",
											"        pm.expect(pm.response.text()).to.include(\"member of pool\");",
											"    });",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/node/{{IIS_ADDRESS1}}",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"node",
										"{{IIS_ADDRESS1}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "pool sp1.acme.com",
					"item": [
						{
							"name": "get-pool-member",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3efad96e-0798-4f1c-9833-bcbb38fe2347",
										"exec": [
											"var PARTITION_NAME = pm.collectionVariables.get(\"PARTITION_NAME\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS3_NAME\");\r",
											"var DNS_COUNTER = 2\r",
											"\r",
											"\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.collectionVariables.set(\"IIS_ADDRESS\"+DNS_COUNTER, jsonData.items[0].address);\r",
											"    pm.collectionVariables.set(\"IIS_ADDRESS\", pm.collectionVariables.get(\"IIS_ADDRESS\"+DNS_COUNTER))\r",
											"    var ADDR = pm.collectionVariables.get(\"IIS_ADDRESS\");\r",
											"\r",
											"    pm.test(\"Retrieved address \"+ADDR + \" from \"+PARTITION_NAME+\"-\"+VS_NAME+\"-pool\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(PARTITION_NAME+\"-\"+VS_NAME+\"-pool does not exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"}\r",
											"   "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a3d3e5af-1937-4afe-914c-ff7393229780",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/pool/~Common~{{PARTITION_NAME}}-{{VS3_NAME}}-pool/members",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"pool",
										"~Common~{{PARTITION_NAME}}-{{VS3_NAME}}-pool",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete-pool",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ef01dc36-0467-4432-b461-acda31272f9e",
										"exec": [
											"var PARTITION_NAME = pm.collectionVariables.get(\"PARTITION_NAME\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS3_NAME\");\r",
											"\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"\r",
											"    pm.test(PARTITION_NAME+\"-\"+VS_NAME+\"-pool deleted\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(PARTITION_NAME+\"-\"+VS_NAME+\"-pool does not exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"}\r",
											"   "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cc362839-add2-430e-a858-a15e06d03bf0",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/pool/~Common~{{PARTITION_NAME}}-{{VS3_NAME}}-pool/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"pool",
										"~Common~{{PARTITION_NAME}}-{{VS3_NAME}}-pool",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-node",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4bddfd3b-bbe7-4d81-b8ab-d4b64bcb5883",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "46572701-7c28-46ff-9e01-3ba01b3d0570",
										"exec": [
											" var DNS_COUNTER = 2",
											" var ADDR = pm.collectionVariables.get(\"IIS_ADDRESS\"+DNS_COUNTER)",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"Node \"+ADDR+ \" deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else if (responseCode.code === 404) { ",
											"    pm.test(\"Node \"+ADDR+\" does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"} else if (responseCode.code === 400) {",
											"    pm.test(\"Unable to delete node \"+ADDR+\". Still in use\", function () {",
											"        pm.expect(pm.response.text()).to.include(\"member of pool\");",
											"    });",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/node/{{IIS_ADDRESS2}}",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"node",
										"{{IIS_ADDRESS2}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End LTM Objects",
					"item": [
						{
							"name": "end-ltm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e70cd05-6543-49dd-90a3-7376351d2141",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f1c5ad40-0044-4db2-9444-427569101f31",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9becceee-7c9b-4ee5-b4c3-f38dabbbb83c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b3b868c5-0d85-4a07-9f53-a4b47fd01184",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Websites",
			"item": [
				{
					"name": "start website",
					"item": [
						{
							"name": "start-website-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3ff80e5-b0d1-4e24-ae61-6f28a9e6b57d",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var DNS_NAME = pm.collectionVariables.get(\"DNS_NAME\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Deleting website \"+DNS_NAME, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Continuing deletion of Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-website-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-website-\"+VS);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9c7a8e08-dc48-4e2d-9256-ca114026afcf",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Website-sp.acme.com",
					"item": [
						{
							"name": "iis-get website address",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "07cb36ef-a4a9-4ba1-a2f7-7c0d62fbfd46",
										"exec": [
											"var DNS_NAME = pm.collectionVariables.get(\"DNS2_NAME\");\r",
											"var VS_COUNTER = 1\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var EXIST = 0\r",
											"\r",
											"if(!jsonData.length) {\r",
											"    if ( jsonData.Description  === DNS_NAME ) {\r",
											"        pm.collectionVariables.set(\"IIS_ADDRESS\"+VS_COUNTER, jsonData.IPAddress.IPAddressToString );\r",
											"        pm.collectionVariables.set(\"IIS_ADDRESS\", pm.collectionVariables.get(\"IIS_ADDRESS\"+VS_COUNTER));\r",
											"        var ADDR = pm.collectionVariables.get(\"IIS_ADDRESS\"+VS_COUNTER);\r",
											"     \r",
											"        var EXIST = 1;\r",
											"        if (responseCode.code === 200) {\r",
											"            pm.test(ADDR+\" assigned to \"+DNS_NAME, function () {\r",
											"                pm.response.to.have.status(200);\r",
											"            });\r",
											"        }\r",
											"    }\r",
											"} else {\r",
											"\r",
											"  for (var i = 0; i < jsonData.length; i++) {\r",
											"\r",
											"        if ( jsonData[i].Description  === DNS_NAME ) {   \r",
											"            pm.collectionVariables.set(\"IIS_ADDRESS\"+VS_COUNTER, jsonData[i].IPAddress.IPAddressToString );\r",
											"            pm.collectionVariables.set(\"IIS_ADDRESS\", pm.collectionVariables.get(\"IIS_ADDRESS\"+VS_COUNTER));\r",
											"            var ADDR = pm.collectionVariables.get(\"IIS_ADDRESS\"+VS_COUNTER);\r",
											"            var EXIST =1;\r",
											"\r",
											"            if (responseCode.code === 200) {\r",
											"                pm.test(ADDR+\" assigned to \"+DNS_NAME, function () {\r",
											"                    pm.response.to.have.status(200);\r",
											"                });\r",
											"            }\r",
											"        } \r",
											"    }\r",
											"} \r",
											"\r",
											"if (EXIST === 0) {\r",
											"    if (responseCode.code === 200) {\r",
											"        pm.test(\"No Address assigned to \"+DNS_NAME , function () {\r",
											"            pm.response.to.have.status(200);\r",
											"        }); \r",
											"    }\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://10.1.20.6:81/addr/scope-status?scope={{IIS_SCOPE}}",
									"protocol": "http",
									"host": [
										"10",
										"1",
										"20",
										"6"
									],
									"port": "81",
									"path": [
										"addr",
										"scope-status"
									],
									"query": [
										{
											"key": "scope",
											"value": "{{IIS_SCOPE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "iis-delete-website",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4e544a8e-847e-42e9-ab96-ab349bedde7a",
										"exec": [
											"var DNS_NAME = pm.collectionVariables.get(\"DNS2_NAME\");",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Website \"+DNS_NAME+\" deleted\", function () {",
											"",
											"    pm.expect(jsonData.status).to.eql(\"Success\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"site_name\":\"{{DNS2_NAME}}\" \n}"
								},
								"url": {
									"raw": "http://10.1.20.6:81/website",
									"protocol": "http",
									"host": [
										"10",
										"1",
										"20",
										"6"
									],
									"port": "81",
									"path": [
										"website"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete-dns-record",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1127663f-a344-4406-89e4-9052732ca24c",
										"exec": [
											"   var jsonData = pm.response.json();",
											"\t",
											"    if (jsonData.status === \"nonexistent\") {",
											"        pm.test(\"nonexistent\", function () {",
											"        pm.expect(jsonData.status).to.eql(\"nonexistent\");",
											"        });",
											"    } else {",
											"",
											"        ",
											"        pm.test(\"Success\", function () {",
											"        pm.expect(jsonData[1].status).to.eql(\"Success\");",
											"        });",
											"    }",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"record_type\":\"a\",\n\"fqdn\":\"{{DNS2_NAME}}\",\n\"computer_ip\":\"{{IIS_ADDRESS1}}\" \n}"
								},
								"url": {
									"raw": "http://10.1.20.6:81/dns",
									"protocol": "http",
									"host": [
										"10",
										"1",
										"20",
										"6"
									],
									"port": "81",
									"path": [
										"dns"
									]
								}
							},
							"response": []
						},
						{
							"name": "iis-checkin-address",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d21e952-08ce-4e8a-a20f-8bfe98461797",
										"exec": [
											"var ADDR = pm.collectionVariables.get(\"IIS_ADDRESS1\");",
											"",
											"var jsonData = pm.response.json();",
											"",
											"if(jsonData.status === \"Success\") {",
											"    pm.test(\"Address \"+ADDR+\" returned to Scope\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else {",
											"    pm.test(\"Address \"+ADDR+\" not assigned in Scope\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"}",
											"",
											"setTimeout(function(){}, 1000);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://10.1.20.6:81/addr/checkin?address={{IIS_ADDRESS1}}",
									"protocol": "http",
									"host": [
										"10",
										"1",
										"20",
										"6"
									],
									"port": "81",
									"path": [
										"addr",
										"checkin"
									],
									"query": [
										{
											"key": "address",
											"value": "{{IIS_ADDRESS1}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Website-sp1.acme.com",
					"item": [
						{
							"name": "iis-get website address",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d315a8f9-4f06-46c3-be03-dfeb206873f2",
										"exec": [
											"var DNS_NAME = pm.collectionVariables.get(\"DNS3_NAME\");\r",
											"var VS_COUNTER = 2\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var EXIST = 0\r",
											"\r",
											"\r",
											"\r",
											"if(!jsonData.length) {\r",
											"    if ( jsonData.Description  === DNS_NAME ) {\r",
											"        pm.collectionVariables.set(\"IIS_ADDRESS\"+VS_COUNTER, jsonData.IPAddress.IPAddressToString );\r",
											"        pm.collectionVariables.set(\"IIS_ADDRESS\", pm.collectionVariables.get(\"IIS_ADDRESS\"+VS_COUNTER));\r",
											"        var ADDR = pm.collectionVariables.get(\"IIS_ADDRESS\"+VS_COUNTER);\r",
											"     \r",
											"        var EXIST = 1;\r",
											"        if (responseCode.code === 200) {\r",
											"            pm.test(ADDR+\" assigned to \"+DNS_NAME, function () {\r",
											"                pm.response.to.have.status(200);\r",
											"            });\r",
											"        }\r",
											"    }\r",
											"} else {\r",
											"\r",
											"  for (var i = 0; i < jsonData.length; i++) {\r",
											"\r",
											"        if ( jsonData[i].Description  === DNS_NAME ) {   \r",
											"            pm.collectionVariables.set(\"IIS_ADDRESS\"+VS_COUNTER, jsonData[i].IPAddress.IPAddressToString );\r",
											"            pm.collectionVariables.set(\"IIS_ADDRESS\", pm.collectionVariables.get(\"IIS_ADDRESS\"+VS_COUNTER));\r",
											"            var ADDR = pm.collectionVariables.get(\"IIS_ADDRESS\"+VS_COUNTER);\r",
											"            var EXIST =1;\r",
											"\r",
											"            if (responseCode.code === 200) {\r",
											"                pm.test(ADDR+\" assigned to \"+DNS_NAME, function () {\r",
											"                    pm.response.to.have.status(200);\r",
											"                });\r",
											"            }\r",
											"        } \r",
											"    }\r",
											"} \r",
											"\r",
											"if (EXIST === 0) {\r",
											"    if (responseCode.code === 200) {\r",
											"        pm.test(\"No Address assigned to \"+DNS_NAME , function () {\r",
											"            pm.response.to.have.status(200);\r",
											"        }); \r",
											"    }\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://10.1.20.6:81/addr/scope-status?scope={{IIS_SCOPE}}",
									"protocol": "http",
									"host": [
										"10",
										"1",
										"20",
										"6"
									],
									"port": "81",
									"path": [
										"addr",
										"scope-status"
									],
									"query": [
										{
											"key": "scope",
											"value": "{{IIS_SCOPE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "iis-delete-website",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5f5baebb-9742-4ba5-bf3e-55e55dc371a8",
										"exec": [
											"var DNS_NAME = pm.collectionVariables.get(\"DNS3_NAME\");",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Website \"+DNS_NAME+\" deleted\", function () {",
											"",
											"    pm.expect(jsonData.status).to.eql(\"Success\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"site_name\":\"{{DNS3_NAME}}\" \n}"
								},
								"url": {
									"raw": "http://10.1.20.6:81/website",
									"protocol": "http",
									"host": [
										"10",
										"1",
										"20",
										"6"
									],
									"port": "81",
									"path": [
										"website"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete-dns-record",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9cf78a3f-d8dd-4706-baae-a230c850f9f0",
										"exec": [
											"   var jsonData = pm.response.json();",
											"\t",
											"    if (jsonData.status === \"nonexistent\") {",
											"        pm.test(\"nonexistent\", function () {",
											"        pm.expect(jsonData.status).to.eql(\"nonexistent\");",
											"        });",
											"    } else {",
											"",
											"        ",
											"        pm.test(\"Success\", function () {",
											"        pm.expect(jsonData[1].status).to.eql(\"Success\");",
											"        });",
											"    }",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"record_type\":\"a\",\n\"fqdn\":\"{{DNS3_NAME}}\",\n\"computer_ip\":\"{{IIS_ADDRESS2}}\" \n}"
								},
								"url": {
									"raw": "http://10.1.20.6:81/dns",
									"protocol": "http",
									"host": [
										"10",
										"1",
										"20",
										"6"
									],
									"port": "81",
									"path": [
										"dns"
									]
								}
							},
							"response": []
						},
						{
							"name": "iis-checkin-address",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "92656652-fc93-4a3c-919c-a0dec734f46a",
										"exec": [
											"var ADDR = pm.collectionVariables.get(\"IIS_ADDRESS2\");",
											"",
											"var jsonData = pm.response.json();",
											"",
											"if(jsonData.status === \"Success\") {",
											"    pm.test(\"Address \"+ADDR+\" returned to Scope\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else {",
											"    pm.test(\"Address \"+ADDR+\" not assigned in Scope\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"}",
											"",
											"setTimeout(function(){}, 1000);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://10.1.20.6:81/addr/checkin?address={{IIS_ADDRESS2}}",
									"protocol": "http",
									"host": [
										"10",
										"1",
										"20",
										"6"
									],
									"port": "81",
									"path": [
										"addr",
										"checkin"
									],
									"query": [
										{
											"key": "address",
											"value": "{{IIS_ADDRESS2}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End website",
					"item": [
						{
							"name": "end-website-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "339d7fa7-f06a-4505-a5ec-2714030204c4",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "607f639e-bf8b-46ec-9d1d-81cfffc2f112",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d5383bbb-93bd-4cac-831c-2760f31bc8b6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f669abb1-3814-4c7a-a1da-cf2c53d6dab6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "End Loop - Imperative Calls",
			"item": [
				{
					"name": "loop-objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6b7e0ce-2bd4-46e8-852d-39bcd48f6be5",
								"exec": [
									"var VIPS = pm.collectionVariables.get(\"VIPS\");",
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\")",
									"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
									"",
									"if (VS_COUNTER < VIPS ) {",
									"    pm.test(\"Objects for Virutal Server \"+VS_NAME+\" deleted.  Creating loop for next virtual server \" , function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    VS_COUNTER++",
									"pm.collectionVariables.set(\"VS_COUNTER\", VS_COUNTER)",
									"postman.setNextRequest(\"start-objects\");",
									"",
									"",
									"} else {",
									"    pm.test(\"Objects for Virtual Server \"+VS_NAME+\" deleted.  All objects deleted\" , function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"  pm.collectionVariables.set(\"VS_COUNTER\", 1)",
									"}",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "658556ac-83c3-4b22-a346-e638bdd9acdc",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2dda2ed6-6662-4e8b-b17e-b8518fd3cd7b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8d585ac5-3555-4d7f-8202-b436453eb9d9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "End Loop Datacenters",
			"item": [
				{
					"name": "loop",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "749a9b4b-1a56-4d8d-881a-748652d9404f",
								"exec": [
									"var DC2_APM = pm.environment.get(\"DC2_APM\");",
									"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
									"",
									"if (DC2_APM === 'true' && DC_COUNTER === '1') {",
									"postman.setNextRequest(\"start\");",
									"pm.collectionVariables.set('DC_COUNTER', '2' );",
									"",
									"pm.test(\"Application deleted in DC1. Beginning DC2 Deletion\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"} else if (DC2_APM === 'false' && DC_COUNTER === '1') {",
									"pm.test(\"Application deleted in DC1 \", function () {",
									"    pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"false\");",
									"});",
									"",
									"} else {",
									"pm.test(\"Application deleted in DC2 \", function () {",
									"    pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"true\");",
									"});",
									"pm.collectionVariables.set('DC_COUNTER', '1' );",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "efd56330-c0c7-4a9d-af23-ea9713402640",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f32b94f0-2268-4d17-8fe9-b2c8f12e9015",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "b30f29f3-7aef-4f7a-85d9-3a4882de3abf",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}