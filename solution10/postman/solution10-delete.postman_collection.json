{
	"info": {
		"_postman_id": "a9d5bc26-2207-4381-b5fa-8415de336c84",
		"name": "solution10-delete",
		"description": "Based on Template 1.7",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Set Collection Parameters",
			"item": [
				{
					"name": "set parameters",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d49a1af5-3ccc-4fe6-b828-739bc2e486c2",
								"exec": [
									"pm.test(\"Setting Parameters\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4c5e015c-7000-4eab-a51e-1a909d2c495c",
								"exec": [
									"//Define the number of virtual servers in this solution\r",
									"pm.collectionVariables.set(\"VIPS\", \"1\");\r",
									"\r",
									"//THis below varaibles are using for defining the tenant ID in AS3.  This should be the solution number. Example: solution1 or solution2.\r",
									"pm.collectionVariables.set(\"PATH_NAME\", \"solution10\");\r",
									"pm.collectionVariables.set(\"PARTITION_NAME\", \"solution10\");\r",
									"\r",
									"//This is the primary section defining the settings for the application the solutions is going to deploy\r",
									"pm.collectionVariables.set(\"DNS1_NAME\", \"as.acme.com\");\r",
									"pm.collectionVariables.set(\"VS1_NAME\", \"as\");\r",
									"\r",
									"\r",
									"//This section is used when building two virtrual servers as part of a solutions or when a reference is needed to another solutions.  For example, if your solutions involved Federation you will need to define both the FQDNs for the both the SP and IDP.  \r",
									"pm.collectionVariables.set(\"DNS2_NAME\", \"template2.acme.com\");\r",
									"pm.collectionVariables.set(\"VS2_NAME\", \"template2\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://10.1.1.4/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"10",
								"1",
								"1",
								"4"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Start-Loop Datacenters",
			"item": [
				{
					"name": "start",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ce04f0b-c8dc-40f5-9f86-467f8b0b87e2",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "08e86a57-d5ce-4cab-bb7d-9aff9d7e0d25",
								"exec": [
									"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
									"var DC2_APM = pm.environment.get(\"DC2_APM\");\r",
									"\r",
									"\r",
									"if (DC2_APM === 'true' && DC_COUNTER === '2') {\r",
									"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.5\");\r",
									"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP2_SCOPE\"));\r",
									"\r",
									"} else {\r",
									"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.4\");\r",
									"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP1_SCOPE\"));\r",
									"pm.collectionVariables.set('DC_COUNTER', '1' );\r",
									"\r",
									"\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d5564e2a-0a5d-44df-9e56-58be94d611ba",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9e78d50e-7400-4406-8da7-7bd90ef49464",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "External DNS",
			"item": [
				{
					"name": "Start DNS",
					"item": [
						{
							"name": "start-dns",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a1320fb0-6a2c-42a1-ac7f-1b7ed4256b28",
										"exec": [
											"var DC2_APM = pm.environment.get(\"DC2_APM\");",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
											"",
											"if (DC2_APM === 'true' && DC_COUNTER === '2') {",
											"    postman.setNextRequest(\"bigip5-retrieve-addres-server-vs1\");",
											"    pm.test(\"Beginning DC2 Server deletion\", function () {",
											"                pm.response.to.have.status(200);",
											"            });",
											"} ",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a617ebe0-14e5-4677-a6e1-5e927dd5366a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete WideIP",
					"item": [
						{
							"name": "bigip5-delete-wideip",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1611127c-c1a4-4c31-b758-5e29b45af7e0",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2badbdf2-86fc-411d-a44b-47b85eb8b567",
										"exec": [
											"var DNS_NAME = pm.collectionVariables.get(\"DNS1_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"Wide IP \"+DNS_NAME+\" deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else if (responseCode.code === 422) {",
											"    pm.test(\"WideIP \"+DNS_NAME+\" does not exist\", function () {",
											"        pm.expect(pm.response.text()).to.include(\"path does not exist\");",
											"    });",
											"}",
											"",
											"setTimeout(function(){}, 1000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://10.1.1.11/mgmt/shared/appsvcs/declare/{{PARTITION_NAME}}-gslb",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"declare",
										"{{PARTITION_NAME}}-gslb"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete Virtuals Server Address 1 from BIG-IP Server",
					"item": [
						{
							"name": "bigip5-retrieve-addres-server-vs1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "119c5f8c-82e1-4154-8599-c60736fe16bb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ab589569-f59a-4242-a2e2-74d9adb7362a",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"if (responseCode.code === 200) {",
											"  ",
											"    pm.collectionVariables.set(\"DNS_DEST\", jsonData.destination);",
											"    address = (pm.collectionVariables.get(\"DNS_DEST\")).split(\":\");",
											"    pm.collectionVariables.set('BIGIP_ADDRESS1', address[0]);",
											"    ",
											"    pm.test(\"VS \"+VS_NAME+ \" Address \"+address[0]+ \" found\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"} else",
											"    pm.test(\"VS \"+VS_NAME+\" does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip{{DC_COUNTER}}.f5lab.local/virtual-servers/~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"tm",
										"gtm",
										"server",
										"~Common~bigip{{DC_COUNTER}}.f5lab.local",
										"virtual-servers",
										"~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-checkin-address",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ed029117-9820-421d-b8ba-01dedb97a6ff",
										"exec": [
											"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS1\");",
											"",
											"var jsonData = pm.response.json();",
											"",
											"if(jsonData.status === \"Success\") {",
											"    pm.test(\"Address \"+ADDR+\" returned to Scope\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else {",
											"    pm.test(\"Address \"+ADDR+\" not assigned in Scope\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"}",
											"",
											"setTimeout(function(){}, 1000);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://10.1.20.6:81/addr/checkin?address={{BIGIP_ADDRESS1}}",
									"protocol": "http",
									"host": [
										"10",
										"1",
										"20",
										"6"
									],
									"port": "81",
									"path": [
										"addr",
										"checkin"
									],
									"query": [
										{
											"key": "address",
											"value": "{{BIGIP_ADDRESS1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip5-delete-server-vs",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0ac7c65a-6959-44e8-a6fe-5558e9a6c0f0",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "92cb7e39-7930-4ab8-be19-0054061cda4b",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"pm.test(\"Virtual Server \"+VS_NAME+\" deleted from server\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"} else ",
											"pm.test(\"Virtual Server \"+VS_NAME+\" does not exist\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip{{DC_COUNTER}}.f5lab.local/virtual-servers/~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"tm",
										"gtm",
										"server",
										"~Common~bigip{{DC_COUNTER}}.f5lab.local",
										"virtual-servers",
										"~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Internal DNS",
			"item": [
				{
					"name": "delete-dns-record",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64ebf8f0-1050-4d35-800c-1220be4b4756",
								"exec": [
									"   var jsonData = pm.response.json();",
									"\t",
									"    if (jsonData.status === \"nonexistent\") {",
									"        pm.test(\"nonexistent\", function () {",
									"        pm.expect(jsonData.status).to.eql(\"nonexistent\");",
									"        });",
									"    } else {",
									"",
									"        ",
									"        pm.test(\"Success\", function () {",
									"        pm.expect(jsonData[1].status).to.eql(\"Success\");",
									"        });",
									"    }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"record_type\":\"a\",\n\"fqdn\":\"{{DNS1_NAME}}\",\n\"computer_ip\":\"{{BIGIP_ADDRESS1}}\" \n}"
						},
						"url": {
							"raw": "http://10.1.20.6:81/dns",
							"protocol": "http",
							"host": [
								"10",
								"1",
								"20",
								"6"
							],
							"port": "81",
							"path": [
								"dns"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Applications",
			"item": [
				{
					"name": "AS3-Single Tentant",
					"item": [
						{
							"name": "bigip-delete-application",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "68bb0491-0608-4822-917c-10cf2ec7a570",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "709e1e1c-0e0d-4d6f-a571-12e1084fdade",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
											"",
											"pm.test(\"Application \"+VS_NAME+\" deleted\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"setTimeout(function(){}, 2000);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/declare/{{PARTITION_NAME}}",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"declare",
										"{{PARTITION_NAME}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Start Loop - Imperative Calls",
			"item": [
				{
					"name": "start-objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd637111-def8-4612-8b70-5abf87a3df5f",
								"exec": [
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
									"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
									"\r",
									"if (!VS_COUNTER) {\r",
									"pm.collectionVariables.set(\"VS_COUNTER\", 1);\r",
									"pm.collectionVariables.set(\"DNS_COUNTER\", 1);\r",
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
									"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
									"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
									"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
									" } else { \r",
									"\r",
									"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
									"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0678dc91-9bb1-404a-901b-abdaeeaf7a63",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ab229202-1d53-4f66-9356-6857ff7a2e02",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4fa13d16-19b5-419d-b9dd-205c8ad330d8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PSP",
			"item": [
				{
					"name": "start PSP",
					"item": [
						{
							"name": "start-psp-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6ccb62b0-32bc-47a8-b5ff-8fb1bbbdf353",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Deleting APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Proceeding to deletion of APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-psp-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-psp-\"+VS);\r",
											"}\r",
											"\r",
											"setTimeout(function(){}, 2000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "046e4ca7-623f-44ae-925f-bae3a9dfca1f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bf76389c-9a5c-4195-887a-88143a03d133",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7edf9ed5-be8c-4ddb-a7ac-2edcea2af337",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Profile/Policy",
					"item": [
						{
							"name": "bigip-delete-profile-psp",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "31b6ff04-6b33-436e-a9c0-e380c21a0b88",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Profile \"+VS_NAME+\"-psp Deleted\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"Profile \"+VS_NAME+\"-psp Does Not Exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"\r",
											"setTimeout(function(){}, 2000);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "434b23e2-2ba2-433b-92cf-93ad76661f9d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/~Common~{{VS_NAME}}-psp",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"profile",
										"access",
										"~Common~{{VS_NAME}}-psp"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-policy-psp",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "61b05667-978a-4007-8ed1-dbdce2fb043f",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Policy \"+VS_NAME+\"-psp deleted\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"Policy \"+VS_NAME+\"-psp does not exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9d1a88e3-1d45-46a9-9720-c1c9acdb2095",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/access-policy/~Common~{{VS_NAME}}-psp",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"access-policy",
										"~Common~{{VS_NAME}}-psp"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End PSP",
					"item": [
						{
							"name": "end-psp-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fd0d7692-5410-4dea-9d61-bc9fc36b0999",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2a3c5852-fd64-479f-a035-bd70c3f62429",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6e57c233-f2fc-4948-8290-4d54eb890e46",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6f3d72b9-9466-4d72-828e-feb0eee4408b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "APM Objects",
			"item": [
				{
					"name": "start APM objects",
					"item": [
						{
							"name": "start-apm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "104099a9-b2c4-4aa9-a6d0-9fd88474b945",
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Deleting APM objects for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Proceedibg to Deletion of  Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-apm-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-apm-\"+VS);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "08c35f35-d63a-425c-ac9c-7bc62a9e599b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "AAA AD Servers",
					"item": [
						{
							"name": "bigip-delete-AAA AD",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dc96c4a5-12b8-41c1-ae66-56ee3cd3f8f7",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"AAA AD Servers \"+VS_NAME+\"-ad-servers deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else ",
											"    pm.test(\"AAA AD Servers \"+VS_NAME+\"-ad-servers does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cfac4fa1-5c1f-4bee-8802-7bc6efc9bcdc",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/active-directory/~Common~{{VS_NAME}}-ad-servers",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"aaa",
										"active-directory",
										"~Common~{{VS_NAME}}-ad-servers"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-AD server pool",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "78093e5b-f857-4406-83a6-503ac58b0ca5",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"Pool \"+VS_NAME+\"-ad-pool Deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else ",
											"    pm.test(\"Pool \"+VS_NAME+\"-ad-pool does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/pool/~Common~{{VS_NAME}}-ad-pool",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"pool",
										"~Common~{{VS_NAME}}-ad-pool"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-node",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ea848f6f-4650-493c-b8cc-940f4b1b704e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "06fb93db-3b1d-42a2-9de1-6ecf5a610822",
										"exec": [
											"if (responseCode.code === 200) {",
											"    pm.test(\"Node 10.1.20.7 deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else if (responseCode.code === 404) { ",
											"    pm.test(\"Node 10.1.20.7 does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"} else if (responseCode.code === 400) {",
											"    pm.test(\"Unable to delete node 10.1.20.7. Still in use\", function () {",
											"        pm.expect(pm.response.text()).to.include(\"member of pool\");",
											"    });",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/node/10.1.20.7",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"node",
										"10.1.20.7"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "OAuth Profile",
					"item": [
						{
							"name": "bigip-delete-oauth profile",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ca1368a5-2025-4288-8034-6e10542a58b9",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "90c2816e-7198-49d5-8c35-bd7b5b15ec4e",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"OAuth Profile \"+VS_NAME+\"-oauth deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else  { ",
											"    pm.test(\"OAuth Profile \"+VS_NAME+\"-oauth does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"} ",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/oauth/~Common~{{VS_NAME}}-oauth",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"profile",
										"oauth",
										"~Common~{{VS_NAME}}-oauth"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "JWK",
					"item": [
						{
							"name": "bigip-delete-jwk",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "04b462f1-e63c-4661-ad32-1cb079f2a44e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa23aafa-1c0a-4766-8a92-e72e095f7a94",
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"JWK \"+VS_NAME+\"-jwk deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else  { ",
											"    pm.test(\"JWK \"+VS_NAME+\"-jwk does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"} ",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/oauth/jwk-config/~Common~{{VS_NAME}}-jwk",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"oauth",
										"jwk-config",
										"~Common~{{VS_NAME}}-jwk"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-cert-ca.acme.com",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "135b8e59-10f0-4f1c-9dbe-219405f5a4b0",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "814ce9e3-a0e8-445f-9bc0-052deb436f04",
										"exec": [
											"if (responseCode.code === 200) {",
											"    pm.test(\"Certificate ca.acme.com deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else  { ",
											"    pm.test(\"Certificate ca.acme.com does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"} ",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/sys/crypto/cert/~Common~ca.acme.com",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"sys",
										"crypto",
										"cert",
										"~Common~ca.acme.com"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "End APM Objects",
					"item": [
						{
							"name": "end-apm-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a62d06f1-115c-428a-a581-301c546c78a2",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3dff79cd-528c-4e8b-a0db-b8df94ec49a0",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1493b811-d0be-4ecc-99f8-1ea634f36c84",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a5043a52-ac89-422f-9786-2582775714a6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "End Loop - Imperative Calls",
			"item": [
				{
					"name": "loop-objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c1e63fe-2ae1-4cf9-96eb-976ec684156a",
								"exec": [
									"var VIPS = pm.collectionVariables.get(\"VIPS\");",
									"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\")",
									"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
									"",
									"if (VS_COUNTER < VIPS ) {",
									"    pm.test(\"Objects for Virutal Server \"+VS_NAME+\" deleted.  Creating loop for next virtual server \" , function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    VS_COUNTER++",
									"pm.collectionVariables.set(\"VS_COUNTER\", VS_COUNTER)",
									"postman.setNextRequest(\"start-objects\");",
									"",
									"",
									"} else {",
									"    pm.test(\"Objects for Virtual Server \"+VS_NAME+\" deleted.  All objects deleted\" , function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"  pm.collectionVariables.set(\"VS_COUNTER\", 1)",
									"}",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b5b03a93-9473-49c8-9cab-e0bdd5cd44a9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8a260ff6-a32b-421d-80f5-7ceffa923b6c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "639c7331-3bbe-4ad2-9073-62595b3ee9c5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "End Loop Datacenters",
			"item": [
				{
					"name": "loop",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00d9401c-d0aa-4ad9-bd2b-d5e12e7193ed",
								"exec": [
									"var DC2_APM = pm.environment.get(\"DC2_APM\");",
									"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
									"",
									"if (DC2_APM === 'true' && DC_COUNTER === '1') {",
									"postman.setNextRequest(\"start\");",
									"pm.collectionVariables.set('DC_COUNTER', '2' );",
									"",
									"pm.test(\"Application deleted in DC1. Beginning DC2 Deletion\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"} else if (DC2_APM === 'false' && DC_COUNTER === '1') {",
									"pm.test(\"Application deleted in DC1 \", function () {",
									"    pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"false\");",
									"});",
									"",
									"} else {",
									"pm.test(\"Application deleted in DC2 \", function () {",
									"    pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"true\");",
									"});",
									"pm.collectionVariables.set('DC_COUNTER', '1' );",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "959383cc-6354-4b33-bb00-fed1d4ba97b8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{BIGIP_MGMT}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "94b89ee3-48d4-4fbc-a877-22134bf96311",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "4df9dd0d-03de-43d4-934c-7b11af68e5dc",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}